@GenModel(documentation="<![CDATA[

  This schema expresses XML markup similar to the BibTeX language
  specified for LaTeX, or actually its content model.
  For documentation on BibTeX, see
    http://www.ctan.org/tex-archive/biblio/bibtex/distribs/doc/

  Suggested invocation:

    <?xml version=\"1.0\" encoding=\"UTF-8\"?>
    <bibtex:file xmlns:bibtex=\"http://bibtexml.sf.net/
          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"
          xsi:schemaLocation=\"http://bibtexml.sf.net/ bibtexml.xsd\">
    ...
    </bibtex:file>

  Available from  http://bibtexml.sf.net/

  This code originally developed by
    Vidar Bronken Gundersen
    Zeger W. Hendrikse

  This program is free software; you can redistribute it and/or
  modify it under the terms of the GNU General Public License.
  See  http://www.gnu.org/copyleft/gpl.html

  Todo:
    Make fully modular and reusable.

  ]]>")
@namespace(uri="http://bibtexml.sf.net/", prefix="bibtexml")
package bibtexml;

import "http://www.eclipse.org/emf/2003/XMLType";

@ExtendedMetaData(name="article_._type", kind="elementOnly")
class ArticleType {

	@GenModel(documentation="
[author] The name(s) of the author(s),
  in the format described in the LaTeX book.")
	@ExtendedMetaData(kind="element", name="author", namespace="##targetNamespace")
	attr type.String[1] author;

	@GenModel(documentation="
[title] The work's title, typed as explained in the LaTeX book.
      ")
	@ExtendedMetaData(kind="element", name="title", namespace="##targetNamespace")
	attr type.String[1] title;

	@GenModel(documentation="
[journal] A journal name.  Abbreviations are provided for many
  journals; see the Local Guide.
      ")
	@ExtendedMetaData(kind="element", name="journal", namespace="##targetNamespace")
	attr type.String[1] journal;

	@GenModel(documentation="
[year] The year of publication or, for an unpublished work, the year
  it was written.  Generally it should consist of four numerals, such as
  1984, although the standard styles can handle any year whose last four
  nonpunctuation characters are numerals, such as `(about 1984)'.
  The schema will restrict validation of the year to four numerals,
  as such a type is pre-defined in XML Schema.
      ")
	@ExtendedMetaData(kind="element", name="year", namespace="##targetNamespace")
	attr type.GYear[1] year;

	@GenModel(documentation="
[volume] The volume of a journal or multivolume book.
      ")
	@ExtendedMetaData(kind="element", name="volume", namespace="##targetNamespace")
	attr type.String volume;

	@GenModel(documentation="
[number] The number of a journal, magazine, technical report, or of a
  work in a series.  An issue of a journal or magazine is usually
  identified by its volume and number; the organization that issues a
  technical report usually gives it a number; and sometimes books are
  given numbers in a named series.")
	@ExtendedMetaData(kind="element", name="number", namespace="##targetNamespace")
	attr type.String number;

	@GenModel(documentation="
[pages] One or more page numbers or range of numbers, such as 42-111
  or 7,41,73-97 or 43+ (the `+' in this last example indicates pages
  following that don't form a simple range).  To make it easier to
  maintain Scribe-compatible databases, the standard styles convert a
  single dash (as in 7-33) to the double dash used in TeX to denote
  number ranges (as in 7-33).")
	@ExtendedMetaData(kind="element", name="pages", namespace="##targetNamespace")
	attr PagesType pages;

	@GenModel(documentation="
[month] The month in which the work was published or, for an
  unpublished work, in which it was written. You should use the
  standard three-letter abbreviation, as described in Appendix B.1.3 of
  the LaTeX book.
  The schema also allows a two digit month format, e.g. 05 (for May).
      ")
	@ExtendedMetaData(kind="element", name="month", namespace="##targetNamespace")
	attr MonthType month;

	@GenModel(documentation="
[note] Any additional information that can help the reader.
  The first word should be capitalized.
      ")
	@ExtendedMetaData(kind="element", name="note", namespace="##targetNamespace")
	attr type.String note;

	@GenModel(documentation="
[key] Used for alphabetizing, cross referencing, and creating a label
  when the ``author'' information (described in Section [ref: ] is
  missing. This field should not be confused with the key that appears
  in the \cite command and at the beginning of the database entry.

  In addition to the fields listed above, each entry type also has
  an optional key field, used in some styles for alphabetizing, or
  for forming a \bibitem label. You should include a key field for
  any entry whose ``author'' information is missing;
      ")
	@ExtendedMetaData(kind="element", name="key", namespace="##targetNamespace")
	attr type.String key;

	@GenModel(documentation="
[crossref] The database key of the entry being cross referenced.
  BibTEX has a new cross-referencing feature, explained by an example.
    @INPROCEEDINGS(no-gnats,
        crossref = \"gg-proceedings\",
    @PROCEEDINGS(gg-proceedings,
      ")
	@ExtendedMetaData(kind="element", name="crossref", namespace="##targetNamespace")
	attr type.String crossref;

	@GenModel(documentation="
[DOI] The work's Digital Object Identifier.
      ")
	@ExtendedMetaData(kind="element", name="doi", namespace="##targetNamespace")
	attr type.String doi;

	@GenModel(documentation="
[URL] The work's Universal Resource Locator.
      ")
	@ExtendedMetaData(kind="element", name="url", namespace="##targetNamespace")
	attr type.String url;
}

@ExtendedMetaData(name="BibTeXML.entries.class", kind="elementOnly")
class BibTeXMLEntriesClass {

	@ExtendedMetaData(kind="element", name="article", namespace="##targetNamespace")
	!resolve val ArticleType article;

	@ExtendedMetaData(kind="element", name="book", namespace="##targetNamespace")
	!resolve val BookType book;

	@ExtendedMetaData(kind="element", name="booklet", namespace="##targetNamespace")
	!resolve val BookletType booklet;

	@ExtendedMetaData(kind="element", name="manual", namespace="##targetNamespace")
	!resolve val ManualType manual;

	@ExtendedMetaData(kind="element", name="techreport", namespace="##targetNamespace")
	!resolve val TechreportType techreport;

	@ExtendedMetaData(kind="element", name="mastersthesis", namespace="##targetNamespace")
	!resolve val MastersthesisType mastersthesis;

	@ExtendedMetaData(kind="element", name="phdthesis", namespace="##targetNamespace")
	!resolve val PhdthesisType phdthesis;

	@ExtendedMetaData(kind="element", name="inbook", namespace="##targetNamespace")
	!resolve val InbookType inbook;

	@ExtendedMetaData(kind="element", name="incollection", namespace="##targetNamespace")
	!resolve val IncollectionType incollection;

	@ExtendedMetaData(kind="element", name="proceedings", namespace="##targetNamespace")
	!resolve val ProceedingsType proceedings;

	@ExtendedMetaData(kind="element", name="inproceedings", namespace="##targetNamespace")
	!resolve val InproceedingsType inproceedings;

	@ExtendedMetaData(kind="element", name="conference", namespace="##targetNamespace")
	!resolve val ConferenceType conference;

	@ExtendedMetaData(kind="element", name="unpublished", namespace="##targetNamespace")
	!resolve val UnpublishedType unpublished;

	@ExtendedMetaData(kind="element", name="misc", namespace="##targetNamespace")
	!resolve val MiscType misc;
}

@ExtendedMetaData(name="BibTeXML.entryType", kind="elementOnly")
class BibTeXMLEntryType extends BibTeXMLEntriesClass {

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID[1] ~id;
}

@ExtendedMetaData(name="booklet_._type", kind="elementOnly")
class BookletType {

	@GenModel(documentation="
[author] The name(s) of the author(s),
  in the format described in the LaTeX book.")
	@ExtendedMetaData(kind="element", name="author", namespace="##targetNamespace")
	attr type.String author;

	@GenModel(documentation="
[title] The work's title, typed as explained in the LaTeX book.
      ")
	@ExtendedMetaData(kind="element", name="title", namespace="##targetNamespace")
	attr type.String[1] title;

	@GenModel(documentation="
[howpublished] How something strange has been published.
  The first word should be capitalized.
      ")
	@ExtendedMetaData(kind="element", name="howpublished", namespace="##targetNamespace")
	attr type.String howpublished;

	@GenModel(documentation="
[address] Usually the address of the publisher or other type of
  institution  For major publishing houses, van~Leunen recommends
  omitting the information entirely.  For small publishers, on the other
  hand, you can help the reader by giving the complete address.
      ")
	@ExtendedMetaData(kind="element", name="address", namespace="##targetNamespace")
	attr type.String address;

	@GenModel(documentation="
[month] The month in which the work was published or, for an
  unpublished work, in which it was written. You should use the
  standard three-letter abbreviation, as described in Appendix B.1.3 of
  the LaTeX book.
  The schema also allows a two digit month format, e.g. 05 (for May).
      ")
	@ExtendedMetaData(kind="element", name="month", namespace="##targetNamespace")
	attr MonthType month;

	@GenModel(documentation="
[year] The year of publication or, for an unpublished work, the year
  it was written.  Generally it should consist of four numerals, such as
  1984, although the standard styles can handle any year whose last four
  nonpunctuation characters are numerals, such as `(about 1984)'.
  The schema will restrict validation of the year to four numerals,
  as such a type is pre-defined in XML Schema.
      ")
	@ExtendedMetaData(kind="element", name="year", namespace="##targetNamespace")
	attr type.GYear year;

	@GenModel(documentation="
[note] Any additional information that can help the reader.
  The first word should be capitalized.
      ")
	@ExtendedMetaData(kind="element", name="note", namespace="##targetNamespace")
	attr type.String note;

	@GenModel(documentation="
[key] Used for alphabetizing, cross referencing, and creating a label
  when the ``author'' information (described in Section [ref: ] is
  missing. This field should not be confused with the key that appears
  in the \cite command and at the beginning of the database entry.

  In addition to the fields listed above, each entry type also has
  an optional key field, used in some styles for alphabetizing, or
  for forming a \bibitem label. You should include a key field for
  any entry whose ``author'' information is missing;
      ")
	@ExtendedMetaData(kind="element", name="key", namespace="##targetNamespace")
	attr type.String key;

	@GenModel(documentation="
[crossref] The database key of the entry being cross referenced.
  BibTEX has a new cross-referencing feature, explained by an example.
    @INPROCEEDINGS(no-gnats,
        crossref = \"gg-proceedings\",
    @PROCEEDINGS(gg-proceedings,
      ")
	@ExtendedMetaData(kind="element", name="crossref", namespace="##targetNamespace")
	attr type.String crossref;

	@GenModel(documentation="
[DOI] The work's Digital Object Identifier.
      ")
	@ExtendedMetaData(kind="element", name="doi", namespace="##targetNamespace")
	attr type.String doi;

	@GenModel(documentation="
[URL] The work's Universal Resource Locator.
      ")
	@ExtendedMetaData(kind="element", name="url", namespace="##targetNamespace")
	attr type.String url;
}

@ExtendedMetaData(name="book_._type", kind="elementOnly")
class BookType {

	@GenModel(documentation="
[author] The name(s) of the author(s),
  in the format described in the LaTeX book.")
	@ExtendedMetaData(kind="element", name="author", namespace="##targetNamespace")
	attr type.String author;

	@GenModel(documentation="
[editor] Name(s) of editor(s), typed as indicated in the LaTeX book.
  If there is also an author field, then the editor field gives the
  editor of the book or collection in which the reference appears.
      ")
	@ExtendedMetaData(kind="element", name="editor", namespace="##targetNamespace")
	attr type.String editor;

	@GenModel(documentation="
[title] The work's title, typed as explained in the LaTeX book.
      ")
	@ExtendedMetaData(kind="element", name="title", namespace="##targetNamespace")
	attr type.String[1] title;

	@GenModel(documentation="
[publisher] The publisher's name.")
	@ExtendedMetaData(kind="element", name="publisher", namespace="##targetNamespace")
	attr type.String[1] publisher;

	@GenModel(documentation="
[year] The year of publication or, for an unpublished work, the year
  it was written.  Generally it should consist of four numerals, such as
  1984, although the standard styles can handle any year whose last four
  nonpunctuation characters are numerals, such as `(about 1984)'.
  The schema will restrict validation of the year to four numerals,
  as such a type is pre-defined in XML Schema.
      ")
	@ExtendedMetaData(kind="element", name="year", namespace="##targetNamespace")
	attr type.GYear[1] year;

	@GenModel(documentation="
[volume] The volume of a journal or multivolume book.
      ")
	@ExtendedMetaData(kind="element", name="volume", namespace="##targetNamespace")
	attr type.String volume;

	@GenModel(documentation="
[number] The number of a journal, magazine, technical report, or of a
  work in a series.  An issue of a journal or magazine is usually
  identified by its volume and number; the organization that issues a
  technical report usually gives it a number; and sometimes books are
  given numbers in a named series.")
	@ExtendedMetaData(kind="element", name="number", namespace="##targetNamespace")
	attr type.String number;

	@GenModel(documentation="
[series] The name of a series or set of books.  When citing an entire
  book, the the title field gives its title and an optional series field
  gives the name of a series or multi-volume set in which the book is
  published.")
	@ExtendedMetaData(kind="element", name="series", namespace="##targetNamespace")
	attr type.String series;

	@GenModel(documentation="
[address] Usually the address of the publisher or other type of
  institution  For major publishing houses, van~Leunen recommends
  omitting the information entirely.  For small publishers, on the other
  hand, you can help the reader by giving the complete address.
      ")
	@ExtendedMetaData(kind="element", name="address", namespace="##targetNamespace")
	attr type.String address;

	@GenModel(documentation="
[edition] The edition of a book-for example, ``Second''.  This
  should be an ordinal, and should have the first letter capitalized, as
  shown here; the standard styles convert to lower case when necessary.
      ")
	@ExtendedMetaData(kind="element", name="edition", namespace="##targetNamespace")
	attr EditionType edition;

	@GenModel(documentation="
[month] The month in which the work was published or, for an
  unpublished work, in which it was written. You should use the
  standard three-letter abbreviation, as described in Appendix B.1.3 of
  the LaTeX book.
  The schema also allows a two digit month format, e.g. 05 (for May).
      ")
	@ExtendedMetaData(kind="element", name="month", namespace="##targetNamespace")
	attr MonthType month;

	@GenModel(documentation="
[note] Any additional information that can help the reader.
  The first word should be capitalized.
      ")
	@ExtendedMetaData(kind="element", name="note", namespace="##targetNamespace")
	attr type.String note;

	@GenModel(documentation="
[key] Used for alphabetizing, cross referencing, and creating a label
  when the ``author'' information (described in Section [ref: ] is
  missing. This field should not be confused with the key that appears
  in the \cite command and at the beginning of the database entry.

  In addition to the fields listed above, each entry type also has
  an optional key field, used in some styles for alphabetizing, or
  for forming a \bibitem label. You should include a key field for
  any entry whose ``author'' information is missing;
      ")
	@ExtendedMetaData(kind="element", name="key", namespace="##targetNamespace")
	attr type.String key;

	@GenModel(documentation="
[crossref] The database key of the entry being cross referenced.
  BibTEX has a new cross-referencing feature, explained by an example.
    @INPROCEEDINGS(no-gnats,
        crossref = \"gg-proceedings\",
    @PROCEEDINGS(gg-proceedings,
      ")
	@ExtendedMetaData(kind="element", name="crossref", namespace="##targetNamespace")
	attr type.String crossref;

	@GenModel(documentation="
[DOI] The work's Digital Object Identifier.
      ")
	@ExtendedMetaData(kind="element", name="doi", namespace="##targetNamespace")
	attr type.String doi;

	@GenModel(documentation="
[URL] The work's Universal Resource Locator.
      ")
	@ExtendedMetaData(kind="element", name="url", namespace="##targetNamespace")
	attr type.String url;
}

@ExtendedMetaData(name="conference_._type", kind="elementOnly")
class ConferenceType {

	@GenModel(documentation="
[author] The name(s) of the author(s),
  in the format described in the LaTeX book.")
	@ExtendedMetaData(kind="element", name="author", namespace="##targetNamespace")
	attr type.String[1] author;

	@GenModel(documentation="
[title] The work's title, typed as explained in the LaTeX book.
      ")
	@ExtendedMetaData(kind="element", name="title", namespace="##targetNamespace")
	attr type.String[1] title;

	@GenModel(documentation="
[booktitle] Title of a book, part of which is being cited.  See the
  LaTeX book for how to type titles.  For book entries, use the title
  field instead.")
	@ExtendedMetaData(kind="element", name="booktitle", namespace="##targetNamespace")
	attr type.String[1] booktitle;

	@GenModel(documentation="
[year] The year of publication or, for an unpublished work, the year
  it was written.  Generally it should consist of four numerals, such as
  1984, although the standard styles can handle any year whose last four
  nonpunctuation characters are numerals, such as `(about 1984)'.
  The schema will restrict validation of the year to four numerals,
  as such a type is pre-defined in XML Schema.
      ")
	@ExtendedMetaData(kind="element", name="year", namespace="##targetNamespace")
	attr type.GYear[1] year;

	@GenModel(documentation="
[editor] Name(s) of editor(s), typed as indicated in the LaTeX book.
  If there is also an author field, then the editor field gives the
  editor of the book or collection in which the reference appears.
      ")
	@ExtendedMetaData(kind="element", name="editor", namespace="##targetNamespace")
	attr type.String editor;

	@GenModel(documentation="
[volume] The volume of a journal or multivolume book.
      ")
	@ExtendedMetaData(kind="element", name="volume", namespace="##targetNamespace")
	attr type.String volume;

	@GenModel(documentation="
[number] The number of a journal, magazine, technical report, or of a
  work in a series.  An issue of a journal or magazine is usually
  identified by its volume and number; the organization that issues a
  technical report usually gives it a number; and sometimes books are
  given numbers in a named series.")
	@ExtendedMetaData(kind="element", name="number", namespace="##targetNamespace")
	attr type.String number;

	@GenModel(documentation="
[series] The name of a series or set of books.  When citing an entire
  book, the the title field gives its title and an optional series field
  gives the name of a series or multi-volume set in which the book is
  published.")
	@ExtendedMetaData(kind="element", name="series", namespace="##targetNamespace")
	attr type.String series;

	@GenModel(documentation="
[pages] One or more page numbers or range of numbers, such as 42-111
  or 7,41,73-97 or 43+ (the `+' in this last example indicates pages
  following that don't form a simple range).  To make it easier to
  maintain Scribe-compatible databases, the standard styles convert a
  single dash (as in 7-33) to the double dash used in TeX to denote
  number ranges (as in 7-33).")
	@ExtendedMetaData(kind="element", name="pages", namespace="##targetNamespace")
	attr PagesType pages;

	@GenModel(documentation="
[address] Usually the address of the publisher or other type of
  institution  For major publishing houses, van~Leunen recommends
  omitting the information entirely.  For small publishers, on the other
  hand, you can help the reader by giving the complete address.
      ")
	@ExtendedMetaData(kind="element", name="address", namespace="##targetNamespace")
	attr type.String address;

	@GenModel(documentation="
[month] The month in which the work was published or, for an
  unpublished work, in which it was written. You should use the
  standard three-letter abbreviation, as described in Appendix B.1.3 of
  the LaTeX book.
  The schema also allows a two digit month format, e.g. 05 (for May).
      ")
	@ExtendedMetaData(kind="element", name="month", namespace="##targetNamespace")
	attr MonthType month;

	@GenModel(documentation="
[organization] The organization that sponsors a conference or that
  publishes a manual.")
	@ExtendedMetaData(kind="element", name="organization", namespace="##targetNamespace")
	attr type.String organization;

	@GenModel(documentation="
[publisher] The publisher's name.")
	@ExtendedMetaData(kind="element", name="publisher", namespace="##targetNamespace")
	attr type.String publisher;

	@GenModel(documentation="
[note] Any additional information that can help the reader.
  The first word should be capitalized.
      ")
	@ExtendedMetaData(kind="element", name="note", namespace="##targetNamespace")
	attr type.String note;

	@GenModel(documentation="
[key] Used for alphabetizing, cross referencing, and creating a label
  when the ``author'' information (described in Section [ref: ] is
  missing. This field should not be confused with the key that appears
  in the \cite command and at the beginning of the database entry.

  In addition to the fields listed above, each entry type also has
  an optional key field, used in some styles for alphabetizing, or
  for forming a \bibitem label. You should include a key field for
  any entry whose ``author'' information is missing;
      ")
	@ExtendedMetaData(kind="element", name="key", namespace="##targetNamespace")
	attr type.String key;

	@GenModel(documentation="
[crossref] The database key of the entry being cross referenced.
  BibTEX has a new cross-referencing feature, explained by an example.
    @INPROCEEDINGS(no-gnats,
        crossref = \"gg-proceedings\",
    @PROCEEDINGS(gg-proceedings,
      ")
	@ExtendedMetaData(kind="element", name="crossref", namespace="##targetNamespace")
	attr type.String crossref;

	@GenModel(documentation="
[DOI] The work's Digital Object Identifier.
      ")
	@ExtendedMetaData(kind="element", name="doi", namespace="##targetNamespace")
	attr type.String doi;

	@GenModel(documentation="
[URL] The work's Universal Resource Locator.
      ")
	@ExtendedMetaData(kind="element", name="url", namespace="##targetNamespace")
	attr type.String url;
}

@ExtendedMetaData(name="", kind="mixed")
class DocumentRoot {

	@ExtendedMetaData(kind="elementWildcard", name=":mixed")
	!unique attr ecore.EFeatureMapEntry[*] mixed;

	@ExtendedMetaData(kind="attribute", name="xmlns:prefix")
	transient !resolve val ecore.EStringToStringMapEntry[*] xMLNSPrefixMap;

	@ExtendedMetaData(kind="attribute", name="xsi:schemaLocation")
	transient !resolve val ecore.EStringToStringMapEntry[*] xSISchemaLocation;

	@GenModel(documentation="
[address] Usually the address of the publisher or other type of
  institution  For major publishing houses, van~Leunen recommends
  omitting the information entirely.  For small publishers, on the other
  hand, you can help the reader by giving the complete address.
      ")
	@ExtendedMetaData(kind="element", name="address", namespace="##targetNamespace")
	!unique volatile transient derived attr type.String[0..?] address;

	@GenModel(documentation="
[annote] An annotation  It is not used by the standard bibliography
  styles, but may be used by others that produce an annotated
  bibliography.

      Annotation is not used by the standard bibliography styles,
      if you prefer otherwise, incude it in BibTeXML.common.fields.class
      ")
	@ExtendedMetaData(kind="element", name="annote", namespace="##targetNamespace")
	!unique volatile transient derived attr type.String[0..?] annote;

	@ExtendedMetaData(kind="element", name="article", namespace="##targetNamespace")
	volatile transient derived !resolve val ArticleType[0..?] article;

	@GenModel(documentation="
[author] The name(s) of the author(s),
  in the format described in the LaTeX book.")
	@ExtendedMetaData(kind="element", name="author", namespace="##targetNamespace")
	!unique volatile transient derived attr type.String[0..?] author;

	@ExtendedMetaData(kind="element", name="book", namespace="##targetNamespace")
	volatile transient derived !resolve val BookType[0..?] book;

	@ExtendedMetaData(kind="element", name="booklet", namespace="##targetNamespace")
	volatile transient derived !resolve val BookletType[0..?] booklet;

	@GenModel(documentation="
[booktitle] Title of a book, part of which is being cited.  See the
  LaTeX book for how to type titles.  For book entries, use the title
  field instead.")
	@ExtendedMetaData(kind="element", name="booktitle", namespace="##targetNamespace")
	!unique volatile transient derived attr type.String[0..?] booktitle;

	@GenModel(documentation="
[chapter] A chapter (or section or whatever) number.
      ")
	@ExtendedMetaData(kind="element", name="chapter", namespace="##targetNamespace")
	!unique volatile transient derived attr type.PositiveInteger[0..?] chapter;

	@ExtendedMetaData(kind="element", name="conference", namespace="##targetNamespace")
	volatile transient derived !resolve val ConferenceType[0..?] conference;

	@GenModel(documentation="
[crossref] The database key of the entry being cross referenced.
  BibTEX has a new cross-referencing feature, explained by an example.
    @INPROCEEDINGS(no-gnats,
        crossref = \"gg-proceedings\",
    @PROCEEDINGS(gg-proceedings,
      ")
	@ExtendedMetaData(kind="element", name="crossref", namespace="##targetNamespace")
	!unique volatile transient derived attr type.String[0..?] crossref;

	@GenModel(documentation="
[DOI] The work's Digital Object Identifier.
      ")
	@ExtendedMetaData(kind="element", name="doi", namespace="##targetNamespace")
	!unique volatile transient derived attr type.String[0..?] doi;

	@GenModel(documentation="
[edition] The edition of a book-for example, ``Second''.  This
  should be an ordinal, and should have the first letter capitalized, as
  shown here; the standard styles convert to lower case when necessary.
      ")
	@ExtendedMetaData(kind="element", name="edition", namespace="##targetNamespace")
	!unique volatile transient derived attr EditionType[0..?] edition;

	@GenModel(documentation="
[editor] Name(s) of editor(s), typed as indicated in the LaTeX book.
  If there is also an author field, then the editor field gives the
  editor of the book or collection in which the reference appears.
      ")
	@ExtendedMetaData(kind="element", name="editor", namespace="##targetNamespace")
	!unique volatile transient derived attr type.String[0..?] editor;

	@ExtendedMetaData(kind="element", name="entry", namespace="##targetNamespace")
	volatile transient derived !resolve val BibTeXMLEntryType[0..?] entry;

	@ExtendedMetaData(kind="element", name="file", namespace="##targetNamespace")
	volatile transient derived !resolve val FileType[0..?] file;

	@GenModel(documentation="
[howpublished] How something strange has been published.
  The first word should be capitalized.
      ")
	@ExtendedMetaData(kind="element", name="howpublished", namespace="##targetNamespace")
	!unique volatile transient derived attr type.String[0..?] howpublished;

	@ExtendedMetaData(kind="element", name="inbook", namespace="##targetNamespace")
	volatile transient derived !resolve val InbookType[0..?] inbook;

	@ExtendedMetaData(kind="element", name="incollection", namespace="##targetNamespace")
	volatile transient derived !resolve val IncollectionType[0..?] incollection;

	@ExtendedMetaData(kind="element", name="inproceedings", namespace="##targetNamespace")
	volatile transient derived !resolve val InproceedingsType[0..?] inproceedings;

	@GenModel(documentation="
[institution] The sponsoring institution of a technical report.
      ")
	@ExtendedMetaData(kind="element", name="institution", namespace="##targetNamespace")
	!unique volatile transient derived attr type.String[0..?] institution;

	@GenModel(documentation="
[journal] A journal name.  Abbreviations are provided for many
  journals; see the Local Guide.
      ")
	@ExtendedMetaData(kind="element", name="journal", namespace="##targetNamespace")
	!unique volatile transient derived attr type.String[0..?] journal;

	@GenModel(documentation="
[key] Used for alphabetizing, cross referencing, and creating a label
  when the ``author'' information (described in Section [ref: ] is
  missing. This field should not be confused with the key that appears
  in the \cite command and at the beginning of the database entry.

  In addition to the fields listed above, each entry type also has
  an optional key field, used in some styles for alphabetizing, or
  for forming a \bibitem label. You should include a key field for
  any entry whose ``author'' information is missing;
      ")
	@ExtendedMetaData(kind="element", name="key", namespace="##targetNamespace")
	!unique volatile transient derived attr type.String[0..?] key;

	@ExtendedMetaData(kind="element", name="manual", namespace="##targetNamespace")
	volatile transient derived !resolve val ManualType[0..?] manual;

	@ExtendedMetaData(kind="element", name="mastersthesis", namespace="##targetNamespace")
	volatile transient derived !resolve val MastersthesisType[0..?] mastersthesis;

	@ExtendedMetaData(kind="element", name="misc", namespace="##targetNamespace")
	volatile transient derived !resolve val MiscType[0..?] misc;

	@GenModel(documentation="
[month] The month in which the work was published or, for an
  unpublished work, in which it was written. You should use the
  standard three-letter abbreviation, as described in Appendix B.1.3 of
  the LaTeX book.
  The schema also allows a two digit month format, e.g. 05 (for May).
      ")
	@ExtendedMetaData(kind="element", name="month", namespace="##targetNamespace")
	!unique volatile transient derived attr MonthType[0..?] month;

	@GenModel(documentation="
[note] Any additional information that can help the reader.
  The first word should be capitalized.
      ")
	@ExtendedMetaData(kind="element", name="note", namespace="##targetNamespace")
	!unique volatile transient derived attr type.String[0..?] note;

	@GenModel(documentation="
[number] The number of a journal, magazine, technical report, or of a
  work in a series.  An issue of a journal or magazine is usually
  identified by its volume and number; the organization that issues a
  technical report usually gives it a number; and sometimes books are
  given numbers in a named series.")
	@ExtendedMetaData(kind="element", name="number", namespace="##targetNamespace")
	!unique volatile transient derived attr type.String[0..?] number;

	@GenModel(documentation="
[organization] The organization that sponsors a conference or that
  publishes a manual.")
	@ExtendedMetaData(kind="element", name="organization", namespace="##targetNamespace")
	!unique volatile transient derived attr type.String[0..?] organization;

	@GenModel(documentation="
[pages] One or more page numbers or range of numbers, such as 42-111
  or 7,41,73-97 or 43+ (the `+' in this last example indicates pages
  following that don't form a simple range).  To make it easier to
  maintain Scribe-compatible databases, the standard styles convert a
  single dash (as in 7-33) to the double dash used in TeX to denote
  number ranges (as in 7-33).")
	@ExtendedMetaData(kind="element", name="pages", namespace="##targetNamespace")
	!unique volatile transient derived attr PagesType[0..?] pages;

	@ExtendedMetaData(kind="element", name="phdthesis", namespace="##targetNamespace")
	volatile transient derived !resolve val PhdthesisType[0..?] phdthesis;

	@ExtendedMetaData(kind="element", name="proceedings", namespace="##targetNamespace")
	volatile transient derived !resolve val ProceedingsType[0..?] proceedings;

	@GenModel(documentation="
[publisher] The publisher's name.")
	@ExtendedMetaData(kind="element", name="publisher", namespace="##targetNamespace")
	!unique volatile transient derived attr type.String[0..?] publisher;

	@GenModel(documentation="
[school] The name of the school where a thesis was written
      ")
	@ExtendedMetaData(kind="element", name="school", namespace="##targetNamespace")
	!unique volatile transient derived attr type.String[0..?] school;

	@GenModel(documentation="
[series] The name of a series or set of books.  When citing an entire
  book, the the title field gives its title and an optional series field
  gives the name of a series or multi-volume set in which the book is
  published.")
	@ExtendedMetaData(kind="element", name="series", namespace="##targetNamespace")
	!unique volatile transient derived attr type.String[0..?] series;

	@ExtendedMetaData(kind="element", name="techreport", namespace="##targetNamespace")
	volatile transient derived !resolve val TechreportType[0..?] techreport;

	@GenModel(documentation="
[title] The work's title, typed as explained in the LaTeX book.
      ")
	@ExtendedMetaData(kind="element", name="title", namespace="##targetNamespace")
	!unique volatile transient derived attr type.String[0..?] title;

	@GenModel(documentation="
[type] The type of a technical report-for example, ``Research Note''.
      ")
	@ExtendedMetaData(kind="element", name="type", namespace="##targetNamespace")
	!unique volatile transient derived attr type.String[0..?] type;

	@ExtendedMetaData(kind="element", name="unpublished", namespace="##targetNamespace")
	volatile transient derived !resolve val UnpublishedType[0..?] unpublished;

	@GenModel(documentation="
[URL] The work's Universal Resource Locator.
      ")
	@ExtendedMetaData(kind="element", name="url", namespace="##targetNamespace")
	!unique volatile transient derived attr type.String[0..?] url;

	@GenModel(documentation="
[volume] The volume of a journal or multivolume book.
      ")
	@ExtendedMetaData(kind="element", name="volume", namespace="##targetNamespace")
	!unique volatile transient derived attr type.String[0..?] volume;

	@GenModel(documentation="
[year] The year of publication or, for an unpublished work, the year
  it was written.  Generally it should consist of four numerals, such as
  1984, although the standard styles can handle any year whose last four
  nonpunctuation characters are numerals, such as `(about 1984)'.
  The schema will restrict validation of the year to four numerals,
  as such a type is pre-defined in XML Schema.
      ")
	@ExtendedMetaData(kind="element", name="year", namespace="##targetNamespace")
	!unique volatile transient derived attr type.GYear[0..?] year;
}

@ExtendedMetaData(name="edition_._type", baseType="http://www.eclipse.org/emf/2003/XMLType#string", pattern="[A-Z].*")
datatype EditionType : java.lang.String;

@ExtendedMetaData(name="file_._type", kind="elementOnly")
class FileType {

	@ExtendedMetaData(kind="element", name="entry", namespace="##targetNamespace")
	!resolve val BibTeXMLEntryType[*] entry;
}

@ExtendedMetaData(name="inbook_._type", kind="elementOnly")
class InbookType {

	@GenModel(documentation="
[author] The name(s) of the author(s),
  in the format described in the LaTeX book.")
	@ExtendedMetaData(kind="element", name="author", namespace="##targetNamespace")
	attr type.String author;

	@GenModel(documentation="
[editor] Name(s) of editor(s), typed as indicated in the LaTeX book.
  If there is also an author field, then the editor field gives the
  editor of the book or collection in which the reference appears.
      ")
	@ExtendedMetaData(kind="element", name="editor", namespace="##targetNamespace")
	attr type.String editor;

	@GenModel(documentation="
[title] The work's title, typed as explained in the LaTeX book.
      ")
	@ExtendedMetaData(kind="element", name="title", namespace="##targetNamespace")
	attr type.String[1] title;

	@GenModel(documentation="
[chapter] A chapter (or section or whatever) number.
      ")
	@ExtendedMetaData(kind="element", name="chapter", namespace="##targetNamespace")
	attr type.PositiveInteger chapter;

	@GenModel(documentation="
[pages] One or more page numbers or range of numbers, such as 42-111
  or 7,41,73-97 or 43+ (the `+' in this last example indicates pages
  following that don't form a simple range).  To make it easier to
  maintain Scribe-compatible databases, the standard styles convert a
  single dash (as in 7-33) to the double dash used in TeX to denote
  number ranges (as in 7-33).")
	@ExtendedMetaData(kind="element", name="pages", namespace="##targetNamespace")
	attr PagesType pages;

	@GenModel(documentation="
[pages] One or more page numbers or range of numbers, such as 42-111
  or 7,41,73-97 or 43+ (the `+' in this last example indicates pages
  following that don't form a simple range).  To make it easier to
  maintain Scribe-compatible databases, the standard styles convert a
  single dash (as in 7-33) to the double dash used in TeX to denote
  number ranges (as in 7-33).")
	@ExtendedMetaData(kind="element", name="pages", namespace="##targetNamespace")
	attr PagesType pages1;

	@GenModel(documentation="
[publisher] The publisher's name.")
	@ExtendedMetaData(kind="element", name="publisher", namespace="##targetNamespace")
	attr type.String[1] publisher;

	@GenModel(documentation="
[year] The year of publication or, for an unpublished work, the year
  it was written.  Generally it should consist of four numerals, such as
  1984, although the standard styles can handle any year whose last four
  nonpunctuation characters are numerals, such as `(about 1984)'.
  The schema will restrict validation of the year to four numerals,
  as such a type is pre-defined in XML Schema.
      ")
	@ExtendedMetaData(kind="element", name="year", namespace="##targetNamespace")
	attr type.GYear[1] year;

	@GenModel(documentation="
[volume] The volume of a journal or multivolume book.
      ")
	@ExtendedMetaData(kind="element", name="volume", namespace="##targetNamespace")
	attr type.String volume;

	@GenModel(documentation="
[number] The number of a journal, magazine, technical report, or of a
  work in a series.  An issue of a journal or magazine is usually
  identified by its volume and number; the organization that issues a
  technical report usually gives it a number; and sometimes books are
  given numbers in a named series.")
	@ExtendedMetaData(kind="element", name="number", namespace="##targetNamespace")
	attr type.String number;

	@GenModel(documentation="
[series] The name of a series or set of books.  When citing an entire
  book, the the title field gives its title and an optional series field
  gives the name of a series or multi-volume set in which the book is
  published.")
	@ExtendedMetaData(kind="element", name="series", namespace="##targetNamespace")
	attr type.String series;

	@GenModel(documentation="
[type] The type of a technical report-for example, ``Research Note''.
      ")
	@ExtendedMetaData(kind="element", name="type", namespace="##targetNamespace")
	attr type.String type;

	@GenModel(documentation="
[address] Usually the address of the publisher or other type of
  institution  For major publishing houses, van~Leunen recommends
  omitting the information entirely.  For small publishers, on the other
  hand, you can help the reader by giving the complete address.
      ")
	@ExtendedMetaData(kind="element", name="address", namespace="##targetNamespace")
	attr type.String address;

	@GenModel(documentation="
[edition] The edition of a book-for example, ``Second''.  This
  should be an ordinal, and should have the first letter capitalized, as
  shown here; the standard styles convert to lower case when necessary.
      ")
	@ExtendedMetaData(kind="element", name="edition", namespace="##targetNamespace")
	attr EditionType edition;

	@GenModel(documentation="
[month] The month in which the work was published or, for an
  unpublished work, in which it was written. You should use the
  standard three-letter abbreviation, as described in Appendix B.1.3 of
  the LaTeX book.
  The schema also allows a two digit month format, e.g. 05 (for May).
      ")
	@ExtendedMetaData(kind="element", name="month", namespace="##targetNamespace")
	attr MonthType month;

	@GenModel(documentation="
[note] Any additional information that can help the reader.
  The first word should be capitalized.
      ")
	@ExtendedMetaData(kind="element", name="note", namespace="##targetNamespace")
	attr type.String note;

	@GenModel(documentation="
[key] Used for alphabetizing, cross referencing, and creating a label
  when the ``author'' information (described in Section [ref: ] is
  missing. This field should not be confused with the key that appears
  in the \cite command and at the beginning of the database entry.

  In addition to the fields listed above, each entry type also has
  an optional key field, used in some styles for alphabetizing, or
  for forming a \bibitem label. You should include a key field for
  any entry whose ``author'' information is missing;
      ")
	@ExtendedMetaData(kind="element", name="key", namespace="##targetNamespace")
	attr type.String key;

	@GenModel(documentation="
[crossref] The database key of the entry being cross referenced.
  BibTEX has a new cross-referencing feature, explained by an example.
    @INPROCEEDINGS(no-gnats,
        crossref = \"gg-proceedings\",
    @PROCEEDINGS(gg-proceedings,
      ")
	@ExtendedMetaData(kind="element", name="crossref", namespace="##targetNamespace")
	attr type.String crossref;

	@GenModel(documentation="
[DOI] The work's Digital Object Identifier.
      ")
	@ExtendedMetaData(kind="element", name="doi", namespace="##targetNamespace")
	attr type.String doi;

	@GenModel(documentation="
[URL] The work's Universal Resource Locator.
      ")
	@ExtendedMetaData(kind="element", name="url", namespace="##targetNamespace")
	attr type.String url;
}

@ExtendedMetaData(name="incollection_._type", kind="elementOnly")
class IncollectionType {

	@GenModel(documentation="
[author] The name(s) of the author(s),
  in the format described in the LaTeX book.")
	@ExtendedMetaData(kind="element", name="author", namespace="##targetNamespace")
	attr type.String[1] author;

	@GenModel(documentation="
[title] The work's title, typed as explained in the LaTeX book.
      ")
	@ExtendedMetaData(kind="element", name="title", namespace="##targetNamespace")
	attr type.String[1] title;

	@GenModel(documentation="
[booktitle] Title of a book, part of which is being cited.  See the
  LaTeX book for how to type titles.  For book entries, use the title
  field instead.")
	@ExtendedMetaData(kind="element", name="booktitle", namespace="##targetNamespace")
	attr type.String[1] booktitle;

	@GenModel(documentation="
[publisher] The publisher's name.")
	@ExtendedMetaData(kind="element", name="publisher", namespace="##targetNamespace")
	attr type.String[1] publisher;

	@GenModel(documentation="
[year] The year of publication or, for an unpublished work, the year
  it was written.  Generally it should consist of four numerals, such as
  1984, although the standard styles can handle any year whose last four
  nonpunctuation characters are numerals, such as `(about 1984)'.
  The schema will restrict validation of the year to four numerals,
  as such a type is pre-defined in XML Schema.
      ")
	@ExtendedMetaData(kind="element", name="year", namespace="##targetNamespace")
	attr type.GYear[1] year;

	@GenModel(documentation="
[editor] Name(s) of editor(s), typed as indicated in the LaTeX book.
  If there is also an author field, then the editor field gives the
  editor of the book or collection in which the reference appears.
      ")
	@ExtendedMetaData(kind="element", name="editor", namespace="##targetNamespace")
	attr type.String editor;

	@GenModel(documentation="
[volume] The volume of a journal or multivolume book.
      ")
	@ExtendedMetaData(kind="element", name="volume", namespace="##targetNamespace")
	attr type.String volume;

	@GenModel(documentation="
[number] The number of a journal, magazine, technical report, or of a
  work in a series.  An issue of a journal or magazine is usually
  identified by its volume and number; the organization that issues a
  technical report usually gives it a number; and sometimes books are
  given numbers in a named series.")
	@ExtendedMetaData(kind="element", name="number", namespace="##targetNamespace")
	attr type.String number;

	@GenModel(documentation="
[series] The name of a series or set of books.  When citing an entire
  book, the the title field gives its title and an optional series field
  gives the name of a series or multi-volume set in which the book is
  published.")
	@ExtendedMetaData(kind="element", name="series", namespace="##targetNamespace")
	attr type.String series;

	@GenModel(documentation="
[type] The type of a technical report-for example, ``Research Note''.
      ")
	@ExtendedMetaData(kind="element", name="type", namespace="##targetNamespace")
	attr type.String type;

	@GenModel(documentation="
[chapter] A chapter (or section or whatever) number.
      ")
	@ExtendedMetaData(kind="element", name="chapter", namespace="##targetNamespace")
	attr type.PositiveInteger chapter;

	@GenModel(documentation="
[pages] One or more page numbers or range of numbers, such as 42-111
  or 7,41,73-97 or 43+ (the `+' in this last example indicates pages
  following that don't form a simple range).  To make it easier to
  maintain Scribe-compatible databases, the standard styles convert a
  single dash (as in 7-33) to the double dash used in TeX to denote
  number ranges (as in 7-33).")
	@ExtendedMetaData(kind="element", name="pages", namespace="##targetNamespace")
	attr PagesType pages;

	@GenModel(documentation="
[address] Usually the address of the publisher or other type of
  institution  For major publishing houses, van~Leunen recommends
  omitting the information entirely.  For small publishers, on the other
  hand, you can help the reader by giving the complete address.
      ")
	@ExtendedMetaData(kind="element", name="address", namespace="##targetNamespace")
	attr type.String address;

	@GenModel(documentation="
[edition] The edition of a book-for example, ``Second''.  This
  should be an ordinal, and should have the first letter capitalized, as
  shown here; the standard styles convert to lower case when necessary.
      ")
	@ExtendedMetaData(kind="element", name="edition", namespace="##targetNamespace")
	attr EditionType edition;

	@GenModel(documentation="
[month] The month in which the work was published or, for an
  unpublished work, in which it was written. You should use the
  standard three-letter abbreviation, as described in Appendix B.1.3 of
  the LaTeX book.
  The schema also allows a two digit month format, e.g. 05 (for May).
      ")
	@ExtendedMetaData(kind="element", name="month", namespace="##targetNamespace")
	attr MonthType month;

	@GenModel(documentation="
[note] Any additional information that can help the reader.
  The first word should be capitalized.
      ")
	@ExtendedMetaData(kind="element", name="note", namespace="##targetNamespace")
	attr type.String note;

	@GenModel(documentation="
[key] Used for alphabetizing, cross referencing, and creating a label
  when the ``author'' information (described in Section [ref: ] is
  missing. This field should not be confused with the key that appears
  in the \cite command and at the beginning of the database entry.

  In addition to the fields listed above, each entry type also has
  an optional key field, used in some styles for alphabetizing, or
  for forming a \bibitem label. You should include a key field for
  any entry whose ``author'' information is missing;
      ")
	@ExtendedMetaData(kind="element", name="key", namespace="##targetNamespace")
	attr type.String key;

	@GenModel(documentation="
[crossref] The database key of the entry being cross referenced.
  BibTEX has a new cross-referencing feature, explained by an example.
    @INPROCEEDINGS(no-gnats,
        crossref = \"gg-proceedings\",
    @PROCEEDINGS(gg-proceedings,
      ")
	@ExtendedMetaData(kind="element", name="crossref", namespace="##targetNamespace")
	attr type.String crossref;

	@GenModel(documentation="
[DOI] The work's Digital Object Identifier.
      ")
	@ExtendedMetaData(kind="element", name="doi", namespace="##targetNamespace")
	attr type.String doi;

	@GenModel(documentation="
[URL] The work's Universal Resource Locator.
      ")
	@ExtendedMetaData(kind="element", name="url", namespace="##targetNamespace")
	attr type.String url;
}

@ExtendedMetaData(name="inproceedings_._type", kind="elementOnly")
class InproceedingsType {

	@GenModel(documentation="
[author] The name(s) of the author(s),
  in the format described in the LaTeX book.")
	@ExtendedMetaData(kind="element", name="author", namespace="##targetNamespace")
	attr type.String[1] author;

	@GenModel(documentation="
[title] The work's title, typed as explained in the LaTeX book.
      ")
	@ExtendedMetaData(kind="element", name="title", namespace="##targetNamespace")
	attr type.String[1] title;

	@GenModel(documentation="
[booktitle] Title of a book, part of which is being cited.  See the
  LaTeX book for how to type titles.  For book entries, use the title
  field instead.")
	@ExtendedMetaData(kind="element", name="booktitle", namespace="##targetNamespace")
	attr type.String[1] booktitle;

	@GenModel(documentation="
[year] The year of publication or, for an unpublished work, the year
  it was written.  Generally it should consist of four numerals, such as
  1984, although the standard styles can handle any year whose last four
  nonpunctuation characters are numerals, such as `(about 1984)'.
  The schema will restrict validation of the year to four numerals,
  as such a type is pre-defined in XML Schema.
      ")
	@ExtendedMetaData(kind="element", name="year", namespace="##targetNamespace")
	attr type.GYear[1] year;

	@GenModel(documentation="
[editor] Name(s) of editor(s), typed as indicated in the LaTeX book.
  If there is also an author field, then the editor field gives the
  editor of the book or collection in which the reference appears.
      ")
	@ExtendedMetaData(kind="element", name="editor", namespace="##targetNamespace")
	attr type.String editor;

	@GenModel(documentation="
[volume] The volume of a journal or multivolume book.
      ")
	@ExtendedMetaData(kind="element", name="volume", namespace="##targetNamespace")
	attr type.String volume;

	@GenModel(documentation="
[number] The number of a journal, magazine, technical report, or of a
  work in a series.  An issue of a journal or magazine is usually
  identified by its volume and number; the organization that issues a
  technical report usually gives it a number; and sometimes books are
  given numbers in a named series.")
	@ExtendedMetaData(kind="element", name="number", namespace="##targetNamespace")
	attr type.String number;

	@GenModel(documentation="
[series] The name of a series or set of books.  When citing an entire
  book, the the title field gives its title and an optional series field
  gives the name of a series or multi-volume set in which the book is
  published.")
	@ExtendedMetaData(kind="element", name="series", namespace="##targetNamespace")
	attr type.String series;

	@GenModel(documentation="
[pages] One or more page numbers or range of numbers, such as 42-111
  or 7,41,73-97 or 43+ (the `+' in this last example indicates pages
  following that don't form a simple range).  To make it easier to
  maintain Scribe-compatible databases, the standard styles convert a
  single dash (as in 7-33) to the double dash used in TeX to denote
  number ranges (as in 7-33).")
	@ExtendedMetaData(kind="element", name="pages", namespace="##targetNamespace")
	attr PagesType pages;

	@GenModel(documentation="
[address] Usually the address of the publisher or other type of
  institution  For major publishing houses, van~Leunen recommends
  omitting the information entirely.  For small publishers, on the other
  hand, you can help the reader by giving the complete address.
      ")
	@ExtendedMetaData(kind="element", name="address", namespace="##targetNamespace")
	attr type.String address;

	@GenModel(documentation="
[month] The month in which the work was published or, for an
  unpublished work, in which it was written. You should use the
  standard three-letter abbreviation, as described in Appendix B.1.3 of
  the LaTeX book.
  The schema also allows a two digit month format, e.g. 05 (for May).
      ")
	@ExtendedMetaData(kind="element", name="month", namespace="##targetNamespace")
	attr MonthType month;

	@GenModel(documentation="
[organization] The organization that sponsors a conference or that
  publishes a manual.")
	@ExtendedMetaData(kind="element", name="organization", namespace="##targetNamespace")
	attr type.String organization;

	@GenModel(documentation="
[publisher] The publisher's name.")
	@ExtendedMetaData(kind="element", name="publisher", namespace="##targetNamespace")
	attr type.String publisher;

	@GenModel(documentation="
[note] Any additional information that can help the reader.
  The first word should be capitalized.
      ")
	@ExtendedMetaData(kind="element", name="note", namespace="##targetNamespace")
	attr type.String note;

	@GenModel(documentation="
[key] Used for alphabetizing, cross referencing, and creating a label
  when the ``author'' information (described in Section [ref: ] is
  missing. This field should not be confused with the key that appears
  in the \cite command and at the beginning of the database entry.

  In addition to the fields listed above, each entry type also has
  an optional key field, used in some styles for alphabetizing, or
  for forming a \bibitem label. You should include a key field for
  any entry whose ``author'' information is missing;
      ")
	@ExtendedMetaData(kind="element", name="key", namespace="##targetNamespace")
	attr type.String key;

	@GenModel(documentation="
[crossref] The database key of the entry being cross referenced.
  BibTEX has a new cross-referencing feature, explained by an example.
    @INPROCEEDINGS(no-gnats,
        crossref = \"gg-proceedings\",
    @PROCEEDINGS(gg-proceedings,
      ")
	@ExtendedMetaData(kind="element", name="crossref", namespace="##targetNamespace")
	attr type.String crossref;

	@GenModel(documentation="
[DOI] The work's Digital Object Identifier.
      ")
	@ExtendedMetaData(kind="element", name="doi", namespace="##targetNamespace")
	attr type.String doi;

	@GenModel(documentation="
[URL] The work's Universal Resource Locator.
      ")
	@ExtendedMetaData(kind="element", name="url", namespace="##targetNamespace")
	attr type.String url;
}

@ExtendedMetaData(name="manual_._type", kind="elementOnly")
class ManualType {

	@GenModel(documentation="
[author] The name(s) of the author(s),
  in the format described in the LaTeX book.")
	@ExtendedMetaData(kind="element", name="author", namespace="##targetNamespace")
	attr type.String author;

	@GenModel(documentation="
[title] The work's title, typed as explained in the LaTeX book.
      ")
	@ExtendedMetaData(kind="element", name="title", namespace="##targetNamespace")
	attr type.String[1] title;

	@GenModel(documentation="
[organization] The organization that sponsors a conference or that
  publishes a manual.")
	@ExtendedMetaData(kind="element", name="organization", namespace="##targetNamespace")
	attr type.String organization;

	@GenModel(documentation="
[address] Usually the address of the publisher or other type of
  institution  For major publishing houses, van~Leunen recommends
  omitting the information entirely.  For small publishers, on the other
  hand, you can help the reader by giving the complete address.
      ")
	@ExtendedMetaData(kind="element", name="address", namespace="##targetNamespace")
	attr type.String address;

	@GenModel(documentation="
[edition] The edition of a book-for example, ``Second''.  This
  should be an ordinal, and should have the first letter capitalized, as
  shown here; the standard styles convert to lower case when necessary.
      ")
	@ExtendedMetaData(kind="element", name="edition", namespace="##targetNamespace")
	attr EditionType edition;

	@GenModel(documentation="
[month] The month in which the work was published or, for an
  unpublished work, in which it was written. You should use the
  standard three-letter abbreviation, as described in Appendix B.1.3 of
  the LaTeX book.
  The schema also allows a two digit month format, e.g. 05 (for May).
      ")
	@ExtendedMetaData(kind="element", name="month", namespace="##targetNamespace")
	attr MonthType month;

	@GenModel(documentation="
[year] The year of publication or, for an unpublished work, the year
  it was written.  Generally it should consist of four numerals, such as
  1984, although the standard styles can handle any year whose last four
  nonpunctuation characters are numerals, such as `(about 1984)'.
  The schema will restrict validation of the year to four numerals,
  as such a type is pre-defined in XML Schema.
      ")
	@ExtendedMetaData(kind="element", name="year", namespace="##targetNamespace")
	attr type.GYear year;

	@GenModel(documentation="
[note] Any additional information that can help the reader.
  The first word should be capitalized.
      ")
	@ExtendedMetaData(kind="element", name="note", namespace="##targetNamespace")
	attr type.String note;

	@GenModel(documentation="
[key] Used for alphabetizing, cross referencing, and creating a label
  when the ``author'' information (described in Section [ref: ] is
  missing. This field should not be confused with the key that appears
  in the \cite command and at the beginning of the database entry.

  In addition to the fields listed above, each entry type also has
  an optional key field, used in some styles for alphabetizing, or
  for forming a \bibitem label. You should include a key field for
  any entry whose ``author'' information is missing;
      ")
	@ExtendedMetaData(kind="element", name="key", namespace="##targetNamespace")
	attr type.String key;

	@GenModel(documentation="
[crossref] The database key of the entry being cross referenced.
  BibTEX has a new cross-referencing feature, explained by an example.
    @INPROCEEDINGS(no-gnats,
        crossref = \"gg-proceedings\",
    @PROCEEDINGS(gg-proceedings,
      ")
	@ExtendedMetaData(kind="element", name="crossref", namespace="##targetNamespace")
	attr type.String crossref;

	@GenModel(documentation="
[DOI] The work's Digital Object Identifier.
      ")
	@ExtendedMetaData(kind="element", name="doi", namespace="##targetNamespace")
	attr type.String doi;

	@GenModel(documentation="
[URL] The work's Universal Resource Locator.
      ")
	@ExtendedMetaData(kind="element", name="url", namespace="##targetNamespace")
	attr type.String url;
}

@ExtendedMetaData(name="mastersthesis_._type", kind="elementOnly")
class MastersthesisType {

	@GenModel(documentation="
[author] The name(s) of the author(s),
  in the format described in the LaTeX book.")
	@ExtendedMetaData(kind="element", name="author", namespace="##targetNamespace")
	attr type.String[1] author;

	@GenModel(documentation="
[title] The work's title, typed as explained in the LaTeX book.
      ")
	@ExtendedMetaData(kind="element", name="title", namespace="##targetNamespace")
	attr type.String[1] title;

	@GenModel(documentation="
[school] The name of the school where a thesis was written
      ")
	@ExtendedMetaData(kind="element", name="school", namespace="##targetNamespace")
	attr type.String[1] school;

	@GenModel(documentation="
[year] The year of publication or, for an unpublished work, the year
  it was written.  Generally it should consist of four numerals, such as
  1984, although the standard styles can handle any year whose last four
  nonpunctuation characters are numerals, such as `(about 1984)'.
  The schema will restrict validation of the year to four numerals,
  as such a type is pre-defined in XML Schema.
      ")
	@ExtendedMetaData(kind="element", name="year", namespace="##targetNamespace")
	attr type.GYear[1] year;

	@GenModel(documentation="
[type] The type of a technical report-for example, ``Research Note''.
      ")
	@ExtendedMetaData(kind="element", name="type", namespace="##targetNamespace")
	attr type.String type;

	@GenModel(documentation="
[address] Usually the address of the publisher or other type of
  institution  For major publishing houses, van~Leunen recommends
  omitting the information entirely.  For small publishers, on the other
  hand, you can help the reader by giving the complete address.
      ")
	@ExtendedMetaData(kind="element", name="address", namespace="##targetNamespace")
	attr type.String address;

	@GenModel(documentation="
[month] The month in which the work was published or, for an
  unpublished work, in which it was written. You should use the
  standard three-letter abbreviation, as described in Appendix B.1.3 of
  the LaTeX book.
  The schema also allows a two digit month format, e.g. 05 (for May).
      ")
	@ExtendedMetaData(kind="element", name="month", namespace="##targetNamespace")
	attr MonthType month;

	@GenModel(documentation="
[note] Any additional information that can help the reader.
  The first word should be capitalized.
      ")
	@ExtendedMetaData(kind="element", name="note", namespace="##targetNamespace")
	attr type.String note;

	@GenModel(documentation="
[key] Used for alphabetizing, cross referencing, and creating a label
  when the ``author'' information (described in Section [ref: ] is
  missing. This field should not be confused with the key that appears
  in the \cite command and at the beginning of the database entry.

  In addition to the fields listed above, each entry type also has
  an optional key field, used in some styles for alphabetizing, or
  for forming a \bibitem label. You should include a key field for
  any entry whose ``author'' information is missing;
      ")
	@ExtendedMetaData(kind="element", name="key", namespace="##targetNamespace")
	attr type.String key;

	@GenModel(documentation="
[crossref] The database key of the entry being cross referenced.
  BibTEX has a new cross-referencing feature, explained by an example.
    @INPROCEEDINGS(no-gnats,
        crossref = \"gg-proceedings\",
    @PROCEEDINGS(gg-proceedings,
      ")
	@ExtendedMetaData(kind="element", name="crossref", namespace="##targetNamespace")
	attr type.String crossref;

	@GenModel(documentation="
[DOI] The work's Digital Object Identifier.
      ")
	@ExtendedMetaData(kind="element", name="doi", namespace="##targetNamespace")
	attr type.String doi;

	@GenModel(documentation="
[URL] The work's Universal Resource Locator.
      ")
	@ExtendedMetaData(kind="element", name="url", namespace="##targetNamespace")
	attr type.String url;
}

@ExtendedMetaData(name="misc_._type", kind="elementOnly")
class MiscType {

	@GenModel(documentation="
[author] The name(s) of the author(s),
  in the format described in the LaTeX book.")
	@ExtendedMetaData(kind="element", name="author", namespace="##targetNamespace")
	attr type.String author;

	@GenModel(documentation="
[title] The work's title, typed as explained in the LaTeX book.
      ")
	@ExtendedMetaData(kind="element", name="title", namespace="##targetNamespace")
	attr type.String title;

	@GenModel(documentation="
[howpublished] How something strange has been published.
  The first word should be capitalized.
      ")
	@ExtendedMetaData(kind="element", name="howpublished", namespace="##targetNamespace")
	attr type.String howpublished;

	@GenModel(documentation="
[month] The month in which the work was published or, for an
  unpublished work, in which it was written. You should use the
  standard three-letter abbreviation, as described in Appendix B.1.3 of
  the LaTeX book.
  The schema also allows a two digit month format, e.g. 05 (for May).
      ")
	@ExtendedMetaData(kind="element", name="month", namespace="##targetNamespace")
	attr MonthType month;

	@GenModel(documentation="
[year] The year of publication or, for an unpublished work, the year
  it was written.  Generally it should consist of four numerals, such as
  1984, although the standard styles can handle any year whose last four
  nonpunctuation characters are numerals, such as `(about 1984)'.
  The schema will restrict validation of the year to four numerals,
  as such a type is pre-defined in XML Schema.
      ")
	@ExtendedMetaData(kind="element", name="year", namespace="##targetNamespace")
	attr type.GYear year;

	@GenModel(documentation="
[note] Any additional information that can help the reader.
  The first word should be capitalized.
      ")
	@ExtendedMetaData(kind="element", name="note", namespace="##targetNamespace")
	attr type.String note;

	@GenModel(documentation="
[key] Used for alphabetizing, cross referencing, and creating a label
  when the ``author'' information (described in Section [ref: ] is
  missing. This field should not be confused with the key that appears
  in the \cite command and at the beginning of the database entry.

  In addition to the fields listed above, each entry type also has
  an optional key field, used in some styles for alphabetizing, or
  for forming a \bibitem label. You should include a key field for
  any entry whose ``author'' information is missing;
      ")
	@ExtendedMetaData(kind="element", name="key", namespace="##targetNamespace")
	attr type.String key;

	@GenModel(documentation="
[crossref] The database key of the entry being cross referenced.
  BibTEX has a new cross-referencing feature, explained by an example.
    @INPROCEEDINGS(no-gnats,
        crossref = \"gg-proceedings\",
    @PROCEEDINGS(gg-proceedings,
      ")
	@ExtendedMetaData(kind="element", name="crossref", namespace="##targetNamespace")
	attr type.String crossref;

	@GenModel(documentation="
[DOI] The work's Digital Object Identifier.
      ")
	@ExtendedMetaData(kind="element", name="doi", namespace="##targetNamespace")
	attr type.String doi;

	@GenModel(documentation="
[URL] The work's Universal Resource Locator.
      ")
	@ExtendedMetaData(kind="element", name="url", namespace="##targetNamespace")
	attr type.String url;
}

@ExtendedMetaData(name="monthStringType")
enum MonthStringType {
	Jan = 0;
	Feb = 1;
	Mar = 2;
	Apr = 3;
	May = 4;
	Jun = 5;
	Jul = 6;
	Aug = 7;
	Sep = 8;
	Oct = 9;
	Nov = 10;
	Dec = 11;
}

@ExtendedMetaData(name="monthStringType:Object", baseType="monthStringType")
datatype MonthStringTypeObject : org.eclipse.emf.common.util.Enumerator;

@ExtendedMetaData(name="month_._type", memberTypes="monthStringType http://www.eclipse.org/emf/2003/XMLType#gMonth")
datatype MonthType : java.lang.Object;

@ExtendedMetaData(name="pages_._type", baseType="http://www.eclipse.org/emf/2003/XMLType#string", pattern="[0-9]+((-{0,2}|–|,)[0-9]+)*\+?")
datatype PagesType : java.lang.String;

@ExtendedMetaData(name="phdthesis_._type", kind="elementOnly")
class PhdthesisType {

	@GenModel(documentation="
[author] The name(s) of the author(s),
  in the format described in the LaTeX book.")
	@ExtendedMetaData(kind="element", name="author", namespace="##targetNamespace")
	attr type.String[1] author;

	@GenModel(documentation="
[title] The work's title, typed as explained in the LaTeX book.
      ")
	@ExtendedMetaData(kind="element", name="title", namespace="##targetNamespace")
	attr type.String[1] title;

	@GenModel(documentation="
[school] The name of the school where a thesis was written
      ")
	@ExtendedMetaData(kind="element", name="school", namespace="##targetNamespace")
	attr type.String[1] school;

	@GenModel(documentation="
[year] The year of publication or, for an unpublished work, the year
  it was written.  Generally it should consist of four numerals, such as
  1984, although the standard styles can handle any year whose last four
  nonpunctuation characters are numerals, such as `(about 1984)'.
  The schema will restrict validation of the year to four numerals,
  as such a type is pre-defined in XML Schema.
      ")
	@ExtendedMetaData(kind="element", name="year", namespace="##targetNamespace")
	attr type.GYear[1] year;

	@GenModel(documentation="
[type] The type of a technical report-for example, ``Research Note''.
      ")
	@ExtendedMetaData(kind="element", name="type", namespace="##targetNamespace")
	attr type.String type;

	@GenModel(documentation="
[address] Usually the address of the publisher or other type of
  institution  For major publishing houses, van~Leunen recommends
  omitting the information entirely.  For small publishers, on the other
  hand, you can help the reader by giving the complete address.
      ")
	@ExtendedMetaData(kind="element", name="address", namespace="##targetNamespace")
	attr type.String address;

	@GenModel(documentation="
[month] The month in which the work was published or, for an
  unpublished work, in which it was written. You should use the
  standard three-letter abbreviation, as described in Appendix B.1.3 of
  the LaTeX book.
  The schema also allows a two digit month format, e.g. 05 (for May).
      ")
	@ExtendedMetaData(kind="element", name="month", namespace="##targetNamespace")
	attr MonthType month;

	@GenModel(documentation="
[note] Any additional information that can help the reader.
  The first word should be capitalized.
      ")
	@ExtendedMetaData(kind="element", name="note", namespace="##targetNamespace")
	attr type.String note;

	@GenModel(documentation="
[key] Used for alphabetizing, cross referencing, and creating a label
  when the ``author'' information (described in Section [ref: ] is
  missing. This field should not be confused with the key that appears
  in the \cite command and at the beginning of the database entry.

  In addition to the fields listed above, each entry type also has
  an optional key field, used in some styles for alphabetizing, or
  for forming a \bibitem label. You should include a key field for
  any entry whose ``author'' information is missing;
      ")
	@ExtendedMetaData(kind="element", name="key", namespace="##targetNamespace")
	attr type.String key;

	@GenModel(documentation="
[crossref] The database key of the entry being cross referenced.
  BibTEX has a new cross-referencing feature, explained by an example.
    @INPROCEEDINGS(no-gnats,
        crossref = \"gg-proceedings\",
    @PROCEEDINGS(gg-proceedings,
      ")
	@ExtendedMetaData(kind="element", name="crossref", namespace="##targetNamespace")
	attr type.String crossref;

	@GenModel(documentation="
[DOI] The work's Digital Object Identifier.
      ")
	@ExtendedMetaData(kind="element", name="doi", namespace="##targetNamespace")
	attr type.String doi;

	@GenModel(documentation="
[URL] The work's Universal Resource Locator.
      ")
	@ExtendedMetaData(kind="element", name="url", namespace="##targetNamespace")
	attr type.String url;
}

@ExtendedMetaData(name="proceedings_._type", kind="elementOnly")
class ProceedingsType {

	@GenModel(documentation="
[editor] Name(s) of editor(s), typed as indicated in the LaTeX book.
  If there is also an author field, then the editor field gives the
  editor of the book or collection in which the reference appears.
      ")
	@ExtendedMetaData(kind="element", name="editor", namespace="##targetNamespace")
	attr type.String editor;

	@GenModel(documentation="
[title] The work's title, typed as explained in the LaTeX book.
      ")
	@ExtendedMetaData(kind="element", name="title", namespace="##targetNamespace")
	attr type.String[1] title;

	@GenModel(documentation="
[year] The year of publication or, for an unpublished work, the year
  it was written.  Generally it should consist of four numerals, such as
  1984, although the standard styles can handle any year whose last four
  nonpunctuation characters are numerals, such as `(about 1984)'.
  The schema will restrict validation of the year to four numerals,
  as such a type is pre-defined in XML Schema.
      ")
	@ExtendedMetaData(kind="element", name="year", namespace="##targetNamespace")
	attr type.GYear[1] year;

	@GenModel(documentation="
[volume] The volume of a journal or multivolume book.
      ")
	@ExtendedMetaData(kind="element", name="volume", namespace="##targetNamespace")
	attr type.String volume;

	@GenModel(documentation="
[number] The number of a journal, magazine, technical report, or of a
  work in a series.  An issue of a journal or magazine is usually
  identified by its volume and number; the organization that issues a
  technical report usually gives it a number; and sometimes books are
  given numbers in a named series.")
	@ExtendedMetaData(kind="element", name="number", namespace="##targetNamespace")
	attr type.String number;

	@GenModel(documentation="
[series] The name of a series or set of books.  When citing an entire
  book, the the title field gives its title and an optional series field
  gives the name of a series or multi-volume set in which the book is
  published.")
	@ExtendedMetaData(kind="element", name="series", namespace="##targetNamespace")
	attr type.String series;

	@GenModel(documentation="
[address] Usually the address of the publisher or other type of
  institution  For major publishing houses, van~Leunen recommends
  omitting the information entirely.  For small publishers, on the other
  hand, you can help the reader by giving the complete address.
      ")
	@ExtendedMetaData(kind="element", name="address", namespace="##targetNamespace")
	attr type.String address;

	@GenModel(documentation="
[month] The month in which the work was published or, for an
  unpublished work, in which it was written. You should use the
  standard three-letter abbreviation, as described in Appendix B.1.3 of
  the LaTeX book.
  The schema also allows a two digit month format, e.g. 05 (for May).
      ")
	@ExtendedMetaData(kind="element", name="month", namespace="##targetNamespace")
	attr MonthType month;

	@GenModel(documentation="
[organization] The organization that sponsors a conference or that
  publishes a manual.")
	@ExtendedMetaData(kind="element", name="organization", namespace="##targetNamespace")
	attr type.String organization;

	@GenModel(documentation="
[publisher] The publisher's name.")
	@ExtendedMetaData(kind="element", name="publisher", namespace="##targetNamespace")
	attr type.String publisher;

	@GenModel(documentation="
[note] Any additional information that can help the reader.
  The first word should be capitalized.
      ")
	@ExtendedMetaData(kind="element", name="note", namespace="##targetNamespace")
	attr type.String note;

	@GenModel(documentation="
[key] Used for alphabetizing, cross referencing, and creating a label
  when the ``author'' information (described in Section [ref: ] is
  missing. This field should not be confused with the key that appears
  in the \cite command and at the beginning of the database entry.

  In addition to the fields listed above, each entry type also has
  an optional key field, used in some styles for alphabetizing, or
  for forming a \bibitem label. You should include a key field for
  any entry whose ``author'' information is missing;
      ")
	@ExtendedMetaData(kind="element", name="key", namespace="##targetNamespace")
	attr type.String key;

	@GenModel(documentation="
[crossref] The database key of the entry being cross referenced.
  BibTEX has a new cross-referencing feature, explained by an example.
    @INPROCEEDINGS(no-gnats,
        crossref = \"gg-proceedings\",
    @PROCEEDINGS(gg-proceedings,
      ")
	@ExtendedMetaData(kind="element", name="crossref", namespace="##targetNamespace")
	attr type.String crossref;

	@GenModel(documentation="
[DOI] The work's Digital Object Identifier.
      ")
	@ExtendedMetaData(kind="element", name="doi", namespace="##targetNamespace")
	attr type.String doi;

	@GenModel(documentation="
[URL] The work's Universal Resource Locator.
      ")
	@ExtendedMetaData(kind="element", name="url", namespace="##targetNamespace")
	attr type.String url;
}

@ExtendedMetaData(name="techreport_._type", kind="elementOnly")
class TechreportType {

	@GenModel(documentation="
[author] The name(s) of the author(s),
  in the format described in the LaTeX book.")
	@ExtendedMetaData(kind="element", name="author", namespace="##targetNamespace")
	attr type.String[1] author;

	@GenModel(documentation="
[title] The work's title, typed as explained in the LaTeX book.
      ")
	@ExtendedMetaData(kind="element", name="title", namespace="##targetNamespace")
	attr type.String[1] title;

	@GenModel(documentation="
[institution] The sponsoring institution of a technical report.
      ")
	@ExtendedMetaData(kind="element", name="institution", namespace="##targetNamespace")
	attr type.String[1] institution;

	@GenModel(documentation="
[year] The year of publication or, for an unpublished work, the year
  it was written.  Generally it should consist of four numerals, such as
  1984, although the standard styles can handle any year whose last four
  nonpunctuation characters are numerals, such as `(about 1984)'.
  The schema will restrict validation of the year to four numerals,
  as such a type is pre-defined in XML Schema.
      ")
	@ExtendedMetaData(kind="element", name="year", namespace="##targetNamespace")
	attr type.GYear[1] year;

	@GenModel(documentation="
[type] The type of a technical report-for example, ``Research Note''.
      ")
	@ExtendedMetaData(kind="element", name="type", namespace="##targetNamespace")
	attr type.String type;

	@GenModel(documentation="
[number] The number of a journal, magazine, technical report, or of a
  work in a series.  An issue of a journal or magazine is usually
  identified by its volume and number; the organization that issues a
  technical report usually gives it a number; and sometimes books are
  given numbers in a named series.")
	@ExtendedMetaData(kind="element", name="number", namespace="##targetNamespace")
	attr type.String number;

	@GenModel(documentation="
[address] Usually the address of the publisher or other type of
  institution  For major publishing houses, van~Leunen recommends
  omitting the information entirely.  For small publishers, on the other
  hand, you can help the reader by giving the complete address.
      ")
	@ExtendedMetaData(kind="element", name="address", namespace="##targetNamespace")
	attr type.String address;

	@GenModel(documentation="
[month] The month in which the work was published or, for an
  unpublished work, in which it was written. You should use the
  standard three-letter abbreviation, as described in Appendix B.1.3 of
  the LaTeX book.
  The schema also allows a two digit month format, e.g. 05 (for May).
      ")
	@ExtendedMetaData(kind="element", name="month", namespace="##targetNamespace")
	attr MonthType month;

	@GenModel(documentation="
[note] Any additional information that can help the reader.
  The first word should be capitalized.
      ")
	@ExtendedMetaData(kind="element", name="note", namespace="##targetNamespace")
	attr type.String note;

	@GenModel(documentation="
[key] Used for alphabetizing, cross referencing, and creating a label
  when the ``author'' information (described in Section [ref: ] is
  missing. This field should not be confused with the key that appears
  in the \cite command and at the beginning of the database entry.

  In addition to the fields listed above, each entry type also has
  an optional key field, used in some styles for alphabetizing, or
  for forming a \bibitem label. You should include a key field for
  any entry whose ``author'' information is missing;
      ")
	@ExtendedMetaData(kind="element", name="key", namespace="##targetNamespace")
	attr type.String key;

	@GenModel(documentation="
[crossref] The database key of the entry being cross referenced.
  BibTEX has a new cross-referencing feature, explained by an example.
    @INPROCEEDINGS(no-gnats,
        crossref = \"gg-proceedings\",
    @PROCEEDINGS(gg-proceedings,
      ")
	@ExtendedMetaData(kind="element", name="crossref", namespace="##targetNamespace")
	attr type.String crossref;

	@GenModel(documentation="
[DOI] The work's Digital Object Identifier.
      ")
	@ExtendedMetaData(kind="element", name="doi", namespace="##targetNamespace")
	attr type.String doi;

	@GenModel(documentation="
[URL] The work's Universal Resource Locator.
      ")
	@ExtendedMetaData(kind="element", name="url", namespace="##targetNamespace")
	attr type.String url;
}

@ExtendedMetaData(name="unpublished_._type", kind="elementOnly")
class UnpublishedType {

	@GenModel(documentation="
[author] The name(s) of the author(s),
  in the format described in the LaTeX book.")
	@ExtendedMetaData(kind="element", name="author", namespace="##targetNamespace")
	attr type.String[1] author;

	@GenModel(documentation="
[title] The work's title, typed as explained in the LaTeX book.
      ")
	@ExtendedMetaData(kind="element", name="title", namespace="##targetNamespace")
	attr type.String[1] title;

	@GenModel(documentation="
[note] Any additional information that can help the reader.
  The first word should be capitalized.
      ")
	@ExtendedMetaData(kind="element", name="note", namespace="##targetNamespace")
	attr type.String[1] note;

	@GenModel(documentation="
[month] The month in which the work was published or, for an
  unpublished work, in which it was written. You should use the
  standard three-letter abbreviation, as described in Appendix B.1.3 of
  the LaTeX book.
  The schema also allows a two digit month format, e.g. 05 (for May).
      ")
	@ExtendedMetaData(kind="element", name="month", namespace="##targetNamespace")
	attr MonthType month;

	@GenModel(documentation="
[year] The year of publication or, for an unpublished work, the year
  it was written.  Generally it should consist of four numerals, such as
  1984, although the standard styles can handle any year whose last four
  nonpunctuation characters are numerals, such as `(about 1984)'.
  The schema will restrict validation of the year to four numerals,
  as such a type is pre-defined in XML Schema.
      ")
	@ExtendedMetaData(kind="element", name="year", namespace="##targetNamespace")
	attr type.GYear year;

	@GenModel(documentation="
[key] Used for alphabetizing, cross referencing, and creating a label
  when the ``author'' information (described in Section [ref: ] is
  missing. This field should not be confused with the key that appears
  in the \cite command and at the beginning of the database entry.

  In addition to the fields listed above, each entry type also has
  an optional key field, used in some styles for alphabetizing, or
  for forming a \bibitem label. You should include a key field for
  any entry whose ``author'' information is missing;
      ")
	@ExtendedMetaData(kind="element", name="key", namespace="##targetNamespace")
	attr type.String key;

	@GenModel(documentation="
[crossref] The database key of the entry being cross referenced.
  BibTEX has a new cross-referencing feature, explained by an example.
    @INPROCEEDINGS(no-gnats,
        crossref = \"gg-proceedings\",
    @PROCEEDINGS(gg-proceedings,
      ")
	@ExtendedMetaData(kind="element", name="crossref", namespace="##targetNamespace")
	attr type.String crossref;

	@GenModel(documentation="
[DOI] The work's Digital Object Identifier.
      ")
	@ExtendedMetaData(kind="element", name="doi", namespace="##targetNamespace")
	attr type.String doi;

	@GenModel(documentation="
[URL] The work's Universal Resource Locator.
      ")
	@ExtendedMetaData(kind="element", name="url", namespace="##targetNamespace")
	attr type.String url;
}

