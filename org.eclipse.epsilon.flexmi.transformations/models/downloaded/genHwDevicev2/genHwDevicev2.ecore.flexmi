<?nsuri http://www.eclipse.org/emf/2002/Ecore?>
<?import http://www.eclipse.org/emf/2002/Ecore?>
<package name="alma" nsURI="http://alma/1.0" nsPrefix="alma">
	<package name="control" nsURI="http://alma.control/1.0" nsPrefix="alma.control">
		<package name="datamodel" nsURI="http://alma/Control/datamodel/1.0" nsPrefix="alma.Control.datamodel">
			<package name="meta" nsURI="http://alma/Control/datamodel/meta/1.0" nsPrefix="alma.Control.datamodel.meta">
				<package name="amb" nsURI="http://alma/Control/datamodel/meta/amb/1.0" nsPrefix="alma.Control.datamodel.meta.amb">
					<class name="Archive">
						<EOperation name="Assembly" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Assembly")];"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="IsIntervalTE" type="EBoolean">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="String s = IntervalFull();
								if (s.startsWith("te/"))
								return true;
								return false;"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="Interval" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="if(IsIntervalTE())
								return IntervalFull().substring(3);
								return IntervalFull();"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="setArchiveAmb" type="">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="this.row = row;
								this.tables = tables;
								super.setArchiveProperty(row, tables);"/>
							</EAnnotation>
							<EParameter name="row" type="EStringArray"/>
							<EParameter name="tables" type="Table"/>
						</EOperation>
					</class>
					<class name="Control">
						<EOperation name="Data" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Data")];"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="Value" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Value")];"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="Returns" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Returns")];"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="Parameter" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Parameter")];"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="Assembly" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="return mac.Assembly();"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="RCA" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="return mac.RCA();"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="RawDataType" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="return mac.RawDataType();"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="TeRelated" type="EBoolean">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="return mac.TeRelated();"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="WorldDataType" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="return mac.WorldDataType();"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="Scale" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="return mac.Scale();"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="Offset" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="return mac.Offset();"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="RawDataToCPPType" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="return mac.RawDataToCPPType();"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="WorldDataToCPPType" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="return mac.WorldDataToCPPType();"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="WorldDataToCORBAType" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="return mac.WorldDataToCORBAType();"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="WorldDataToIDLSeqType" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="return mac.WorldDataToIDLSeqType();"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="WorldDataToIDLType" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="return mac.WorldDataToIDLType();"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="WorldDataToCORBASeqType" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="return mac.WorldDataToCORBASeqType();"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="WorldDataToCORBADevIOType" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="return mac.WorldDataToCORBADevIOType();"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="WorldDataToJavaType" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="return mac.WorldDataToJavaType();"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="WorldDataToDatabaseType" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="return mac.WorldDataToDatabaseType();"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="WorldDataToBACIType" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="return mac.WorldDataToBACIType();"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="IsRawDataArray" type="EBoolean">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="return mac.IsRawDataArray();"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="IsWorldDataArray" type="EBoolean">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="return mac.IsWorldDataArray();"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="MinRange" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="return utils.normalizeNumber(WorldDataType(),super.MinRange());"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="MaxRange" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="return utils.normalizeNumber(WorldDataType(),super.MaxRange());"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="idlReturns" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="return (String)tables.getWorldToIDL().get(Returns());"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="corbaReturns" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="return (String)tables.getWorldToCORBA().get(Returns());"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="idlDeclaration" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="String s = idlSignature();
								return s;"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="idlSignature" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="		String s = "SET_" + CPName();
								if (!Parameter().equals("default")) {
								if (Parameter().equals("void"))
								s += "()";
								else
								s += "(" + idlParameters() + ")";
								if (External()) {
								s +=  " raises(ControlExceptions::CAMBErrorEx, ControlExceptions::INACTErrorEx)";
								}
								return s;
								// This gets the non-default case out of the way.
								}
								// This is the "default" case.
								boolean isTeRelated = TeRelated();
								boolean isExternal = External();
								boolean isArray = IsWorldDataArray();
								if (isExternal) {
								if (isArray) {
								s += "(in " + WorldDataToIDLSeqType() + " world";
								} else {
								s += "(in " + WorldDataToIDLType() + " world";
								}
								}
								if (isTeRelated) {
								s += ", in ACS::Time requestTime)";
								} else {
								s += ")";
								}
								if (isExternal) {
								s += " raises(ControlExceptions::CAMBErrorEx, ControlExceptions::INACTErrorEx)";
								}
								return s;"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="idlParameters" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="				String s = Parameter();
								int pos = 0;
								int n = s.indexOf(' ');
								if (n == -1)
								throw new RuntimeException("Invalid syntax in Parameter field: (" + s + ")");
								String word = s.substring(pos,n);
								String out = "";
								boolean isArray = IsWorldDataArray();
								if (isArray) {
								out += "in " + (String)tables.getWorldToIDLSeq().get(word) + " ";
								}
								else
								out = "in " + (String)tables.getWorldToIDL().get(word) + " ";
								pos = n + 1;
								while (true) {
								n = s.indexOf(',',pos);
								if (n == -1)
								break;
								word = s.substring(pos,n);
								out += word + ", ";
								pos = n + 1;
								while (true) {
								if (s.charAt(pos) == ' ')
								pos++;
								else
								break;
								}
								n = s.indexOf(' ',pos);
								if (n == -1)
								throw new RuntimeException("Invalid syntax in Parameter field: (" + s + ")");
								word = s.substring(pos,n);
								if (isArray) {
								String type = (String)tables.getWorldToIDL().get(word);
								type = type.replace("unsigned long", "uLong");
								out += "in " + type;
								}
								else
								out = "in " + (String)tables.getWorldToIDL().get(word) + " ";
								pos = n + 1;
								}
								word = s.substring(pos);
								out += word;
								return out;"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="corbaDeclaration" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="String s = "";
								if (!Parameter().equals("default")) {
								if (Parameter().equals("void"))
								s += "()";
								else
								s += "(" + corbaParameters() + ")";
								return s;
								// This gets the non-default case out of the way.
								}
								// This is the "default" case.
								boolean isTeRelated = TeRelated();
								boolean isArray = IsWorldDataArray();
								if(isArray == true)
								{
								s += "(const " + WorldDataToCORBASeqType() + "& world";
								}
								else
								{
								String type = WorldDataToCORBAType();
								if(type.equalsIgnoreCase("CORBA::String") == true)
								{
								type = "const " + type + "_var&";
								}
								
								s += "(" + type + " world";
								}
								if (isTeRelated)
								{
								s += ", const acstime::Epoch& requestTime)";
								}
								else
								{
								s += ")";
								}
								return s;"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="corbaParameters" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="				String s = Parameter();
								int pos = 0;
								int n = s.indexOf(' ');
								if (n == -1)
								throw new RuntimeException("Invalid syntax in Parameter field: (" + s + ")");
								String word = s.substring(pos,n);
								String out = (String)tables.getWorldToCORBA().get(word) + " ";
								pos = n + 1;
								while (true) {
								n = s.indexOf(',',pos);
								if (n == -1)
								break;
								word = s.substring(pos,n);
								out += word + ", ";
								pos = n + 1;
								while (true) {
								if (s.charAt(pos) == ' ')
								pos++;
								else
								break;
								}
								n = s.indexOf(' ',pos);
								if (n == -1)
								throw new RuntimeException("Invalid syntax in Parameter field: (" + s + ")");
								word = s.substring(pos,n);
								out += (String)tables.getWorldToCORBA().get(word);
								pos = n + 1;
								}
								word = s.substring(pos);
								out += word;
								return out;"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="cppReturns" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="return (String)tables.getWorldToCPP().get(Returns());"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="cppDeclaration" type="EString">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="body" value="        String s = "";
								if (!Parameter().equals("default")) {
								if (Parameter().equals("void"))
								s += "()";
								else
								s += "(" + cppParameters() + ")";
								return s;
								// This gets the non-default case out of the way.
								}
								// This is the "default" case.
								boolean isTeRelated = TeRelated();
								boolean isArray = IsWorldDataArray();
								if (isArray) {
								s += "(const std::vector< " + WorldDataToCPPType() + " >& world";
									} else {
									s += "(const " + WorldDataToCPPType() + " world";
									}
									if (isTeRelated) {
									s += ", const acstime::Epoch& requestTime)";
									} else {
									s += ")";
									}
									return s;"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="cppParameters" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="	String s = Parameter();
									int pos = 0;
									int n = s.indexOf(' ');
									if (n == -1)
									throw new RuntimeException("Invalid syntax in Parameter field: (" + s + ")");
									String word = s.substring(pos,n);
									String out = (String)tables.getWorldToCPP().get(word) + " ";
									pos = n + 1;
									while (true) {
									n = s.indexOf(',',pos);
									if (n == -1)
									break;
									word = s.substring(pos,n);
									out += word + ", ";
									pos = n + 1;
									while (true) {
									if (s.charAt(pos) == ' ')
									pos++;
									else
									break;
									}				
									n = s.indexOf(' ',pos);
									if (n == -1)
									throw new RuntimeException("Invalid syntax in Parameter field: (" + s + ")");
									word = s.substring(pos,n);
									out += (String)tables.getWorldToCPP().get(word) + " ";
									pos = n + 1;
									}
									word = s.substring(pos);
									out += word;
									return out;"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="argList" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="        if (!Parameter().equals("default")) {
									if (Parameter().equals("void"))
									return "";
									else
									return argWords();
									// This gets the non-default case out of the way.
									}
									// This is the "default" case.
									String s = "world";
									boolean isTeRelated = TeRelated();
									if (isTeRelated) {
									s += ", requestTime";
									}
									return s;"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="argWords" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="		String s = Parameter();
									int pos = 0;
									int n = s.indexOf(' ');
									if (n == -1)
									throw new RuntimeException("Invalid syntax in Parameter field: (" + s + ")");
									String word = s.substring(pos,n);
									String out = "";
									pos = n + 1;
									while (true) {
									n = s.indexOf(',',pos);
									if (n == -1)
									break;
									word = s.substring(pos,n);
									out += word + ", ";
									pos = n + 1;
									while (true) {
									if (s.charAt(pos) == ' ')
									pos++;
									else
									break;
									}
									n = s.indexOf(' ',pos);
									if (n == -1)
									throw new RuntimeException("Invalid syntax in Parameter field: (" + s + ")");
									word = s.substring(pos,n);
									pos = n + 1;
									}
									word = s.substring(pos);
									out += word;
									return out;"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsConversion" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.IsConversion();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsSpecialConversion" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.IsSpecialConversion();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="NumberItemsRawData" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.NumberItemsRawData();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="TotalBytesRawData" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.TotalBytesRawData();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="NumberRawDataTypeBytes" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.NumberRawDataTypeBytes();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="NumberItemsWorldData" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.NumberItemsWorldData();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="RCACell" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.RCACell();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="TeRelatedCell" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.TeRelatedCell();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsDependentGroupBit" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.IsDependentGroupBit();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsDependentBit" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.IsDependentBit();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsDependentElement" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.IsDependentElement();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsByteSwapped" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.IsByteSwapped();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsDependentBitElement" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.IsDependentBitElement();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsDependentArrayElement" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.IsDependentArrayElement();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="GetDimension" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.GetDimension();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsSingleBit" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.IsSingleBit();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="GetBit" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.GetBit();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="GetMask" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.GetMask();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="GetFirstBit" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.GetFirstBit();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="GetLastBit" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.GetLastBit();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="GetGroupMask" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.GetGroupMask();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="GetGroupEnd" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.GetGroupEnd();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="GetGroupStart" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.GetGroupStart();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="RawSubArrayEndIndex" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.RawSubArrayEndIndex();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="RawSubArrayStartIndex" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.RawSubArrayStartIndex();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsRawSubArray" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.IsRawSubArray();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="WorlDataToDatabaseTypeUpper1" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.WorldDataToDatabaseTypeUpper1();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="WorldDataTypeUpper1" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.WorldDataTypeUpper1();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="setControlAmb" type="">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="this.row = row;
									this.parent = parent;
									super.setControlPoint(row, parent);
									mac = new MandCImpl();
									mac.setMandCAmb(tables, utils);
									mac.setMandCAmb(row, sheet, this);"/>
								</EAnnotation>
								<EParameter name="row" type="EStringArray"/>
								<EParameter name="parent" type="EObject"/>
							</EOperation>
							<ref name="mac" type="MandC"/>
						</class>
						<class name="DeviceModel">
							<EOperation name="IsMonitorDBOnly" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return monitorDBOnly;"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsGenerateAlt" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return generateAlt;"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="Parent" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return ((Main)main).Parent();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="Cardinality" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return ((Main)main).Cardinality();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="NodeAddress" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return ((Main)main).NodeAddress();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="Channel" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return ((Main)main).Channel();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="BaseAddress" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return ((Main)main).BaseAddress();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="GenericMonitorPoints" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return ((Main)main).GenericMonitorPoints();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="CreateModel" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return "true";"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="TheEnd" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="String dir = generatedDir + "/" + Assembly();
									utils.RemoveLinesFromFile(dir + "/doc", Assembly() + ".html", 1);
									utils.RemoveLinesFromFile(dir + "/idl", Assembly() + "Add.sql", 1);
									utils.RemoveLinesFromFile(dir + "/include", Assembly() + "HWSimBase.h", 1);
									utils.RemoveLinesFromFile(dir + "/src", Assembly() + "HWSimBase.cpp", 1);
									utils.RemoveLinesFromFile(dir + "/include", Assembly() + "CompSimBase.h", 1);
									utils.RemoveLinesFromFile(dir + "/src", Assembly() + "CompSimBase.cpp", 1);
									utils.RemoveLinesFromFile(dir + "/idl", Assembly() + "CompSimBase.idl", 1);
									utils.RemoveLinesFromFile(dir + "/test", "Test" + Assembly() + "HWSimImpl.cpp", 1);
									utils.RemoveLinesFromFile(dir + "/test", "Test" + Assembly() + "AmbDeviceInt.cpp", 1);
									if (!IsMonitorDBOnly()) {
									if (IsGenerateAlt()) {
									utils.RemoveLinesFromFile(dir + "/../ALT/", Assembly() + ".makefile", 1);
									utils.RemoveLinesFromFile(dir + "/../ALT/", Assembly() + "Impl.idl", 1);
									utils.RemoveLinesFromFile(dir + "/../ALT/", Assembly() + "Impl.h", 1);
									utils.RemoveLinesFromFile(dir + "/../ALT/", Assembly() + "Impl.cpp", 1);
									}
									super.TheEnd();
									} else 
									System.out.println("Code generation for " + deviceName + " done.");
									return "";"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="NodeAddressInDecimal" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="		String s = NodeAddress();
									if (s.equals("parm"))
									return "0";
									return HexToDec(s);"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="HexToDec" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="		int n = -1;
									try {
									n = Integer.parseInt(s.substring(2),16);
									} catch (NumberFormatException err) {
									throw new RuntimeException("Invalid number (" + s + ")");
									}
									return Integer.toString(n);"/>
								</EAnnotation>
								<EParameter name="s" type="EString"/>
							</EOperation>
							<ref name="mainAmb" upperBound="-1" containment="true" type="Main"/>
							<ref name="cPoints" upperBound="-1" containment="true" type="Control"/>
							<ref name="aPoints" upperBound="-1" containment="true" type="Archive"/>
							<ref name="mPoints" upperBound="-1" containment="true" type="Monitor"/>
							<ref name="note" containment="true" type="Note"/>
						</class>
						<class name="GenericMonitorPoints">
							<EOperation name="getParsedGenericSpreadsheet" type="EStringArray3">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="Util util = BaseFactory.eINSTANCE.createUtil();
									dirLocation = util.getInstallDir();
									if (!(new java.io.File(dirLocation + "/idl/GENERIC_spreadsheet.xml").exists())){
									System.out.println("Spreadsheet GENERIC_spreadsheet not found. Exiting....");
									System.exit(1);
									}
									
									BaseFactory baseFac = BaseFactory.eINSTANCE;
									SpreadsheetParser parserSpreadsheet = baseFac.createSpreadsheetParser();
									
									String xml = parserSpreadsheet.getSpreadsheet(dirLocation + "/idl", "GENERIC_spreadsheet.xml");
									String xmlFile = dirLocation + "/idl/GENERIC_spreadsheet.xml";
									String xsdFile = dirLocation + "/config/schemas/amb/Workbook.xsd";
									SpreadsheetParser p = baseFac.createSpreadsheetParser();
									p.setSpreadsheetParser(xml);
									String [][][] spreadsheet = p.getWorksheets();
									SpreadsheetValidator v = baseFac.createSpreadsheetValidator();
									if (!v.validate(xmlFile,xsdFile)) {
									String s = "Spreadsheet GENERIC_spreadsheet.xml is not a valid spreadsheet.";
									throw new RuntimeException(s);
									}
									
									System.out.println("Spreadsheet GENERIC has been validated.");
									
									return spreadsheet;"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="getDeviceWorksheetWithGenericPointsAdded" type="EStringArray3">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value=" // Create the SP class
									setDeviceName(spreadsheet[0][2][0]);
									String [][][] genericSpreadsheet = getParsedGenericSpreadsheet();
									// Now we iterate through spreadsheet adding monitor, control and archive generic points.
									
									// I coded this way to make the things clear
									int[] Rows = null;
									int[] Columns = null;
									int[] GenericRows = null;
									
									Rows = new int[4];
									Columns = new int[4];
									GenericRows = new int[4];
									
									String deviceName=spreadsheet[0][2][0];
									
									int mainRows = spreadsheet[0].length;
									int monitorRows = spreadsheet[1].length;
									int controlRows = spreadsheet[2].length;
									int archiveRows = spreadsheet[3].length;
									
									int mainColumns = spreadsheet[0][1].length;
									int monitorColumns = spreadsheet[1][1].length;
									int controlColumns = spreadsheet[2][1].length;
									int archiveColumns = spreadsheet[3][1].length;
									
									int genericMonitorRows = genericSpreadsheet[1].length;
									int genericControlRows = genericSpreadsheet[2].length;
									int genericArchiveRows = genericSpreadsheet[3].length;
									
									// Well, first the newSpreadsheet is created. Arrays are static structures....
									newSpreadsheet = new String[4][][];
									newSpreadsheet[0] = new String[mainRows][mainColumns];
									newSpreadsheet[1] = new String[monitorRows+genericMonitorRows-2][monitorColumns];
									newSpreadsheet[2] = new String[controlRows+genericControlRows-2][controlColumns];
									newSpreadsheet[3] = new String[archiveRows+genericArchiveRows-2][archiveColumns];
									
									// Hardware Device
									newSpreadsheet[0][0] = new String[1];
									newSpreadsheet[0][0][0] = spreadsheet[0][0][0];
									// Monitor Point
									newSpreadsheet[1][0] = new String[1];
									newSpreadsheet[1][0][0] = spreadsheet[1][0][0];
									// Control Point
									newSpreadsheet[2][0] = new String[1];
									newSpreadsheet[2][0][0] = spreadsheet[2][0][0];
									// Archive Property
									newSpreadsheet[3][0] = new String[1];
									newSpreadsheet[3][0][0] = spreadsheet[3][0][0];
									
									Rows[0] = mainRows; // Yes here I ignore Notes on Main spreadsheet
									Rows[1] = monitorRows;
									Rows[2] = controlRows;
									Rows[3] = archiveRows;
									
									Columns[0] = mainColumns;
									Columns[1] = monitorColumns;
									Columns[2] = controlColumns;
									Columns[3] = archiveColumns;
									
									// Then I copy elements from spreadsheet to newSpreadsheet
									for (int i = 0; i < Rows.length; i++ ) {
									for (int j = 1; j < Rows[i]; j++) {
									for (int k = 0; k < Columns[i]; k++) {
									if (spreadsheet[i][j][k].equals("Notes")){
									newSpreadsheet[i][j] = new String[2];
									newSpreadsheet[i][j][k] = spreadsheet[i][j][k];
									newSpreadsheet[i][j][k+1] = spreadsheet[i][j][k+1];
									break; 
									}
									newSpreadsheet[i][j][k] = spreadsheet[i][j][k];
									}
									
									}
									}        
									
									// Here we start the copy process from generic spreadsheet
									GenericRows[0] = 0;
									GenericRows[1] = genericMonitorRows;
									GenericRows[2] = genericControlRows;
									GenericRows[3] = genericArchiveRows;
									
									for (int i = 1; i < Rows.length ; i++ ) {
									for (int j = Rows[i];j < (Rows[i] + GenericRows[i] - 2); j++) {
									for (int k = 0; k < Columns[i]; k++) {
									if ( (genericSpreadsheet[i][j-Rows[i]+2][k]).equals("GENERIC")){
									newSpreadsheet[i][j][k] = deviceName;
									} else {
									newSpreadsheet[i][j][k] = genericSpreadsheet[i][j-Rows[i]+2][k];
									}
									}
									}
									}
									return newSpreadsheet;"/>
								</EAnnotation>
								<EParameter name="spreadsheet" type="EStringArray3"/>
							</EOperation>
							<attr name="newSpreadsheet" type="//EStringArray3"/>
							<attr name="deviceName" type="//EString"/>
							<attr name="dirLocation" type="//EString"/>
						</class>
						<class name="Main">
							<EOperation name="Parent" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Parent")];"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="Cardinality" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Cardinality")];"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="NodeAddress" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Node Address")];"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="Channel" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Channel")];"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="BaseAddress" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Base Address")];"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="GenericMonitorPoints" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Generic Monitor Points")].equals("yes");"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="setMainAmb" type="">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="this.row = row;
									super.setMainBase(row);"/>
								</EAnnotation>
								<EParameter name="row" type="EStringArray"/>
							</EOperation>
						</class>
						<class name="MandC">
							<EOperation name="Assembly" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Assembly")];"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="RCA" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "RCA")];"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="RCACell" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "RCA")];"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="RawDataType" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="String s = row[tables.getColNum(sheet, "Raw Data Type")];
									if(!mcp.IsDependent())
									return IsRawDataArray() ? s.substring(0, s.indexOf("[")) : s;
									if(mcp instanceof Monitor)
									return ((Monitor) mcp.getParent()).RawDataType();
									if(mcp instanceof Control)
									return ((Control) mcp.getParent()).RawDataType();
									return "ERROR";"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="RawDataTypeCell" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Raw Data Type")];"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="TeRelated" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return false;"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="TeRelatedCell" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "TE Related")];"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="WorldDataType" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="String s = row[tables.getColNum(sheet, "World Data Type")];
									return IsWorldDataArray() ? s.substring(0, s.indexOf("[")) : s;"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="WorldDataTypeCell" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "World Data Type")];"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="Scale" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="String s = ScaleCell();
									if((s.equals("none") == true) || (s.equals("extended") == true) || (s.equals(tables.getCelsiusToKelvin()) == true))
									s = "1.0";
									return s;"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="ScaleCell" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return utils.normalizeNumber(WorldDataType(), row[tables.getColNum(sheet, "Scale")]);"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="Offset" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="		String s = ScaleCell();
									if(s.equals(tables.getCelsiusToKelvin()))
									return "273.15";
									String o = OffsetCell();
									if((o.equals("0") == true) || (o.equals("none") == true)	|| (o.equals("extended") == true))
									o = "0.0";
									return o;"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="OffsetCell" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return utils.normalizeNumber(WorldDataType(), row[tables.getColNum(sheet, "Offset")]);"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="RawDataToCPPType" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return (String)tables.getRawToCPP().get(RawDataType());"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="WorldDataToCPPType" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return (String)tables.getWorldToCPP().get(WorldDataType());"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="WorldDataToCORBAType" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return (String)tables.getWorldToCORBA().get(WorldDataType());"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="WorldDataToIDLSeqType" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return (String)tables.getWorldToIDLSeq().get(WorldDataType());"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="WorldDataToIDLType" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return (String)tables.getWorldToIDL().get(WorldDataType());"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="WorldDataToCORBASeqType" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return (String)tables.getWorldToCORBASeq().get(WorldDataType());"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="WorldDataToCORBADevIOType" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return (String)tables.getWorldToCORBADevIO().get(WorldDataType());"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="WorldDataToJavaType" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return (String)tables.getWorldToJava().get(WorldDataType());"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="WorldDataToDatabaseType" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return (String)tables.getWorldToDatabase().get(WorldDataType());"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="WorldDataToBACIType" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return (String)tables.getWorldToBACI().get(WorldDataType());"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsConversion" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="		if(ScaleCell().equals("none") && OffsetCell().equals("none"))
									{
									return false;
									}
									else if(ScaleCell().equals("1.0") && OffsetCell().equals("0.0"))
									{
									return false;
									}
									else if(ScaleCell().equals("1.0") && OffsetCell().equals("none"))
									{
									return false;
									}
									else if(ScaleCell().equals("none") && OffsetCell().equals("0.0"))
									{
									return false;
									}
									
									return true;"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsSpecialConversion" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return ScaleCell().equals("extended");"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsWorldDataArray" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="String s = row[tables.getColNum(sheet, "World Data Type")];
									return s.endsWith("]") ? true : false;"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsRawDataArray" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="		String s = row[tables.getColNum(sheet, "Raw Data Type")];
									if(!mcp.IsDependent())
									return s.endsWith("]") ? true : false;
									if(s.startsWith("&lt;") && s.substring(1).indexOf("&lt;") != -1)
									return true;
									return false;"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="NumberItemsRawData" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="String s = row[tables.getColNum(sheet, "Raw Data Type")];
									return utils.NumberOfItems(s);"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="TotalBytesRawData" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="		String s = row[tables.getColNum(sheet, "Raw Data Type")];
									return utils.RawDataTypeTotalBytes(s);"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="NumberRawDataTypeBytes" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return utils.NumberRawDataTypeBytes(RawDataType());"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="NumberItemsWorldData" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="	String s = row[tables.getColNum(sheet, "World Data Type")];
									return utils.NumberOfItems(s);"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsDependentGroupBit" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="		if(!mcp.IsDependent())
									return false;
									if(IsDependentBit() && RawDataTypeCell().indexOf("-") != -1)
									return true;
									return false;"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsDependentBit" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="		if(!mcp.IsDependent())
									return false;
									if(RawDataTypeCell().startsWith("&lt;"))
									return true;
									return false;"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsDependentElement" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="		if(!mcp.IsDependent())
									return false;
									if(RawDataTypeCell().startsWith("["))
									return true;
									return false;"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsByteSwapped" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return ((String)tables.getRawToByteSwapped().get(RawDataType())).equals(true);"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsDependentBitElement" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="		if(!mcp.IsDependent())
									return false;
									if(RawDataTypeCell().startsWith("&lt;"))
									return true;
									return false;"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsDependentArrayElement" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="		if(!mcp.IsDependent())
									return false;
									if(RawDataTypeCell().startsWith("["))
									return true;
									return false;"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="GetDimension" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="		String s = RawDataTypeCell();
									if(IsDependentArrayElement())
									{
									int n = s.indexOf("]");
									return s.substring(1, n);
									}
									if(!IsRawDataArray())
									return "0";
									if(IsDependentBitElement())
									{
									int n = s.indexOf("&gt;");
									return s.substring(4, n);
									}
									return "0";"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsSingleBit" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="		String s = RawDataTypeCell();
									if(!s.startsWith("&lt;"))// &lt;0&gt;
									return false;
									if(!s.endsWith("&gt;"))
									return false;
									if(s.indexOf("-") == -1)
									return true;
									return false;"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="GetBit" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="		String s = RawDataTypeCell();
									int n = s.indexOf("&gt;");
									return s.substring(4, n);"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="GetFirstBit" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="		String s = RawDataTypeCell();
									if(!s.startsWith("&lt;") || !s.endsWith("&gt;"))
									return "";
									if(IsSingleBit())
									return GetBit();
									int n = s.indexOf("-");
									if(n == -1)
									return "";
									return s.substring(4, n);"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="GetLastBit" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="		String s = RawDataTypeCell();
									if(!s.startsWith("&lt;") || !s.endsWith("&gt;"))
									return "";
									if(IsSingleBit())
									return GetBit();
									int n = s.indexOf("-");
									if(n == -1)
									return "";
									return s.substring(n + 1, s.length() - 4);"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="GetGroupStart" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="		String s = RawDataTypeCell();
									if(IsRawDataArray())
									{
									s = s.substring(4);
									int n = s.indexOf("&lt;");
									int m = s.substring(n + 4).indexOf("&gt;");
									if(n == -1 || m == -1)
									return "";
									s = s.substring(n + 4, m + n + 4);
									}
									else
									{
									s = s.substring(4, s.length() - 4);
									}
									// "s" is of type "i-j"
									int n = s.indexOf("-");
									if(n == -1)
									return "";
									return s.substring(0, n);"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="GetGroupEnd" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="		String s = RawDataTypeCell();
									int n = s.indexOf("-");
									if(n == -1)
									return "";
									return s.substring(n + 1, s.length() - 4);"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="GetGroupMask" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="		String firstBit = GetGroupStart();
									String lastBit = GetGroupEnd();
									int n = Integer.parseInt(firstBit);
									int m = Integer.parseInt(lastBit);
									int intMaskSize = m - n;
									int intMask = 0;
									for(int i = 0; i <= intMaskSize; i++)
									{
									intMask += Math.pow(2, i);
									}
									String mask = "0x".concat(Integer.toHexString(intMask).toUpperCase());
									return mask;"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsRawSubArray" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="		String s = RawDataTypeCell();
									if((s.indexOf("[") != -1) && (s.indexOf("-") != -1)
									&& (s.indexOf("]") != -1))
									return true;
									return false;"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="RawSubArrayStartIndex" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="		String s = RawDataTypeCell();
									return String.valueOf(findRawSubArrayIndex(s, true));"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="RawSubArrayEndIndex" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="		String s = RawDataTypeCell();
									return String.valueOf(findRawSubArrayIndex(s, false));"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="findRawSubArrayIndex" type="EInt">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="		int end = s.indexOf("]");
									if(end == -1)
									throw new RuntimeException(
									"In Raw Datatype column of monitor spreadsheet, subarray notation does not contain \"]\" ("
									+ s + ")");
									int start = s.indexOf("[") + 1;
									if(start < 1)
									throw new RuntimeException(
									"In Raw Datatype column of monitor spreadsheet, subarray notation does not start with \"[\" ("
									+ s + ")");
									
									String subString = s.substring(start, end);
									String interpretStrings[] = subString.split("-");
									if(interpretStrings.length != 2)
									throw new RuntimeException(
									"In Raw Datatype column of monitor spreadsheet, subarray notation does contain a range ("
									+ s + ")");
									int index = -1;
									try {
									if(startOrEnd == true)
									index = Integer.parseInt(interpretStrings[0]);
									else
									index = Integer.parseInt(interpretStrings[1]);
									}
									catch(NumberFormatException err) {
									throw new RuntimeException(
									"In Raw Datatype column of monitor spreadsheet, subarray notation does not contain an integer as index ("
									+ s
									+ ", "
									+ interpretStrings[0]
									+ interpretStrings[1] + ")");
									}
									return index;"/>
								</EAnnotation>
								<EParameter name="s" type="EString"/>
								<EParameter name="startOrEnd" type="EBoolean"/>
							</EOperation>
							<EOperation name="WorldDataToDatabaseTypeUpper1" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="		String s = WorldDataToDatabaseType();
									return Character.toUpperCase(s.charAt(0)) + s.substring(1);"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="WorldDataTypeUpper1" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="		String s = WorldDataType();
									return Character.toUpperCase(s.charAt(0)) + s.substring(1);"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="setMandCAmb" type="">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="this.tables = tables;
									this.utils = utils;"/>
								</EAnnotation>
								<EParameter name="tables" type="Table"/>
								<EParameter name="utils" type="Util"/>
							</EOperation>
							<EOperation name="setMandCAmb" type="">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="this.row = row;
									this.sheet = sheet;
									this.mcp = mcp;"/>
								</EAnnotation>
								<EParameter name="row" type="EStringArray"/>
								<EParameter name="sheet" type="EInt"/>
								<EParameter name="mcp" type="MandCBase"/>
							</EOperation>
							<attr name="row" type="//EStringArray"/>
							<attr name="sheet" type="//EInt"/>
							<attr name="mask" type="//EStringArray"/>
							<ref name="mcp" type="MandCBase"/>
							<ref name="tables" type="Table"/>
							<ref name="utils" type="Util"/>
						</class>
						<class name="Monitor">
							<EOperation name="CanBeInvalid" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Can Be Invalid")];"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsFEStatus" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return CanBeInvalid().equals("yes-feStatus");"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="Assembly" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.Assembly();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="RCA" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.RCA();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="RawDataType" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.RawDataType();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="TeRelated" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.TeRelated();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="WorldDataType" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.WorldDataType();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="Scale" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.Scale();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="Offset" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.Offset();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="RawDataToCPPType" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.RawDataToCPPType();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="WorldDataToCPPType" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.WorldDataToCPPType();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="WorldDataToCORBAType" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.WorldDataToCORBAType();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="WorldDataToIDLSeqType" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.WorldDataToIDLSeqType();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="WorldDataToIDLType" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.WorldDataToIDLType();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="WorldDataToCORBASeqType" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.WorldDataToCORBASeqType();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="WorldDataToCORBADevIOType" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.WorldDataToCORBADevIOType();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="WorldDataToJavaType" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.WorldDataToJavaType();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="WorldDataToDatabaseType" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.WorldDataToDatabaseType();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="WorldDataToBACIType" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.WorldDataToBACIType();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsRawDataArray" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.IsRawDataArray();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsWorldDataArray" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.IsWorldDataArray();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsConversion" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.IsConversion();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsSpecialConversion" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.IsSpecialConversion();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="NumberItemsRawData" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.NumberItemsRawData();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="TotalBytesRawData" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.TotalBytesRawData();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="NumberRawDataTypeBytes" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.NumberRawDataTypeBytes();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="RCACell" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.RCACell();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="NumberItemsWorldData" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.NumberItemsWorldData();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="TeRelatedCell" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.TeRelatedCell();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsDependentGroupBit" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.IsDependentGroupBit();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsDependentBit" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.IsDependentBit();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsDependentElement" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.IsDependentElement();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsByteSwapped" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.IsByteSwapped();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsDependentBitElement" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.IsDependentBitElement();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsDependentArrayElement" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.IsDependentArrayElement();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="GetDimension" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.GetDimension();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsSingleBit" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.IsSingleBit();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="GetBit" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.GetBit();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="GetMask" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.GetMask();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="GetFirstBit" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.GetFirstBit();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="GetLastBit" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.GetLastBit();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="GetGroupMask" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.GetGroupMask();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="GetGroupEnd" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.GetGroupEnd();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="GetGroupStart" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.GetGroupStart();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="RawSubArrayEndIndex" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.RawSubArrayEndIndex();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="RawSubArrayStartIndex" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.RawSubArrayStartIndex();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsRawSubArray" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.IsRawSubArray();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="WorldDataToDatabaseTypeUpper1" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.WorldDataToDatabaseTypeUpper1();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="WorldDataTypeUpper1" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return mac.WorldDataTypeUpper1();"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="MinRange" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return utils.normalizeNumber(WorldDataType(), super.MinRange());"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="MaxRange" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return utils.normalizeNumber(WorldDataType(), super.MaxRange());"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="Default" type="EString">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="return utils.normalizeNumber(WorldDataType(), super.Default());"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsPattern" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="boolean ret = true;
									if(this.IsDependent()) 
									ret = false;
									if (this.getDependents().getContents().isEmpty())
									ret = false;		
									for (Iterator iter = this.getDependents().getContents().iterator(); iter.hasNext(); ) {
									Monitor var = (Monitor) iter.next();
									if(var.WorldDataType().compareTo("boolean") != 0){
									ret = false;
									}		
									}
									if(ret)System.out.println("IsPattern(): "+ret+"");
									return ret;"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsPartOfPattern" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="boolean ret = false;
									if(IsDependent()){
									Monitor parent = (Monitor)this.getParent();
									if(parent.IsPattern())
									ret = true;
									}
									return ret;"/>
								</EAnnotation>
							</EOperation>
							<EOperation name="IsHomogeneous" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="	boolean ret = true;
									String firsttype = null;
									if(hasDependents()){
									for (Iterator<EObject> iter = this.getDependents().getContents().iterator(); iter.hasNext(); ) {
										Monitor var = (Monitor) iter.next();
										if( firsttype == null){
										firsttype = new String(var.WorldDataType());
										continue;
										}if(var.WorldDataType().equals(firsttype)) 
										ret = false;
										}
										}else{
										ret = false;
										}
										return ret;"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="IsPartOfHomogeneous" type="EBoolean">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="	boolean ret = false;
										if(IsDependent()){
										Monitor parent = ((Monitor)this.getParent());
										if(parent.IsHomogeneous())
										ret = true;
										}
										return ret;	"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="setMonitorAmb" type="">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="this.tables = tables;
										this.utils = utils;"/>
									</EAnnotation>
									<EParameter name="tables" type="Table"/>
									<EParameter name="utils" type="Util"/>
								</EOperation>
								<EOperation name="setMonitorAmb" type="">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="this.row = row;
										this.parent = parent;
										super.setMonitorPoint(row, parent);
										mac = AmbFactory.eINSTANCE.createMandC();
										mac.setMandCAmb(tables, utils);
										mac.setMandCAmb(row, sheet, this);"/>
									</EAnnotation>
									<EParameter name="row" type="EStringArray"/>
									<EParameter name="parent" type="EObject"/>
								</EOperation>
								<ref name="mac" type="MandC"/>
							</class>
						</package>
						<package name="base" nsURI="http://alma/Control/datamodel/meta/base/1.0" nsPrefix="alma.Control.datamodel.meta.base">
							<class name="ArchiveProperty">
								<EOperation name="IsRefersTo" type="EBoolean">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return mp != null || cp !=null;"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="IsMonitorPoint" type="EBoolean">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return mp != null;"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="IsControlPoint" type="EBoolean">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return cp != null;"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="Name" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Name")];"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="APName" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="	String name = Name();
										if (name.startsWith(tables.getDepChar()))
										name = name.substring(1);
										return name;"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="RefersTo" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet,  "Refers To")];"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="IntervalFull" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet,  "Interval (secs)")];"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="Interval" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Interval (secs)")];"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="OnlyOnChange" type="EBoolean">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Only On Change")].equals("yes");"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="DisplayUnits" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Display Units")];"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="GraphMin" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Graph Min")];"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="GraphMax" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Graph Max")];"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="Format" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Format")];"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="OnStartup" type="EBoolean">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "On Startup")].equals("yes");"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="Title" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Title")];"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="setArchiveProperty" type="">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="this.row = row;
										this.tables = tables;
										this.sheet = tables.getSheetNum("Archive Property");"/>
									</EAnnotation>
									<EParameter name="row" type="EStringArray"/>
									<EParameter name="tables" type="Table"/>
								</EOperation>
								<attr name="row" derived="true" type="//EStringArray"/>
								<attr name="sheet" type="//EInt"/>
								<ref name="cp" type="ControlPoint"/>
								<ref name="mp" type="MonitorPoint"/>
								<ref name="tables" type="Table"/>
							</class>
							<class name="ControlPoint" abstract="true">
								<EOperation name="CPName" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return PName();"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="AltCPName" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return AltPName();
										"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="ArchiveOnUse" type="EBoolean">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Archive On Use")].equals("yes");"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="IsMonitored" type="EBoolean">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return false;
										"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="setControlPoint" type="">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="this.tables = tables;
										this.utils = utils;"/>
									</EAnnotation>
									<EParameter name="tables" type="Table"/>
									<EParameter name="utils" type="Util"/>
								</EOperation>
								<EOperation name="setControlPoint" type="">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="this. row = row;
										this.parent = parent;
										super.setMandCBase(row, parent);"/>
									</EAnnotation>
									<EParameter name="row" type="EStringArray"/>
									<EParameter name="parent" type="EObject"/>
								</EOperation>
							</class>
							<class name="DeviceModel" abstract="true">
								<EOperation name="CreateModel" type="EString"/>
								<EOperation name="Assembly" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return main.Assembly();"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="Extends" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return main.Extends();"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="DeviceName" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return main.DeviceName();"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="Description" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return main.Description();"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="DescriptionAsString" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return main.DescriptionAsString();"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="ICD" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return main.ICD();"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="ICDDate" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return main.ICDDate();"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="ICDDateAsDatabaseDate" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return main.ICDDateAsDatabaseDate();"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="ICDDateAsArrayTime" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return main.ICDDateAsArrayTime();"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="DirPath" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return Assembly();
										"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="TheEnd" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="String dir = generatedDir + "/" + Assembly();
										utils.RemoveLinesFromFile(dir + "/src", Assembly() + "Base.cpp", 1);
										utils.RemoveLinesFromFile(dir + "/include", Assembly() + "Base.h", 1);
										utils.RemoveLinesFromFile(dir + "/idl", Assembly() + "Base.idl", 1);
										utils.RemoveLinesFromFile(dir + "/idl", Assembly() + "Add.sql", 1);
										utils.RemoveLinesFromFile(dir + "/doc", Assembly() + ".xml", 1);
										utils.RemoveLinesFromFile(dir + "/doc", Assembly() + "Component.xml", 1);
										utils.RemoveLinesFromFile(dir + "/config/CDB/schemas", Assembly() + "Base.xsd", 1);
										utils.RemoveLinesFromFile(dir + "/config", "TMCDB" + Assembly() + "Add.xml", 1);
										utils.RemoveLinesFromFile(dir + "/src/CCL", Assembly() + "Base.py", 1);
										utils.RemoveLinesFromFile(dir + "/src/CCL", "__init__.py", 1);
										System.out.println("Code generation for " + deviceName + " done.");
										return "";"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="checkIfFileExists" type="EBoolean">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="java.io.File f = new java.io.File(fileName);
										if(f.exists() == true){										return true;
										}else{
										return false;
										}"/>
									</EAnnotation>
									<EParameter name="fileName" type="EString"/>
								</EOperation>
								<EOperation name="checkIfFileExists" type="EBoolean">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="if(directory.isEmpty() == false){
										return checkIfFileExists(directory + "/" + fileName);
										} else{
										return checkIfFileExists(fileName);
										}"/>
									</EAnnotation>
									<EParameter name="directory" type="EString"/>
									<EParameter name="fileName" type="EString"/>
								</EOperation>
								<EOperation name="checkIfDeviceFileExists" type="EBoolean">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="String fileName = getDeviceDir() + "/" + directory + "/" + Assembly() + localFileName;
										return checkIfFileExists(fileName);"/>
									</EAnnotation>
									<EParameter name="directory" type="EString"/>
									<EParameter name="localFileName" type="EString"/>
								</EOperation>
								<EOperation name="checkIfTestFileExists" type="EBoolean">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="String fileName = getDeviceDir() + "/" + directory + "/Test" + Assembly() + localFileName;
										return checkIfFileExists(fileName);"/>
									</EAnnotation>
									<EParameter name="directory" type="EString"/>
									<EParameter name="localFileName" type="EString"/>
								</EOperation>
								<EOperation name="checkIfCvsignoreFileExists" type="EBoolean">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="String fileName = getDeviceDir() + "/" + directory + "/.cvsignore";
										return checkIfFileExists(fileName);"/>
									</EAnnotation>
									<EParameter name="directory" type="EString"/>
								</EOperation>
								<EOperation name="setDeviceModel" type="">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="this.setDeviceName(System.getProperty("deviceName"));
										this.setDeviceDir(System.getProperty("deviceDir"));
										this.setCodegenDir(System.getProperty("codegenDir"));
										this.setSpreadsheetDir(System.getProperty("spreadsheetDir"));
										this.setGeneratedDir(System.getProperty("generatedDir"));"/>
									</EAnnotation>
								</EOperation>
								<attr name="DescriptionIndex" defaultValueLiteral="1" type="//EInt"/>
								<attr name="spreadsheet" type="//EStringArray3"/>
								<attr name="container" transient="true" type="//EResourceSet"/>
								<attr name="notes" transient="true" type="//EResource"/>
								<attr name="monitorPoints" transient="true" type="//EResource"/>
								<attr name="controlPoints" transient="true" type="//EResource"/>
								<attr name="archiveProperties" transient="true" type="//EResource"/>
								<attr name="deviceName" type="//EString"/>
								<attr name="busType" type="//EString"/>
								<attr name="deviceDir" type="//EString"/>
								<attr name="codegenDir" type="//EString"/>
								<attr name="spreadsheetDir" type="//EString"/>
								<attr name="generatedDir" type="//EString"/>
								<attr name="monitorDBOnly" type="//EBoolean"/>
								<attr name="generateAlt" type="//EBoolean"/>
								<ref name="main" containment="true" type="MainBase"/>
								<ref name="tables" type="Table"/>
								<ref name="utils" type="Util"/>
							</class>
							<class name="MainBase">
								<EOperation name="Assembly" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Assembly")];"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="Description" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Description")];"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="DescriptionAsString" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return utils.descriptionAsString(Description());"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="DeviceName" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Device Name")];"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="Extends" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Extends")];"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="ICD" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "ICD")];"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="ICDDate" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "ICD Date")];"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="ICDDateAsDatabaseDate" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return utils.toDatabaseDate(ICDDate());"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="ICDDateAsArrayTime" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return utils.toArrayTime(ICDDate());"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="setMainBase" type="">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="this.tables = tables;
										this.utils = utils;"/>
									</EAnnotation>
									<EParameter name="tables" type="Table"/>
									<EParameter name="utils" type="Util"/>
								</EOperation>
								<EOperation name="setMainBase" type="">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="this.row = row;
										this.sheet = tables.getSheetNum("Hardware Device");"/>
									</EAnnotation>
									<EParameter name="row" type="EStringArray"/>
								</EOperation>
								<attr name="row" type="//EStringArray"/>
								<attr name="sheet" type="//EInt"/>
								<ref name="tables" type="Table"/>
								<ref name="utils" type="Util"/>
							</class>
							<class name="MandCBase" abstract="true">
								<EOperation name="addDependent" type="">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="dependents.getContents().add(son);
										container.getResources().add(dependents);"/>
									</EAnnotation>
									<EParameter name="son" type="EObject"/>
								</EOperation>
								<EOperation name="IsDependent" type="EBoolean">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="			if (getParent() == null){
										//	System.out.println("no tiene padre");
										return false;
										}
										//System.out.println("si tiene padre");
										return true;"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="hasDependents" type="EBoolean">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return !dependents.getContents().isEmpty();"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="FullName" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Name")];"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="Name" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="if(IsDependent())
										return row[tables.getColNum(sheet, "Name")].substring(1);
										else
										return row[tables.getColNum(sheet, "Name")];"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="GetDependentName" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return Name();
										"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="GetAltDependentName" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return utils.AltName(GetDependentName());"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="GetDependsOnName" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="if(!IsDependent())
										return "";
										return ((MandCBase)getParent()).Name();"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="GetAltDependsOnName" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="		return utils.AltName(((MandCBase)getParent()).Name());"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="DataUnits" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Data Units")];"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="MinRange" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Min Range")];"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="MaxRange" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Max Range")];"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="Mode" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Mode")];"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="Implement" type="EBoolean">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Implement")].equals("yes");"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="External" type="EBoolean">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "External")].equals("yes");"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="Description" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Description")];"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="IsExternal" type="EBoolean">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return External();"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="IsArchived" type="EBoolean">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return true;"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="IsImplemented" type="EBoolean">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return Implement();"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="dErr" type="RuntimeExceptionDT">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return new RuntimeException(spreadsheetName +":"+ sheetName +":"+ cell +":"+ err.toString());"/>
									</EAnnotation>
									<EParameter name="err" type="RuntimeExceptionDT"/>
									<EParameter name="cell" type="EString"/>
								</EOperation>
								<EOperation name="dErr" type="RuntimeExceptionDT">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return new RuntimeException(spreadsheetName +":"+ sheetName +":"+ cell +":"+ err);"/>
									</EAnnotation>
									<EParameter name="err" type="EString"/>
									<EParameter name="cell" type="EString"/>
								</EOperation>
								<EOperation name="dropPrefix" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="if (s.startsWith("GET_") || s.startsWith("SET_"))
										return s.substring(4);
										return s;"/>
									</EAnnotation>
									<EParameter name="s" type="EString"/>
								</EOperation>
								<EOperation name="PName" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="		if (Name().startsWith(tables.getDepChar()))
										return dropPrefix(Name().substring(1));
										return dropPrefix(Name());"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="AltPName" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="	if (Name().startsWith("SET_"))
										return "Cntl" + utils.AltName(PName()); 
										return utils.AltName(PName());"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="DescriptionAsString" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return utils.descriptionAsString(Description());"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="DescriptionFormatted" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return utils.formatDescriptionL2(Description());"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="DescriptionFormattedL4" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return utils.formatDescriptionL4(Description());"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="DescriptionFormattedL5" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return utils.formatDescriptionL5(Description());"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="IsMonitored" type="EBoolean"/>
								<EOperation name="setMandCBase" type="">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="this.tables = tables;
										this.utils = utils;"/>
									</EAnnotation>
									<EParameter name="tables" type="Table"/>
									<EParameter name="utils" type="Util"/>
								</EOperation>
								<EOperation name="setMandCBase" type="">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="this.row = row;
										this.parent = parent;
										dependents = container.createResource(URI.createURI(""));
										sheet = (this instanceof MonitorPoint) ? tables.getSheetNum("Monitor Point") : tables.getSheetNum("Control Point");"/>
									</EAnnotation>
									<EParameter name="row" type="EStringArray"/>
									<EParameter name="parent" type="EObject"/>
								</EOperation>
								<attr name="spreadsheetName" defaultValueLiteral="Not needed" type="//EString"/>
								<attr name="container" transient="true" type="//EResourceSet"/>
								<attr name="dependents" transient="true" iD="true" type="//EResource"/>
								<attr name="parent" transient="true" type="//EObjectDT"/>
								<ref name="archive" type="ArchiveProperty"/>
								<attr name="sheetName" type="//EString"/>
								<attr name="row" type="//EStringArray"/>
								<attr name="sheet" type="//EInt"/>
								<ref name="manc" upperBound="-1" containment="true" type="MandCBase"/>
								<ref name="tables" type="Table"/>
								<ref name="utils" type="Util"/>
							</class>
							<class name="MonitorPoint" abstract="true">
								<EOperation name="Default" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Default")];"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="ErrorCondition" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Error Condition")];"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="ErrorSeverity" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Error Severity")];"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="ErrorAction" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Error Action")];"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="APName" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return PName();"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="RefersTo" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return PName();"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="Interval" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="	int defaultValue = 300;
										if(archive != null) {
										if ( ((ArchiveProperty)archive).Interval().equals("none") )
										return Integer.toString(defaultValue);
										int value = Integer.valueOf(((ArchiveProperty)archive).Interval());
										if (value <= 0)
										value = defaultValue;
										return Integer.toString(value);
										}
										else
										return Integer.toString(defaultValue);"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="OnlyOnChange" type="EBoolean">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="	if(archive != null)
										return ((ArchiveProperty)archive).OnlyOnChange();
										else
										return false;"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="DisplayUnits" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="if(archive != null)
										return ((ArchiveProperty)archive).DisplayUnits();
										else
										return DataUnits();"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="GraphMin" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="		if(archive != null)
										return ((ArchiveProperty)archive).GraphMin();
										else
										return "none";"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="GraphMax" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="	if(archive != null)
										return ((ArchiveProperty)archive).GraphMax();
										else
										return "none";"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="Format" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="				if(archive != null)
										return ((ArchiveProperty)archive).Format();
										else
										return "none";"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="Title" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="				if(archive != null)
										return ((ArchiveProperty)archive).Title();
										else
										return Description();"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="MPName" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return PName();
										"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="AltMPName" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return AltPName();
										"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="IsMonitored" type="EBoolean">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return true;"/>
									</EAnnotation>
								</EOperation>
								<EOperation name="IsPartOfPattern" type="EBoolean"/>
								<EOperation name="IsHomogeneous" type="EBoolean"/>
								<EOperation name="IsPartOfHomogeneous" type="EBoolean"/>
								<EOperation name="setMonitorPoint" type="">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="this.tables = tables;
										this.utils = utils;"/>
									</EAnnotation>
									<EParameter name="tables" type="Table"/>
									<EParameter name="utils" type="Util"/>
								</EOperation>
								<EOperation name="setMonitorPoint" type="">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="this. row = row;
										this.parent = parent;
										super.setMandCBase(row, parent);"/>
									</EAnnotation>
									<EParameter name="row" type="EStringArray"/>
									<EParameter name="parent" type="EObject"/>
								</EOperation>
							</class>
							<class name="Note">
								<attr name="note" defaultValueLiteral="" type="//EString"/>
							</class>
							<class name="Pair" abstract="true">
								<EOperation name="setPair" type="">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="content = c;
										newString = n;"/>
									</EAnnotation>
									<EParameter name="c" type="EString"/>
									<EParameter name="n" type="EString"/>
								</EOperation>
								<attr name="content" type="//EString"/>
								<attr name="newString" type="//EString"/>
							</class>
							<class name="SimpleErrorHandler">
								<EOperation name="error" type="">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="System.out.println("error: line "+ exception.getLineNumber() + ": " + exception.getMessage());
										errors = true;"/>
									</EAnnotation>
									<EParameter name="exception" type="SAXParseExceptionDT"/>
								</EOperation>
								<EOperation name="fatalError" type="">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="System.out.println("fatalError: line "+ exception.getLineNumber() + ": " + exception.getMessage());
										errors = true;"/>
									</EAnnotation>
									<EParameter name="exception" type="SAXParseExceptionDT"/>
								</EOperation>
								<EOperation name="warning" type="">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="System.out.println("warning: line "+ exception.getLineNumber() + ": " + exception.getMessage());
										errors = true;"/>
									</EAnnotation>
									<EParameter name="exception" type="SAXParseExceptionDT"/>
								</EOperation>
								<EOperation name="areErrors" type="EBoolean">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="return errors;"/>
									</EAnnotation>
								</EOperation>
								<attr name="errors" defaultValueLiteral="false" type="//EBoolean"/>
							</class>
							<class name="SpreadsheetParser">
								<EOperation name="getSpreadsheet" type="EString">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="		java.io.File dir = new java.io.File(dirName);
										if (!dir.isDirectory())
										throw new RuntimeException ("Directory " + dirName + " does not exist.");
										java.io.File file = new java.io.File(dir, fileName);
										if (!file.exists())
										throw new RuntimeException ("File " + fileName + " in directory " + dirName + " does not exist.");
										java.io.BufferedReader in = null;
										StringBuffer xmlDoc = null;
										String line = null;
										try {
										in = new java.io.BufferedReader(new java.io.FileReader(file));
										//Read the entire file and store in it xmlDoc.
										xmlDoc = new StringBuffer();
										line = in.readLine();
										while (line != null) {
										xmlDoc.append(line + newline);
										//xmlDoc.append(line);
										line = in.readLine();
										}
										in.close();
										} catch (java.io.IOException e) {
										throw new RuntimeException(e.getMessage());
										}
										String xml = new String(xmlDoc);
										// Now, the entire xml file is in the string: xml.
										return xml;"/>
									</EAnnotation>
									<EParameter name="dirName" type="EString"/>
									<EParameter name="fileName" type="EString"/>
								</EOperation>
								<EOperation name="getBoundedContent" type="Pair">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="		int b1 = s.indexOf(beginPart1);
										if (b1 == -1)
										return null;
										int b2 = s.indexOf(beginPart2,b1);
										if (b2 == -1)
										return null;
										int e = s.indexOf(end,b2);
										if (e == -1)
										return null;
										String content = s.substring(b2 + 1,e).trim();
										int n = e + end.length();
										String newS = null;
										if (n < s.length())
										newS = s.substring(n);
										PairImpl pp = new PairImpl() {};
										pp.setPair(content,newS);
										return pp;"/>
									</EAnnotation>
									<EParameter name="s" type="EString"/>
									<EParameter name="beginPart1" type="EString"/>
									<EParameter name="beginPart2" type="EString"/>
									<EParameter name="end" type="EString"/>
								</EOperation>
								<EOperation name="getDataCells" type="EStringArray">
									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
										<EStringToStringMapEntry key="body" value="ArrayList list = new ArrayList ();
										String data = null;
										String content = null;
										while (row != null && row.length() > 0) {
											Pair p = getBoundedContent(row,"<Cell",">","</Cell>");
											if (p == null)
											break;
											data = p.getContent();
											row = p.getNewString();
											p = getBoundedContent(data,"<Data",">","</Data>");
											if (p == null)
											continue;
											content = p.getContent();
											list.add(content);
											}
											if(list.size() == 0)
											return null;
											String[] x = new String [list.size()];
											return (String[])list.toArray(x);"/>
										</EAnnotation>
										<EParameter name="row" type="EString"/>
									</EOperation>
									<EOperation name="getWorksheets" type="EStringArray3">
										<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
											<EStringToStringMapEntry key="body" value="ArrayList rowList = null;
											ArrayList sheetList = null;
											String sheet = null;
											String row = null;
											String[] data = null;
											sheetList = new ArrayList ();
											String doc = new String (xml);
											if (doc.startsWith("@reference")) {
											refStatus = true;
											return filter(doc);
											}
											Pair p = null;
											while (doc != null && doc.length() > 0) {
												p = getBoundedContent(doc,"<Worksheet",">","</Worksheet>");
												if (p == null)
												break;
												sheet = p.getContent();
												doc = p.getNewString();
												rowList = new ArrayList ();
												while (sheet != null && sheet.length() > 0) {
												Pair p2 = getBoundedContent(sheet,"<Row",">","</Row>");
												if (p2 == null)
												break;
												row = p2.getContent();
												sheet = p2.getNewString();
												data = getDataCells(row);
												if (data != null)
												rowList.add(data);
												}
												sheetList.add(rowList);
												}
												
												if(p == null){
												doc = new String(xml);
												while (doc != null && doc.length() > 0) {
												p = getBoundedContent(doc,"<ss:Worksheet",">","</ss:Worksheet>");
												if(p == null)
												break;
												sheet = p.getContent();
												doc = p.getNewString();
												rowList = new ArrayList ();
												while (sheet != null && sheet.length() > 0) {
												Pair p2 = getBoundedContent(sheet,"<Row",">","</Row>");
												if (p2 == null)
												break;
												row = p2.getContent();
												sheet = p2.getNewString();
												data = getDataCells(row);
												if (data != null)
												rowList.add(data);
												}
												sheetList.add(rowList);
												}
												}
												
												
												String[][][] result = new String [sheetList.size()][][];
												for (int i = 0; i < result.length; ++i) {
												ArrayList x = (ArrayList)sheetList.get(i);
												result[i] = new String [x.size()][];
												for (int j = 0; j < result[i].length; ++j) {
												String[] y = (String[])x.get(j);
												result[i][j] = new String [y.length];
												for (int k = 0; k < y.length; ++k)
												result[i][j][k] = y[k];
												}
												}
												return result;"/>
											</EAnnotation>
										</EOperation>
										<EOperation name="isReference" type="EBoolean">
											<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
												<EStringToStringMapEntry key="body" value="return refStatus;
												"/>
											</EAnnotation>
										</EOperation>
										<EOperation name="getReference" type="EString">
											<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
												<EStringToStringMapEntry key="body" value="return refPath;"/>
											</EAnnotation>
										</EOperation>
										<EOperation name="setXSD" type="">
											<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
												<EStringToStringMapEntry key="body" value="xsdFile = xsd;"/>
											</EAnnotation>
											<EParameter name="xsd" type="EString"/>
										</EOperation>
										<EOperation name="filter" type="EStringArray3">
											<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
												<EStringToStringMapEntry key="body" value="// A. Get the directory that is referenced, and the old and new assembly names.
												// Syntax: @reference = <base-directory-path-name> <base-assembly-name> = <new-assembly-name>
															java.io.LineNumberReader text = new java.io.LineNumberReader(new java.io.StringReader(doc));
															String line = null;
															try {
															line = text.readLine();
															} catch (java.io.IOException err) {
															throw new RuntimeException("Cannot read file: " + err.toString());
															}
															String[] tmp = line.split("[ |\t]+");
															if (!tmp[0].equals("@reference") || !tmp[1].equals("=") || !tmp[4].equals("=")) {
															throw new RuntimeException("Invalid syntax at line number " + text.getLineNumber() + " in file filter.");
															}
															String baseDirectory = tmp[2];
															String baseAssemblyName = tmp[3];
															String newAssemblyName = tmp[5];
															System.out.println("Applying filter in directory " + baseDirectory + 
															" to assembly " + baseAssemblyName + ".  New assembly is " + newAssemblyName + ".");
															
															// B. Get the contents of this base spreadsheet.
															BaseFactory baseFac = BaseFactory.eINSTANCE;
															String referenceXml = baseFac.createSpreadsheetParser().getSpreadsheet(baseDirectory, baseAssemblyName + "_spreadsheet.xml");
															refPath = baseDirectory + "/" + baseAssemblyName + "_spreadsheet.xml";
															SpreadsheetParser p = baseFac.createSpreadsheetParser();
															p.setSpreadsheetParser(referenceXml);
															SpreadsheetValidator v = baseFac.createSpreadsheetValidator();
															if (!v.validate(refPath,xsdFile)) {
															String s = "Spreadsheet " + baseAssemblyName + "_spreadsheet.xml is not a valid spreadsheet.";
															throw new RuntimeException(s);
															}
															System.out.println("Base spreadsheet " + baseAssemblyName + " has been validated.");
															String[][][] base = p.getWorksheets();
															
															// C. Change the assembly name in the base spreadsheet.
															for (int i = 0; i < base.length; ++i) {
															for (int j = 0; j < base[i].length; ++j) {
															if (base[i][j][0].equals(baseAssemblyName)) {
															base[i][j][0] = newAssemblyName;
															}
															}
															}
															
															// D. Apply the filter to the base.
															//    Any deleted rows we will simply make null.
															String[][] worksheet = null;
															while (true) {
															try {
															line = text.readLine();
															} catch (java.io.IOException err) {
															throw new RuntimeException("Cannot read file: " + err.toString());
															}
															if (line == null)
															break;
															if (line.trim().length() == 0)
															continue;
															if (line.startsWith("Main"))
															worksheet = base[0];
															else if (line.startsWith("EndMain"))
															worksheet = null;
															else if (line.startsWith("Monitor"))
															worksheet = base[1];
															else if (line.startsWith("EndMonitor"))
															worksheet = null;
															else if (line.startsWith("Control"))
															worksheet = base[2];
															else if (line.startsWith("EndControl"))
															worksheet = null;
															else if (line.startsWith("Archive"))
															worksheet = base[3];
															else if (line.startsWith("EndArchive"))
															worksheet = null;
															else {
															if (worksheet == null)
															throw new RuntimeException("Invalid syntax at line number " + text.getLineNumber() + " in file filter. (Missing statement)");
															tmp = line.split("[ |\t]+");
															if (line.startsWith("~")) {
															deleteRow(worksheet,tmp[0].substring(1));
															} else {
															String s = line.substring(tmp[0].length());
															modifyRow(worksheet,text.getLineNumber(),tmp[0],s);
															}
															}
															}
															
															// E. Assign the non-null array.
															String[][][] result = new String [base.length] [] [];
															for (int i = 0; i < result.length; ++i) {
															int nrow = 0;
															for (int j = 0; j < base[i].length; ++j) {
															if (base[i][j] != null)
															++nrow;
															}
															result[i] = new String [nrow] [];
															int jj = 0;
															for (int j = 0; j < base[i].length; ++j) {
															if (base[i][j] != null) {
															result[i][jj] = new String [base[i][j].length];
															for (int k = 0; k < base[i][j].length; ++k)
															result[i][jj][k] = base[i][j][k];
															++jj;
															}
															}
															}
															
															// F. Return the new spreadsheet. 
															return result;"/>
														</EAnnotation>
														<EParameter name="doc" type="EString"/>
													</EOperation>
													<EOperation name="deleteRow" type="">
														<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
															<EStringToStringMapEntry key="body" value="if (worksheet[0][0].equals("Hardware Device")) {
															for (int i = 2; i < worksheet.length; ++i) {
															if (worksheet[i] == null)
															continue;
															if (worksheet[i][0].equals(name)) {
															worksheet[i] = null;
															return;
															}
															}
															throw new RuntimeException("The name " + name + " is not the name of a row in the Main worksheet.");
															}
															for (int i = 2; i < worksheet.length; ++i) {
															if (worksheet[i] == null)
															continue;
															if (worksheet[i][1].equals(name)) {
															worksheet[i] = null;
															return;
															}
															}		
															throw new RuntimeException("The name " + name + " is not the name of a row in the " + worksheet[0][0] + " worksheet.");"/>
														</EAnnotation>
														<EParameter name="worksheet" type="EStringArray2"/>
														<EParameter name="name" type="EString"/>
													</EOperation>
													<EOperation name="modifyRow" type="">
														<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
															<EStringToStringMapEntry key="body" value="		// Find the row.
															int row = 0;
															if (worksheet[0][0].equals("Hardware Device")) {
															int i = 2;
															for (; i < worksheet.length; ++i) {
															if (worksheet[i] == null)
															continue;
															if (worksheet[i][0].equals(rowName)) {
															row = i;
															break;
															}
															}
															if (i == worksheet.length)
															throw new RuntimeException("The name " + rowName + " is not the name of a row in the Main worksheet.");
															} else {
															int i = 2;
															for (; i < worksheet.length; ++i) {
															if (worksheet[i] == null)
															continue;
															if (worksheet[i][1].equals(rowName)) {
															row = i;
															break;
															}
															}
															if (i == worksheet.length)
															throw new RuntimeException("The name " + rowName + " is not the name of a row in the " + worksheet[0][0] + " worksheet.");
															}
															String name;
															String value;
															int b;
															int m;
															int e;        				
															while(true) {
															b = s.indexOf('<');
															m = s.indexOf('=');
															e = s.indexOf('>');
																if (b == -1 || m == -1 || e == -1 || m < b || e < m) {
																throw new RuntimeException("Invalid syntax at line number " + lineNumber + " in file filter.");
																}
																name = s.substring(b + 1, m).trim();
																value = s.substring(m + 1, e).trim();
																// Apply the change.
																int j = 0;
																for (; j < worksheet[row].length; ++j) {
																if (worksheet[1][j].equals(name)) {
																worksheet[row][j] = value;
																break;
																}
																}
																if (j == worksheet[row].length)
																throw new RuntimeException("The name " + name + " is not the name of a column in the " + worksheet[0][0] + " worksheet.");
																// Get the next change.
																++e;
																while (e < s.length() && (s.charAt(e) == ' ' || s.charAt(e) == '\t'))
																++e;
																if (e == s.length())
																break;
																s = s.substring(e);
																}"/>
															</EAnnotation>
															<EParameter name="worksheet" type="EStringArray2"/>
															<EParameter name="lineNumber" type="EInt"/>
															<EParameter name="rowName" type="EString"/>
															<EParameter name="s" type="EString"/>
														</EOperation>
														<EOperation name="setSpreadsheetParser" type="">
															<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																<EStringToStringMapEntry key="body" value="this.xml = xml;"/>
															</EAnnotation>
															<EParameter name="xml" type="EString"/>
														</EOperation>
														<attr name="refPath" type="//EString"/>
														<attr name="refStatus" defaultValueLiteral="false" type="//EBoolean"/>
														<attr name="xml" type="//EString"/>
														<attr name="xsdFile" type="//EString"/>
														<attr name="newline" defaultValueLiteral="" type="//EString"/>
													</class>
													<class name="SpreadsheetValidator">
														<EOperation name="validate" type="EBoolean">
															<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																<EStringToStringMapEntry key="body" value="				javax.xml.parsers.DocumentBuilderFactory factory = javax.xml.parsers.DocumentBuilderFactory.newInstance();
																factory.setNamespaceAware(true);
																factory.setValidating(true);
																factory.setAttribute(
																"http://java.sun.com/xml/jaxp/properties/schemaLanguage",
																"http://www.w3.org/2001/XMLSchema");
																// Specify our own schema - this overrides the schemaLocation in the xml
																// file
																factory.setAttribute(
																"http://java.sun.com/xml/jaxp/properties/schemaSource",
																"file://" + xsdFile);
																seh = BaseFactory.eINSTANCE.createSimpleErrorHandler();
																
																try {
																javax.xml.parsers.DocumentBuilder builder = factory.newDocumentBuilder();
																builder.setErrorHandler(seh);
																org.w3c.dom.Document document = builder.parse(xmlFile);
																}
																catch(Exception e) {
																System.out.println("Validating error file " + xmlFile
																+ " with schema file " + xsdFile + " failed!");
																return false;
																}
																
																if(seh.areErrors()) {
																System.out.println("Validating error file " + xmlFile
																+ " with schema file " + xsdFile + " failed!");
																return false;
																}
																else {
																return true;
																}"/>
															</EAnnotation>
															<EParameter name="xmlFile" type="EString"/>
															<EParameter name="xsdFile" type="EString"/>
														</EOperation>
														<EOperation name="setSpreadsheetValidator" type="">
															<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																<EStringToStringMapEntry key="body" value="this.errorList = new ArrayList< String >();
																	"/>
																</EAnnotation>
															</EOperation>
															<attr name="seh" type="//SimpleErrorHandlerDT"/>
															<attr name="errorList" transient="true" type="//ArrayList"/>
															<attr name="sehTmp" type="//ErrorHandlerDT"/>
														</class>
														<class name="Table">
															<EOperation name="getSheetNum" type="EInt">
																<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																	<EStringToStringMapEntry key="body" value="int i;
																	for(i = 0; i < sheetNames.size(); i++)
																	if(((String)sheetNames.get(i)).compareTo(name) == 0)
																	return i;
																	return -1;"/>
																</EAnnotation>
																<EParameter name="name" type="EString"/>
															</EOperation>
															<EOperation name="getColNum" type="EInt">
																<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																	<EStringToStringMapEntry key="body" value="int i;
																	for(i = 0; i < ((ArrayList)colNames.get(sheet)).size(); i++)
																	if(((String)((ArrayList)colNames.get(sheet)).get(i)).compareTo(name) == 0)
																	return i;
																	return -1;"/>
																</EAnnotation>
																<EParameter name="sheet" type="EInt"/>
																<EParameter name="name" type="EString"/>
															</EOperation>
															<EOperation name="addSheet" type="">
																<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																	<EStringToStringMapEntry key="body" value="sheetNames.add(name);
																	colNames.add(new ArrayList());"/>
																</EAnnotation>
																<EParameter name="name" type="EString"/>
															</EOperation>
															<EOperation name="addCol" type="">
																<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																	<EStringToStringMapEntry key="body" value="((ArrayList)colNames.get(sheet)).add(name);
																	"/>
																</EAnnotation>
																<EParameter name="sheet" type="EInt"/>
																<EParameter name="name" type="EString"/>
															</EOperation>
															<EOperation name="initialize" type="">
																<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																	<EStringToStringMapEntry key="body" value="		int i, j;
																	sheetNames = new ArrayList();
																	colNames = new ArrayList();
																	for(i = 0; i < sh.length; i++){
																	addSheet(sh[i][0][0]);
																	for(j = 0; j < sh[i][1].length; j++){
																	addCol(i, sh[i][1][j]);
																	}
																	}
																	toCPP = new Hashtable();
																	toCPP.put("char", "char");
																	toCPP.put("short", "short");
																	toCPP.put("int", "int");
																	toCPP.put("long long", "long long");
																	toCPP.put("float", "float");
																	toCPP.put("double", "double");
																	toCPP.put("bool", "bool");
																	toCPP.put("string", "char *");
																	toCPP.put("void", "void");
																	
																	toIDL = new Hashtable();
																	toIDL.put("char", "long");
																	toIDL.put("short", "long");
																	toIDL.put("int", "long");
																	toIDL.put("long long", "long long");
																	toIDL.put("float", "float");
																	toIDL.put("double", "double");
																	toIDL.put("bool", "boolean");
																	toIDL.put("string", "string");
																	toIDL.put("void", "void");
																	
																	toIDLSeq = new Hashtable();
																	toIDLSeq.put("char", "Control::LongSeq");
																	toIDLSeq.put("short", "Control::LongSeq");
																	toIDLSeq.put("int", "Control::LongSeq");
																	toIDLSeq.put("long long", "Control::LongLongSeq");
																	toIDLSeq.put("float", "Control::FloatSeq");
																	toIDLSeq.put("double", "Control::DoubleSeq");
																	toIDLSeq.put("bool", "Control::BooleanSeq");
																	toIDLSeq.put("string", "Control::StringSeq");
																	toIDLSeq.put("void", "NOTHING");
																	
																	toCORBA = new Hashtable();
																	toCORBA.put("char", "CORBA::Long");
																	toCORBA.put("short", "CORBA::Long");
																	toCORBA.put("int", "CORBA::Long");
																	toCORBA.put("long long", "CORBA::LongLong");
																	toCORBA.put("float", "CORBA::Float");
																	toCORBA.put("double", "CORBA::Double");
																	toCORBA.put("bool", "CORBA::Boolean");
																	toCORBA.put("string", "char *");
																	toCORBA.put("void", "void");
																	
																	toCORBADevIO = new Hashtable();
																	toCORBADevIO.put("char", "CORBA::Long");
																	toCORBADevIO.put("short", "CORBA::Long");
																	toCORBADevIO.put("int", "CORBA::Long");
																	toCORBADevIO.put("long long", "CORBA::LongLong");
																	toCORBADevIO.put("float", "CORBA::Float");
																	toCORBADevIO.put("double", "CORBA::Double");
																	toCORBADevIO.put("bool", "CORBA::Boolean");
																	toCORBADevIO.put("string", "CORBA::String");
																	toCORBADevIO.put("void", "NOTHING");
																	
																	toCORBASeq = new Hashtable();
																	toCORBASeq.put("char", "Control::LongSeq");
																	toCORBASeq.put("short", "Control::LongSeq");
																	toCORBASeq.put("int", "Control::LongSeq");
																	toCORBASeq.put("long long", "Control::LongLongSeq");
																	toCORBASeq.put("float", "Control::FloatSeq");
																	toCORBASeq.put("double", "Control::DoubleSeq");
																	toCORBASeq.put("bool", "Control::BooleanSeq");
																	toCORBASeq.put("string", "Control::StringSeq");
																	toCORBASeq.put("void", "NOTHING");
																	
																	toBACI = new Hashtable();
																	toBACI.put("char", "long");
																	toBACI.put("short", "long");
																	toBACI.put("int", "long");
																	toBACI.put("long long", "longLong");
																	toBACI.put("float", "float");
																	toBACI.put("double", "double");
																	toBACI.put("bool", "boolean");
																	toBACI.put("string", "string");
																	toBACI.put("void", "void");
																	
																	toDatabase = new Hashtable();
																	toDatabase.put("char", "char");
																	toDatabase.put("short", "integer");
																	toDatabase.put("int", "integer");
																	toDatabase.put("long long", "integer");
																	toDatabase.put("float", "float");
																	toDatabase.put("double", "double");
																	toDatabase.put("bool", "boolean");
																	toDatabase.put("string", "string");
																	toDatabase.put("void", "-none-");
																	
																	rawToCPP = new Hashtable();
																	rawToCPP.put("bit", "char");
																	rawToCPP.put("ubyte", "unsigned char");
																	rawToCPP.put("int8", "char");
																	rawToCPP.put("uint8", "unsigned char");
																	rawToCPP.put("int16", "short");
																	rawToCPP.put("uint16", "unsigned short");
																	rawToCPP.put("int24", "int");
																	rawToCPP.put("uint24", "unsigned int");
																	rawToCPP.put("int32", "int");
																	rawToCPP.put("uint32", "unsigned int");
																	rawToCPP.put("int48", "long long");
																	rawToCPP.put("uint48", "unsigned long long");
																	rawToCPP.put("int64", "long long");
																	rawToCPP.put("uint64", "unsigned long long");
																	rawToCPP.put("float", "float");
																	rawToCPP.put("double", "double");
																	
																	rawToByteSwapped = new Hashtable();
																	rawToByteSwapped.put("bit", "false");
																	rawToByteSwapped.put("ubyte", "false");
																	rawToByteSwapped.put("int8", "false");
																	rawToByteSwapped.put("uint8", "false");
																	rawToByteSwapped.put("int16", "true");
																	rawToByteSwapped.put("uint16", "true");
																	rawToByteSwapped.put("int24", "true");
																	rawToByteSwapped.put("uint24", "true");
																	rawToByteSwapped.put("int32", "true");
																	rawToByteSwapped.put("uint32", "true");
																	rawToByteSwapped.put("int48", "true");
																	rawToByteSwapped.put("uint48", "true");
																	rawToByteSwapped.put("int64", "true");
																	rawToByteSwapped.put("uint64", "true");
																	rawToByteSwapped.put("float", "true");
																	rawToByteSwapped.put("double", "true");
																	
																	rawBytes = new Hashtable();
																	rawBytes.put("bit", "1");
																	rawBytes.put("ubyte", "1");
																	rawBytes.put("int8", "1");
																	rawBytes.put("uint8", "1");
																	rawBytes.put("int16", "2");
																	rawBytes.put("uint16", "2");
																	rawBytes.put("int24", "3");
																	rawBytes.put("uint24", "3");
																	rawBytes.put("int32", "4");
																	rawBytes.put("uint32", "4");
																	rawBytes.put("int48", "6");
																	rawBytes.put("uint48", "6");
																	rawBytes.put("int64", "8");
																	rawBytes.put("uint64", "8");
																	rawBytes.put("float", "4");
																	rawBytes.put("double", "8");
																	
																	worldToCPP = new Hashtable();
																	worldToCPP.put("byte", "char");
																	worldToCPP.put("ubyte", "unsigned char");
																	worldToCPP.put("short", "short");
																	worldToCPP.put("ushort", "unsigned short");
																	worldToCPP.put("int", "int");
																	worldToCPP.put("uint", "unsigned int");
																	worldToCPP.put("long", "long long");
																	worldToCPP.put("ulong", "unsigned long long");
																	worldToCPP.put("float", "float");
																	worldToCPP.put("double", "double");
																	worldToCPP.put("boolean", "bool");
																	worldToCPP.put("string", "std::string");
																	worldToCPP.put("acstime", "ACS::Time");
																	worldToCPP.put("void", "void");
																	
																	worldToJava = new Hashtable();
																	worldToJava.put("byte", "int");
																	worldToJava.put("ubyte", "int");
																	worldToJava.put("short", "int");
																	worldToJava.put("ushort", "int");
																	worldToJava.put("int", "int");
																	worldToJava.put("uint", "long");
																	worldToJava.put("long", "long");
																	worldToJava.put("ulong", "long");
																	worldToJava.put("float", "float");
																	worldToJava.put("double", "double");
																	worldToJava.put("boolean", "boolean");
																	worldToJava.put("string", "String");
																	worldToJava.put("acstime", "ACSTime");
																	worldToJava.put("void", "void");
																	
																	worldToBACI = new Hashtable();
																	worldToBACI.put("byte", "long");
																	worldToBACI.put("ubyte", "long");
																	worldToBACI.put("short", "long");
																	worldToBACI.put("ushort", "long");
																	worldToBACI.put("int", "long");
																	worldToBACI.put("uint", "uLong");
																	worldToBACI.put("long", "longLong");
																	worldToBACI.put("ulong", "uLongLong");
																	worldToBACI.put("float", "float");
																	worldToBACI.put("double", "double");
																	worldToBACI.put("boolean", "boolean");
																	worldToBACI.put("string", "string");
																	worldToBACI.put("acstime", "uLongLong");
																	worldToBACI.put("void", "void");
																	
																	worldToCORBA = new Hashtable();
																	worldToCORBA.put("byte", "CORBA::Long");
																	worldToCORBA.put("ubyte", "CORBA::Long");
																	worldToCORBA.put("short", "CORBA::Long");
																	worldToCORBA.put("ushort", "CORBA::Long");
																	worldToCORBA.put("int", "CORBA::Long");
																	worldToCORBA.put("uint", "CORBA::ULong");
																	worldToCORBA.put("long", "CORBA::LongLong");
																	worldToCORBA.put("ulong", "CORBA::ULongLong");
																	worldToCORBA.put("float", "CORBA::Float");
																	worldToCORBA.put("double", "CORBA::Double");
																	worldToCORBA.put("boolean", "CORBA::Boolean");
																	worldToCORBA.put("string", "char *");
																	worldToCORBA.put("acstime", "ACS::Time");
																	worldToCORBA.put("void", "void");
																	
																	worldToCORBADevIO = new Hashtable();
																	worldToCORBADevIO.put("byte", "CORBA::Long");
																	worldToCORBADevIO.put("ubyte", "CORBA::Long");
																	worldToCORBADevIO.put("short", "CORBA::Long");
																	worldToCORBADevIO.put("ushort", "CORBA::Long");
																	worldToCORBADevIO.put("int", "CORBA::Long");
																	worldToCORBADevIO.put("uint", "CORBA::ULong");
																	worldToCORBADevIO.put("long", "CORBA::LongLong");
																	worldToCORBADevIO.put("ulong", "CORBA::ULongLong");
																	worldToCORBADevIO.put("float", "CORBA::Float");
																	worldToCORBADevIO.put("double", "CORBA::Double");
																	worldToCORBADevIO.put("boolean", "CORBA::Boolean");
																	worldToCORBADevIO.put("string", "CORBA::String");
																	worldToCORBADevIO.put("acstime", "ACS::Time");
																	worldToCORBADevIO.put("void", "NOTHING");
																	
																	worldToCORBASeq = new Hashtable();
																	worldToCORBASeq.put("byte", "Control::LongSeq");
																	worldToCORBASeq.put("ubyte", "Control::LongSeq");
																	worldToCORBASeq.put("short", "Control::LongSeq");
																	worldToCORBASeq.put("ushort", "Control::LongSeq");
																	worldToCORBASeq.put("int", "Control::LongSeq");
																	worldToCORBASeq.put("uint", "Control::ULongSeq");
																	worldToCORBASeq.put("long", "Control::LongLongSeq");
																	worldToCORBASeq.put("ulong", "Control::ULongLongSeq");
																	worldToCORBASeq.put("float", "Control::FloatSeq");
																	worldToCORBASeq.put("double", "Control::DoubleSeq");
																	worldToCORBASeq.put("boolean", "Control::BooleanSeq");
																	worldToCORBASeq.put("string", "Control::StringSeq");
																	worldToCORBASeq.put("acstime", "Control::ACSTimeSeq");
																	worldToCORBASeq.put("void", "NOTHING");
																	
																	worldToIDLSeq = new Hashtable();
																	worldToIDLSeq.put("byte", "Control::LongSeq");
																	worldToIDLSeq.put("ubyte", "Control::LongSeq");
																	worldToIDLSeq.put("short", "Control::LongSeq");
																	worldToIDLSeq.put("ushort", "Control::LongSeq");
																	worldToIDLSeq.put("int", "Control::LongSeq");
																	worldToIDLSeq.put("uint", "Control::ULongSeq");
																	worldToIDLSeq.put("long", "Control::LongLongSeq");
																	worldToIDLSeq.put("ulong", "Control::ULongLongSeq");
																	worldToIDLSeq.put("float", "Control::FloatSeq");
																	worldToIDLSeq.put("double", "Control::DoubleSeq");
																	worldToIDLSeq.put("boolean", "Control::BooleanSeq");
																	worldToIDLSeq.put("string", "Control::StringSeq");
																	worldToIDLSeq.put("acstime", "Control::ACSTimeSeq");
																	worldToIDLSeq.put("void", "NOTHING");
																	
																	worldToIDL = new Hashtable();
																	worldToIDL.put("byte", "long");
																	worldToIDL.put("ubyte", "long");
																	worldToIDL.put("short", "long");
																	worldToIDL.put("ushort", "long");
																	worldToIDL.put("int", "long");
																	worldToIDL.put("uint", "unsigned long");
																	worldToIDL.put("long", "long long");
																	worldToIDL.put("ulong", "unsigned long long");
																	worldToIDL.put("float", "float");
																	worldToIDL.put("double", "double");
																	worldToIDL.put("boolean", "boolean");
																	worldToIDL.put("string", "string");
																	worldToIDL.put("acstime", "ACS::Time");
																	worldToIDL.put("void", "void");
																	
																	worldToDatabase = new Hashtable();
																	worldToDatabase.put("byte", "integer");
																	worldToDatabase.put("ubyte", "integer");
																	worldToDatabase.put("short", "integer");
																	worldToDatabase.put("ushort", "integer");
																	worldToDatabase.put("int", "integer");
																	worldToDatabase.put("uint", "integer");
																	worldToDatabase.put("long", "integer");
																	worldToDatabase.put("ulong", "integer");
																	worldToDatabase.put("float", "float");
																	worldToDatabase.put("double", "double");
																	worldToDatabase.put("boolean", "boolean");
																	worldToDatabase.put("string", "string");
																	worldToDatabase.put("acstime", "integer");
																	worldToDatabase.put("void", "-none-");"/>
																</EAnnotation>
																<EParameter name="sh" type="EStringArray3"/>
															</EOperation>
															<attr name="DepChar" changeable="false" defaultValueLiteral="^" type="//EString"/>
															<attr name="CelsiusToKelvin" changeable="false" defaultValueLiteral="CelsiusToKelvin" type="//EString"/>
															<attr name="sheetNames" type="//ArrayList"/>
															<attr name="colNames" type="//ArrayList"/>
															<attr name="toCPP" type="//Hashtable"/>
															<attr name="toIDL" type="//Hashtable"/>
															<attr name="toIDLSeq" type="//Hashtable"/>
															<attr name="toCORBA" type="//Hashtable"/>
															<attr name="toCORBASeq" type="//Hashtable"/>
															<attr name="toCORBADevIO" type="//Hashtable"/>
															<attr name="toBACI" type="//Hashtable"/>
															<attr name="toDatabase" type="//Hashtable"/>
															<attr name="rawToCPP" type="//Hashtable"/>
															<attr name="rawToByteSwapped" type="//Hashtable"/>
															<attr name="rawBytes" type="//Hashtable"/>
															<attr name="worldToCPP" type="//Hashtable"/>
															<attr name="worldToIDL" type="//Hashtable"/>
															<attr name="worldToIDLSeq" type="//Hashtable"/>
															<attr name="worldToCORBA" type="//Hashtable"/>
															<attr name="worldToCORBASeq" type="//Hashtable"/>
															<attr name="worldToCORBADevIO" type="//Hashtable"/>
															<attr name="worldToBACI" type="//Hashtable"/>
															<attr name="worldToJava" type="//Hashtable"/>
															<attr name="worldToDatabase" type="//Hashtable"/>
														</class>
														<class name="Util">
															<EOperation name="error" type="">
																<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																	<EStringToStringMapEntry key="body" value="System.out.println(msg);
																	System.exit(0);"/>
																</EAnnotation>
																<EParameter name="msg" type="EString"/>
															</EOperation>
															<EOperation name="RemoveLinesFromFile" type="">
																<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																	<EStringToStringMapEntry key="body" value="				java.io.PrintStream out = null;
																	java.io.LineNumberReader in = null;
																	String line = null;
																	
																	java.io.File file = new java.io.File (dirName,fileName);
																	if (!file.isFile())
																	error(file.getAbsolutePath() + " is not a file.");
																	
																	try {
																	// Open the input file.
																	in = new java.io.LineNumberReader(new java.io.FileReader(file));
																	
																	// Create the output file.
																	String newName = file.getAbsolutePath() + ".tmp";
																	out = new java.io.PrintStream (new java.io.FileOutputStream (new java.io.File(newName)));
																	
																	line = in.readLine();
																	// Skip all blank lines at the beginning.
																	while (true) {
																	if (line != null && line.trim().length() == 0)
																	line = in.readLine();
																	else
																	break;
																	}
																	boolean blankFound = false;
																	while (line != null) {
																	if (line.trim().length() == 0) {
																	blankFound = true;
																	} else {
																	if (blankFound) {
																	blankFound = false;
																	if (replace == 1)
																	out.println();
																	}
																	out.println(line);
																	}
																	line = in.readLine();
																	}
																	// Close the input file and the output file.
																	in.close();
																	out.close();
																	// Delete the old file and rename the new file.
																	if (!file.delete())
																	error("Could not delete " + file.getAbsolutePath());
																	java.io.File newFile = new java.io.File (newName);
																	newFile.renameTo(file);
																	}catch (java.io.IOException err) {
																	error(err.toString());
																	}"/>
																</EAnnotation>
																<EParameter name="dirName" type="EString"/>
																<EParameter name="fileName" type="EString"/>
																<EParameter name="replace" type="EInt"/>
															</EOperation>
															<EOperation name="AltName" type="EString">
																<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																	<EStringToStringMapEntry key="body" value="if (str == null || str.length() == 0)
																	return null;
																	String s = str;
																	StringBuffer x = new StringBuffer ();
																	char c = s.charAt(0);
																	x.append(Character.toUpperCase(c));
																	for (int i = 1; i < s.length(); ++i) {
																	c = s.charAt(i);
																	if (c == '_') {
																	do {
																	++i;
																	if (i == s.length())
																	break;
																	c = s.charAt(i);
																	} while (c == '_');
																	if (i == s.length())
																	break;
																	x.append(Character.toUpperCase(c));
																	} else {
																	x.append(Character.toLowerCase(c));
																	}
																	}
																	return x.toString();"/>
																</EAnnotation>
																<EParameter name="str" type="EString"/>
															</EOperation>
															<EOperation name="formatDescriptionBase" type="EString">
																<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																	<EStringToStringMapEntry key="body" value="if (s == null)
																	return "";
																	String raw = decodeHTMLChars(s);
																	StringBuffer extract = new StringBuffer ();
																	int begin = 0;
																	int current = 0;
																	int len = raw.length();
																	char c = 0;
																	while (current < len) {
																	c = raw.charAt(current);
																	if (c == '&' && (current + 4) <= len && raw.charAt(current + 1) == '#' &&
																	raw.charAt(current + 2) == '1' && raw.charAt(current + 3) == '0' &&
																	raw.charAt(current + 4) == ';') {
																	c = ' ';
																	current += 4;
																	}
																	extract.append(c);
																	if ((current - begin) > maxLength && c == ' ') {
																		extract.append(newline);
																		extract.append(prefix);
																		begin = current + 1;
																		}
																		++current;
																		}
																		return extract.toString();"/>
																	</EAnnotation>
																	<EParameter name="s" type="EString"/>
																	<EParameter name="prefix" type="EString"/>
																</EOperation>
																<EOperation name="formatDescription" type="EString">
																	<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																		<EStringToStringMapEntry key="body" value="return formatDescriptionBase(s,"");"/>
																	</EAnnotation>
																	<EParameter name="s" type="EString"/>
																</EOperation>
																<EOperation name="formatDescriptionL1" type="EString">
																	<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																		<EStringToStringMapEntry key="body" value="return formatDescriptionBase(s,"/// ");"/>
																	</EAnnotation>
																	<EParameter name="s" type="EString"/>
																</EOperation>
																<EOperation name="formatDescriptionL2" type="EString">
																	<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																		<EStringToStringMapEntry key="body" value="return formatDescriptionBase(s,"    /// ");"/>
																	</EAnnotation>
																	<EParameter name="s" type="EString"/>
																</EOperation>
																<EOperation name="formatDescriptionL4" type="EString">
																	<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																		<EStringToStringMapEntry key="body" value="return formatDescriptionBase(s,"/// ");"/>
																	</EAnnotation>
																	<EParameter name="s" type="EString"/>
																</EOperation>
																<EOperation name="formatDescriptionL5" type="EString">
																	<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																		<EStringToStringMapEntry key="body" value="return formatDescriptionBase(s,"    /// ");"/>
																	</EAnnotation>
																	<EParameter name="s" type="EString"/>
																</EOperation>
																<EOperation name="descriptionAsString" type="EString">
																	<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																		<EStringToStringMapEntry key="body" value="if (s == null)
																		return "";
																		String raw = decodeHTMLChars(s);
																		StringBuffer extract = new StringBuffer ();
																		int current = 0;
																		int len = raw.length();
																		char c = 0;
																		while (current < len) {
																		c = raw.charAt(current);
																		if (c == '&' && (current + 4) <= len && raw.charAt(current + 1) == '#' &&
																		raw.charAt(current + 2) == '1' && raw.charAt(current + 3) == '0' &&
																		raw.charAt(current + 4) == ';') {
																		c = ' ';
																		current += 4;
																		}
																		extract.append(c);
																		++current;
																		}
																		return extract.toString();"/>
																	</EAnnotation>
																	<EParameter name="s" type="EString"/>
																</EOperation>
																<EOperation name="decodeHTMLChars" type="EString">
																	<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																		<EStringToStringMapEntry key="body" value=" if (s == null || s.length() == 0)
																		return s;
																		StringBuffer x = new StringBuffer();
																		int index = 0;
																		int index1 = 0;
																		int index2 = 0;
																		int index3 = 0;
																		int index4 = 0;
																		int current = 0;
																		while (true) {
																		// look for any HTML encoded character
																		index1 = s.indexOf("&lt;", current);
																		index2 = s.indexOf("&gt;", current);
																		index3 = s.indexOf("&amp;", current);
																		index4 = s.indexOf("&#xd;", current);
																		// if there aren't any, we're done
																		if (index1 == -1 && index2 == -1 && index3 == -1 && index4 == -1) {
																		x.append(s.substring(current));
																		break;
																		}
																		// set index to the least value that is not -1
																		index = index1;
																		if (index == -1 || (index2 != -1 && index2 < index))
																		index = index2;
																		if (index == -1 || (index3 != -1 && index3 < index))
																		index = index3;
																		if (index == -1 || (index4 != -1 && index4 < index))
																		index = index4;
																		// append the current text up to index
																		x.append(s.substring(current,index));
																		// append the correct character and skip over the HTML encoded characters
																		if (index == index1) {
																		x.append('<');
																		current = index + 4;
																		} else if (index == index2) {
																		x.append('>');
																			current = index + 4;
																			} else if (index == index3) {
																			x.append('&');
																			current = index + 5;
																			} else if (index == index4) {
																			x.append('\n');
																			current = index + 5;
																			}
																			}
																			return new String (x);"/>
																		</EAnnotation>
																		<EParameter name="s" type="EString"/>
																	</EOperation>
																	<EOperation name="isArray" type="EBoolean">
																		<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																			<EStringToStringMapEntry key="body" value="return s.endsWith("]") ? true : false;"/>
																		</EAnnotation>
																		<EParameter name="s" type="EString"/>
																	</EOperation>
																	<EOperation name="NumberRawDataTypeBytes" type="EString">
																		<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																			<EStringToStringMapEntry key="body" value="return (String)tables.getRawBytes().get(s);"/>
																		</EAnnotation>
																		<EParameter name="s" type="EString"/>
																	</EOperation>
																	<EOperation name="RawDataTypeTotalBytes" type="EString">
																		<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																			<EStringToStringMapEntry key="body" value="		if (isArray(s)) {
																			int b;
																			int n = Integer.parseInt(NumberOfItems(s));
																			if(s.startsWith("&lt;"))
																			return "0";
																			if(s.startsWith("["))
																			return "0";
																			int i = s.indexOf("[");
																			String aux = (String) tables.getRawBytes().get(s.substring(0, i));
																			b = Integer.parseInt(aux);
																			
																			String x = Integer.toString(n * b);
																			return x;
																			}
																			return (String)tables.getRawBytes().get(s);"/>
																		</EAnnotation>
																		<EParameter name="s" type="EString"/>
																	</EOperation>
																	<EOperation name="NumberOfItems" type="EString">
																		<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																			<EStringToStringMapEntry key="body" value="		if (s.startsWith("&lt;"))
																			return "1";
																			if (!isArray(s))
																			return "1";
																			int i = s.indexOf("[");
																			if (i == -1)
																			throw new RuntimeException("Invalid syntax in array notation: (" + s + ")");
																			String x = s.substring(i + 1, s.length() - 1);
																			try {
																			int n = Integer.parseInt(x);
																			} catch (NumberFormatException err) {
																			throw new RuntimeException("Invalid syntax in array notation: (" + s + ")");
																			}
																			return x;"/>
																		</EAnnotation>
																		<EParameter name="s" type="EString"/>
																	</EOperation>
																	<EOperation name="getRawDataTypeIndex" type="EInt">
																		<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																			<EStringToStringMapEntry key="body" value="		if (s.startsWith("&lt;"))
																			return 0;
																			if (s.startsWith("["))
																			return 0; // This isn't really true, but it will pass the validation.
																			String x = s;
																			if (isArray(s)) {
																			int i = s.indexOf("[");
																			if (i == -1)
																			throw new RuntimeException("Invalid syntax in array notation: (" + s + ")");
																			x = s.substring(0, i);
																			}
																			return 0;
																			"/>
																		</EAnnotation>
																		<EParameter name="s" type="EString"/>
																	</EOperation>
																	<EOperation name="toArrayTime" type="EString">
																		<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																			<EStringToStringMapEntry key="body" value="		    	//The required string date form is "YYYY-MM-DDThh:mm:ss.ssss".
																			alma.hla.runtime.asdm.types.ArrayTime t = new alma.hla.runtime.asdm.types.ArrayTime ("20" + parseDateString(s,true) + "T00:00:00.0");
																			long l = t.get();
																			return Long.toString(l);"/>
																		</EAnnotation>
																		<EParameter name="s" type="EString"/>
																	</EOperation>
																	<EOperation name="toDatabaseDate" type="EString">
																		<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																			<EStringToStringMapEntry key="body" value="return parseDateString(s,false);"/>
																		</EAnnotation>
																		<EParameter name="s" type="EString"/>
																	</EOperation>
																	<EOperation name="parseDateString" type="EString">
																		<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																			<EStringToStringMapEntry key="body" value="		int pos = 0;
																			int n = s.indexOf('-'); 	if (n == -1) return null;
																			String yy = s.substring(pos,n);
																			if (yy.startsWith("20"))
																			yy = yy.substring(2);
																			pos = n + 1;
																			n = s.indexOf('-',pos); 	if (n == -1) return null;
																			String mm = s.substring(pos,n);
																			int nmm = 0;
																			try {
																			nmm = Integer.parseInt(mm);
																			} catch (NumberFormatException err) {
																			return null;
																			}
																			if (nmm < 1 || nmm > 12) return null;
																				pos = n + 1;
																				n = s.indexOf('T',pos); 	if (n == -1) return null;
																				String dd = s.substring(pos,n);
																				return yy + '-' + (alt ? montHalt[nmm - 1] : month[nmm - 1]) + '-' + dd;"/>
																			</EAnnotation>
																			<EParameter name="s" type="EString"/>
																			<EParameter name="alt" type="EBoolean"/>
																		</EOperation>
																		<EOperation name="normalizeNumber" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value=" if (wdt.equals("boolean"))
																				return normalizeBoolean(value);
																				else if (wdt.equals("double") || wdt.equals("float"))
																				return normalizeFloat(value);
																				else
																				return value;"/>
																			</EAnnotation>
																			<EParameter name="wdt" type="EString"/>
																			<EParameter name="value" type="EString"/>
																		</EOperation>
																		<EOperation name="normalizeFloat" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="	   try {
																				// Does value contain a valid "double" or "float"?
																				Double.parseDouble(value);
																				// Does value contain a decimal point?
																				if (-1 == value.indexOf('.')) {
																				// No decimal point found.
																				// Does value contain an exponent?
																				int i = value.indexOf('E');
																				if (-1 != i) {
																				// Insert the ".0" before the "E".
																				String parts[] = value.split("E");
																				return parts[0] + ".0E" + parts[1];
																				} else {
																				// No exponent found.
																				// Append the ".0" to the end.
																				return value + ".0";
																				}
																				} else {
																				// value contains a decimal point.  Return it without changes.  
																				return value;
																				}
																				} catch (NumberFormatException de) {
																				try {
																				// Does this contain a valid "integer" or "long"?
																				Integer.parseInt(value);
																				// Add the missing decimal point and trailing "0".
																				return value + ".0";
																				} catch (NumberFormatException ie) {
																				// This is not a number.
																				// Return it as is.
																				return value;
																				}
																				}"/>
																			</EAnnotation>
																			<EParameter name="value" type="EString"/>
																		</EOperation>
																		<EOperation name="normalizeBoolean" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="	   int indexOfDot = value.indexOf('.');
																				if (-1 == indexOfDot) {
																				return value;
																				} else {
																				return value.substring(0,indexOfDot);
																				}"/>
																			</EAnnotation>
																			<EParameter name="value" type="EString"/>
																		</EOperation>
																		<EOperation name="getInstallDir" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="		String dirLocation = null;
																				String acsroot = System.getenv("ACSROOT");
																				String intlist = System.getenv("INTLIST");
																				String introot = System.getenv("INTROOT");
																				
																				if (acsroot != null && new java.io.File(acsroot + "/lib/ControlGenHwDevicev2").exists()) {
																				dirLocation = acsroot + "/lib/ControlGenHwDevicev2";
																				}
																				
																				if (intlist != null ) {
																				String dirs[] = intlist.split(":");
																				for (int i = 0; i < dirs.length; i++) {
																				if (new java.io.File(dirs[i] + "/lib/ControlGenHwDevicev2").exists()) {
																				dirLocation = dirs[i] + "/lib/ControlGenHwDevicev2";
																				break;
																				}
																				}
																				
																				}
																				
																				if (introot != null && new java.io.File(introot + "/lib/ControlGenHwDevicev2").exists()) {
																				dirLocation = introot + "/lib/ControlGenHwDevicev2";
																				}  
																				
																				assert dirLocation != null : "dirLocation is null, this means that I cannot find lib/ControlGenHwDevicev2";
																				return dirLocation;"/>
																			</EAnnotation>
																		</EOperation>
																		<attr name="newline" type="//EString"/>
																		<attr name="maxLength" defaultValueLiteral="54" type="//EInt"/>
																		<attr name="MONTH" type="//EStringArray"/>
																		<attr name="MONTHalt" type="//EStringArray"/>
																		<ref name="tables" type="Table"/>
																	</class>
																	<type name="ArrayList" instanceClassName="java.util.ArrayList"/>
																	<type name="Hashtable" instanceClassName="java.util.Hashtable"/>
																	<type name="SimpleErrorHandlerDT" instanceClassName="alma.control.datamodel.meta.base.SimpleErrorHandler"/>
																	<type name="RuntimeExceptionDT" instanceClassName="java.lang.RuntimeException"/>
																	<type name="ErrorHandlerDT" instanceClassName="org.xml.sax.ErrorHandler"/>
																	<type name="EObjectDT" instanceClassName="org.eclipse.emf.ecore.EObject"/>
																	<type name="SAXParseExceptionDT" instanceClassName="org.xml.sax.SAXParseException"/>
																	<type name="EStringArray" instanceClassName="java.lang.String[]"/>
																	<type name="EStringArray2" instanceClassName="java.lang.String[][]"/>
																	<type name="EStringArray3" instanceClassName="java.lang.String[][][]"/>
																	<class name="ErrorHandlerAuxClass" instanceClassName="org.xml.sax.ErrorHandler" abstract="true" interface="true"/>
																</package>
																<package name="eth" nsURI="http://alma/Control/datamodel/meta/eth/1.0" nsPrefix="alma.Control.datamodel.meta.eth">
																	<class name="Archive">
																		<EOperation name="setArchiveEth" type="">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="this.tables = tables;
																				setArchiveProperty(row, tables);"/>
																			</EAnnotation>
																			<EParameter name="row" type="EStringArray"/>
																			<EParameter name="tables" type="Table"/>
																		</EOperation>
																	</class>
																	<class name="Control">
																		<EOperation name="setAssemblyName" type="">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="mac.setAssemblyName(assembly);"/>
																			</EAnnotation>
																			<EParameter name="assembly" type="EString"/>
																		</EOperation>
																		<EOperation name="Assembly" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return mac.Assembly();"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="Address" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return mac.Address();"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="IsEnumAddress" type="EBoolean">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="		try{
																				Integer.decode(mac.Address());
																				}catch(Exception e){
																				return true;
																				}
																				
																				return false;"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="DataType" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return mac.DataType();"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="IsDataArray" type="EBoolean">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return mac.IsDataArray();"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="IsOpenArray" type="EBoolean">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return mac.IsOpenArray();"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="getArrayLength" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return mac.getArrayLength();"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="DataToIDLType" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return mac.DataToIDLType();"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="DataToIDLSeqType" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return mac.DataToIDLSeqType();"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="DataToCPPType" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return mac.DataToCPPType();"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="DataToCORBAType" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return mac.DataToCORBAType();"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="DataToCORBADevIOType" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return mac.DataToCORBADevIOType();"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="DataToCORBASeqType" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return mac.DataToCORBASeqType();"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="DataToBACIType" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return mac.DataToBACIType();"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="DataToDatabaseType" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return mac.DataToDatabaseType();"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="setControlEth" type="">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="this.tables = tables;
																				this.utils = utils;"/>
																			</EAnnotation>
																			<EParameter name="tables" type="Table"/>
																			<EParameter name="utils" type="Util"/>
																		</EOperation>
																		<EOperation name="setControlEth" type="">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="this.parent = parent;
																				setControlPoint(row, parent);
																				mac = EthFactory.eINSTANCE.createMandC();
																				mac.setMandCEth(row, sheet);"/>
																			</EAnnotation>
																			<EParameter name="row" type="EStringArray"/>
																			<EParameter name="parent" type="EObject"/>
																		</EOperation>
																		<ref name="mac" type="MandC"/>
																	</class>
																	<class name="DeviceModel">
																		<EOperation name="CreateModel" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return "";"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="VendorClass" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return ((MainImpl)main).VendorClass();"/>
																			</EAnnotation>
																		</EOperation>
																		<ref name="mainEth" containment="true" type="Main"/>
																		<ref name="cPoints" upperBound="-1" containment="true" type="Control"/>
																		<ref name="aPoints" upperBound="-1" containment="true" type="Archive"/>
																		<ref name="mPoints" upperBound="-1" containment="true" type="Monitor"/>
																		<ref name="note" containment="true" type="Note"/>
																	</class>
																	<class name="Main">
																		<EOperation name="VendorClass" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Vendor Class")];"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="setMainEth" type="">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="this.row = row;
																				super.setMainBase(row);"/>
																			</EAnnotation>
																			<EParameter name="row" type="EStringArray"/>
																		</EOperation>
																	</class>
																	<class name="MandC">
																		<EOperation name="setAssemblyName" type="">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="this.assembly = assembly;"/>
																			</EAnnotation>
																			<EParameter name="assembly" type="EString"/>
																		</EOperation>
																		<EOperation name="Assembly" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return assembly;"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="Address" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Address")];"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="DataType" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="String s = row[tables.getColNum(sheet, "Data Type")];
																				return IsDataArray() ? s.substring(0,s.indexOf("[")) : s;"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="IsDataArray" type="EBoolean">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return row[tables.getColNum(sheet, "Data Type")].endsWith("]") ? true : false;"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="IsOpenArray" type="EBoolean">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="if(!IsDataArray()) return false;
																				String s =  row[tables.getColNum(sheet, "Data Type")];
																				return (s.indexOf("]") - s.indexOf("[") == 1) ? true : false;"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="getArrayLength" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="if(!IsDataArray()) return "1";
																				String s = row[tables.getColNum(sheet, "Data Type")];
																				return s.substring(s.indexOf("[")+1,s.indexOf("]"));"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="DataToCPPType" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return (String)tables.getToCPP().get(DataType());"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="DataToIDLType" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return (String)tables.getToIDL().get(DataType());"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="DataToIDLSeqType" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return (String)tables.getToIDLSeq().get(DataType());"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="DataToCORBAType" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return (String)tables.getToCORBA().get(DataType());"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="DataToCORBADevIOType" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return (String)tables.getToCORBADevIO().get(DataType());"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="DataToCORBASeqType" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return (String)tables.getToCORBASeq().get(DataType());"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="DataToBACIType" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return (String)tables.getToBACI().get(DataType());"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="DataToDatabaseType" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return (String)tables.getToDatabase().get(DataType());"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="setMandCEth" type="">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="this.tables = tables;
																				this.utils = utils;"/>
																			</EAnnotation>
																			<EParameter name="tables" type="Table"/>
																			<EParameter name="utils" type="Util"/>
																		</EOperation>
																		<EOperation name="setMandCEth" type="">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="this.row = row;
																				this.sheet = sheet;"/>
																			</EAnnotation>
																			<EParameter name="row" type="EStringArray"/>
																			<EParameter name="sheet" type="EInt"/>
																		</EOperation>
																		<attr name="row" type="//EStringArray"/>
																		<attr name="sheet" type="//EInt"/>
																		<attr name="assembly" type="//EString"/>
																		<ref name="tables" type="Table"/>
																		<ref name="utils" type="Util"/>
																	</class>
																	<class name="Monitor">
																		<EOperation name="setAssemblyName" type="">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="mac.setAssemblyName(assembly);"/>
																			</EAnnotation>
																			<EParameter name="assembly" type="EString"/>
																		</EOperation>
																		<EOperation name="Assembly" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return mac.Assembly();"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="Address" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return mac.Address();"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="IsEnumAddress" type="EBoolean">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="		try{
																				Integer.decode(mac.Address());
																				}catch(Exception e){
																				return true;
																				}
																				return false;"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="DataType" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return mac.DataType();"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="IsDataArray" type="EBoolean">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return mac.IsDataArray();"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="IsOpenArray" type="EBoolean">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return mac.IsOpenArray();"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="getArrayLength" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return mac.getArrayLength();"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="DataToIDLType" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return mac.DataToIDLType();"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="DataToIDLSeqType" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return mac.DataToIDLSeqType();"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="DataToCPPType" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return mac.DataToCPPType();"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="DataToCORBAType" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return mac.DataToCORBAType();"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="DataToCORBADevIOType" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return mac.DataToCORBADevIOType();"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="DataToCORBASeqType" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return mac.DataToCORBASeqType();"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="DataToBACIType" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return mac.DataToBACIType();"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="IsArchived" type="EBoolean">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="
																				if (DataType().equals("uint"))
																				return false;
																				
																				if ( DataType().equals("bool") || DataType().equals("boolean")
																				|| DataType().equals("string")
																				|| (DataType().equals("double") && IsDataArray())
																				|| (DataType().equals("int") && IsDataArray()) )
																				return false;
																				return true;"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="DataToDatabaseType" type="EString">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return mac.DataToDatabaseType();"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="IsPartOfPattern" type="EBoolean">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return false;"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="IsHomogeneous" type="EBoolean">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return true;"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="IsPartOfHomogeneous" type="EBoolean">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="return false;"/>
																			</EAnnotation>
																		</EOperation>
																		<EOperation name="setMonitorEth" type="">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="this.tables = tables;
																				this.utils = utils;"/>
																			</EAnnotation>
																			<EParameter name="tables" type="Table"/>
																			<EParameter name="utils" type="Util"/>
																		</EOperation>
																		<EOperation name="setMonitorEth" type="">
																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																				<EStringToStringMapEntry key="body" value="this.row = row;
																				this.parent = parent;
																				setMonitorPoint(row, parent);
																				mac = EthFactory.eINSTANCE.createMandC();
																				mac.setMandCEth(tables, utils);
																				mac.setMandCEth(row, sheet);"/>
																			</EAnnotation>
																			<EParameter name="row" type="EStringArray"/>
																			<EParameter name="parent" type="EObject"/>
																		</EOperation>
																		<ref name="mac" type="MandC"/>
																	</class>
																</package>
															</package>
														</package>
													</package>
												</package>
