<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="alma" nsURI="http://alma/1.0" nsPrefix="alma">
  <eSubpackages name="control" nsURI="http://alma.control/1.0" nsPrefix="alma.control">
    <eSubpackages name="datamodel" nsURI="http://alma/Control/datamodel/1.0" nsPrefix="alma.Control.datamodel">
      <eSubpackages name="meta" nsURI="http://alma/Control/datamodel/meta/1.0" nsPrefix="alma.Control.datamodel.meta">
        <eSubpackages name="amb" nsURI="http://alma/Control/datamodel/meta/amb/1.0"
            nsPrefix="alma.Control.datamodel.meta.amb">
          <eClassifiers xsi:type="ecore:EClass" name="Archive" eSuperTypes="#//control/datamodel/meta/base/ArchiveProperty">
            <eOperations name="Assembly" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Assembly&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsIntervalTE" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="String s = IntervalFull();&#xD;&#xA;       if (s.startsWith(&quot;te/&quot;))&#xD;&#xA;           return true;&#xD;&#xA;return false;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Interval" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="if(IsIntervalTE())&#xD;&#xA;&#x9;return IntervalFull().substring(3);&#xD;&#xA;return IntervalFull();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="setArchiveAmb">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="this.row = row;&#xA;this.tables = tables;&#xA;super.setArchiveProperty(row, tables);"/>
              </eAnnotations>
              <eParameters name="row" eType="#//control/datamodel/meta/base/EStringArray"/>
              <eParameters name="tables" eType="#//control/datamodel/meta/base/Table"/>
            </eOperations>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Control" eSuperTypes="#//control/datamodel/meta/base/ControlPoint">
            <eOperations name="Data" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Data&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Value&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Returns" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Returns&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Parameter" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Parameter&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Assembly" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.Assembly();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="RCA" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.RCA();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="RawDataType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.RawDataType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="TeRelated" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.TeRelated();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.WorldDataType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Scale" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.Scale();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Offset" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.Offset();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="RawDataToCPPType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.RawDataToCPPType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataToCPPType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.WorldDataToCPPType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataToCORBAType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.WorldDataToCORBAType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataToIDLSeqType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.WorldDataToIDLSeqType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataToIDLType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.WorldDataToIDLType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataToCORBASeqType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.WorldDataToCORBASeqType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataToCORBADevIOType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.WorldDataToCORBADevIOType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataToJavaType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.WorldDataToJavaType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataToDatabaseType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.WorldDataToDatabaseType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataToBACIType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.WorldDataToBACIType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsRawDataArray" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.IsRawDataArray();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsWorldDataArray" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.IsWorldDataArray();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="MinRange" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return utils.normalizeNumber(WorldDataType(),super.MinRange());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="MaxRange" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return utils.normalizeNumber(WorldDataType(),super.MaxRange());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="idlReturns" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return (String)tables.getWorldToIDL().get(Returns());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="corbaReturns" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return (String)tables.getWorldToCORBA().get(Returns());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="idlDeclaration" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="String s = idlSignature();&#xD;&#xA;return s;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="idlSignature" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;String s = &quot;SET_&quot; + CPName();&#xD;&#xA;&#x9;&#x9;if (!Parameter().equals(&quot;default&quot;)) {&#xD;&#xA;&#x9;&#x9;&#x9;if (Parameter().equals(&quot;void&quot;))&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;s += &quot;()&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;s += &quot;(&quot; + idlParameters() + &quot;)&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;if (External()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;s +=  &quot; raises(ControlExceptions::CAMBErrorEx, ControlExceptions::INACTErrorEx)&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;return s;&#xD;&#xA;&#x9;&#x9;&#x9;// This gets the non-default case out of the way.&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;// This is the &quot;default&quot; case.&#xD;&#xA;&#x9;&#x9;boolean isTeRelated = TeRelated();&#xD;&#xA;&#x9;&#x9;boolean isExternal = External();&#xD;&#xA;&#x9;&#x9;boolean isArray = IsWorldDataArray();&#xD;&#xA;&#x9;&#x9;if (isExternal) {&#xD;&#xA;&#x9;&#x9;&#x9;if (isArray) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;s += &quot;(in &quot; + WorldDataToIDLSeqType() + &quot; world&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;s += &quot;(in &quot; + WorldDataToIDLType() + &quot; world&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;if (isTeRelated) {&#xD;&#xA;&#x9;&#x9;&#x9;s += &quot;, in ACS::Time requestTime)&quot;;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;s += &quot;)&quot;;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;if (isExternal) {&#xD;&#xA;&#x9;&#x9;&#x9;s += &quot; raises(ControlExceptions::CAMBErrorEx, ControlExceptions::INACTErrorEx)&quot;;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;return s;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="idlParameters" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;&#x9;&#x9;String s = Parameter();&#xA;&#x9;&#x9;&#x9;&#x9;int pos = 0;&#xA;&#x9;&#x9;&#x9;&#x9;int n = s.indexOf(' ');&#xA;&#x9;&#x9;&#x9;&#x9;if (n == -1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;throw new RuntimeException(&quot;Invalid syntax in Parameter field: (&quot; + s + &quot;)&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;String word = s.substring(pos,n);&#xA;&#x9;&#x9;&#x9;&#x9;String out = &quot;&quot;;&#xA;&#x9;&#x9;&#x9;&#x9;boolean isArray = IsWorldDataArray();&#xA;&#x9;&#x9;&#x9;&#x9;if (isArray) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;out += &quot;in &quot; + (String)tables.getWorldToIDLSeq().get(word) + &quot; &quot;;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;out = &quot;in &quot; + (String)tables.getWorldToIDL().get(word) + &quot; &quot;;&#xA;&#x9;&#x9;&#x9;&#x9;pos = n + 1;&#xA;&#x9;&#x9;&#x9;&#x9;while (true) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;n = s.indexOf(',',pos);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (n == -1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;word = s.substring(pos,n);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;out += word + &quot;, &quot;;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pos = n + 1;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;while (true) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (s.charAt(pos) == ' ')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pos++;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;n = s.indexOf(' ',pos);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (n == -1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new RuntimeException(&quot;Invalid syntax in Parameter field: (&quot; + s + &quot;)&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;word = s.substring(pos,n);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (isArray) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String type = (String)tables.getWorldToIDL().get(word);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;type = type.replace(&quot;unsigned long&quot;, &quot;uLong&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;out += &quot;in &quot; + type;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;out = &quot;in &quot; + (String)tables.getWorldToIDL().get(word) + &quot; &quot;;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pos = n + 1;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;word = s.substring(pos);&#xA;&#x9;&#x9;&#x9;&#x9;out += word;&#xA;&#x9;&#x9;&#x9;&#x9;return out;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="corbaDeclaration" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="String s = &quot;&quot;;&#xD;&#xA;        if (!Parameter().equals(&quot;default&quot;)) {&#xD;&#xA;            if (Parameter().equals(&quot;void&quot;))&#xD;&#xA;                s += &quot;()&quot;;&#xD;&#xA;            else&#xD;&#xA;                s += &quot;(&quot; + corbaParameters() + &quot;)&quot;;&#xD;&#xA;            return s;&#xD;&#xA;            // This gets the non-default case out of the way.&#xD;&#xA;        }&#xD;&#xA;        // This is the &quot;default&quot; case.&#xD;&#xA;        boolean isTeRelated = TeRelated();&#xD;&#xA;        boolean isArray = IsWorldDataArray();&#xD;&#xA;        if(isArray == true)&#xD;&#xA;        {&#xD;&#xA;            s += &quot;(const &quot; + WorldDataToCORBASeqType() + &quot;&amp; world&quot;;&#xD;&#xA;        }&#xD;&#xA;        else&#xD;&#xA;        {&#xD;&#xA;            String type = WorldDataToCORBAType();&#xD;&#xA;            if(type.equalsIgnoreCase(&quot;CORBA::String&quot;) == true)&#xD;&#xA;            {&#xD;&#xA;                type = &quot;const &quot; + type + &quot;_var&amp;&quot;;&#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            s += &quot;(&quot; + type + &quot; world&quot;;&#xD;&#xA;        }&#xD;&#xA;        if (isTeRelated)&#xD;&#xA;        {&#xD;&#xA;            s += &quot;, const acstime::Epoch&amp; requestTime)&quot;;&#xD;&#xA;        }&#xD;&#xA;        else&#xD;&#xA;        {&#xD;&#xA;            s += &quot;)&quot;;&#xD;&#xA;        }&#xD;&#xA;        return s;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="corbaParameters" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;&#x9;&#x9;String s = Parameter();&#xA;&#x9;&#x9;&#x9;&#x9;int pos = 0;&#xA;&#x9;&#x9;&#x9;&#x9;int n = s.indexOf(' ');&#xA;&#x9;&#x9;&#x9;&#x9;if (n == -1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;throw new RuntimeException(&quot;Invalid syntax in Parameter field: (&quot; + s + &quot;)&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;String word = s.substring(pos,n);&#xA;&#x9;&#x9;&#x9;&#x9;String out = (String)tables.getWorldToCORBA().get(word) + &quot; &quot;;&#xA;&#x9;&#x9;&#x9;&#x9;pos = n + 1;&#xA;&#x9;&#x9;&#x9;&#x9;while (true) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;n = s.indexOf(',',pos);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (n == -1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;word = s.substring(pos,n);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;out += word + &quot;, &quot;;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pos = n + 1;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;while (true) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (s.charAt(pos) == ' ')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pos++;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;n = s.indexOf(' ',pos);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (n == -1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new RuntimeException(&quot;Invalid syntax in Parameter field: (&quot; + s + &quot;)&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;word = s.substring(pos,n);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;out += (String)tables.getWorldToCORBA().get(word);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pos = n + 1;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;word = s.substring(pos);&#xA;&#x9;&#x9;&#x9;&#x9;out += word;&#xA;&#x9;&#x9;&#x9;&#x9;return out;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="cppReturns" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return (String)tables.getWorldToCPP().get(Returns());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="cppDeclaration" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="        String s = &quot;&quot;;&#xD;&#xA;        if (!Parameter().equals(&quot;default&quot;)) {&#xD;&#xA;            if (Parameter().equals(&quot;void&quot;))&#xD;&#xA;                s += &quot;()&quot;;&#xD;&#xA;            else&#xD;&#xA;                s += &quot;(&quot; + cppParameters() + &quot;)&quot;;&#xD;&#xA;            return s;&#xD;&#xA;            // This gets the non-default case out of the way.&#xD;&#xA;        }&#xD;&#xA;        // This is the &quot;default&quot; case.&#xD;&#xA;        boolean isTeRelated = TeRelated();&#xD;&#xA;        boolean isArray = IsWorldDataArray();&#xD;&#xA;        if (isArray) {&#xD;&#xA;            s += &quot;(const std::vector&lt; &quot; + WorldDataToCPPType() + &quot; >&amp; world&quot;;&#xD;&#xA;        } else {&#xD;&#xA;            s += &quot;(const &quot; + WorldDataToCPPType() + &quot; world&quot;;&#xD;&#xA;        }&#xD;&#xA;        if (isTeRelated) {&#xD;&#xA;            s += &quot;, const acstime::Epoch&amp; requestTime)&quot;;&#xD;&#xA;        } else {&#xD;&#xA;            s += &quot;)&quot;;&#xD;&#xA;        }&#xD;&#xA;        return s;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="cppParameters" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;String s = Parameter();&#xA;&#x9;&#x9;&#x9;&#x9;int pos = 0;&#xA;&#x9;&#x9;&#x9;&#x9;int n = s.indexOf(' ');&#xA;&#x9;&#x9;&#x9;&#x9;if (n == -1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;throw new RuntimeException(&quot;Invalid syntax in Parameter field: (&quot; + s + &quot;)&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;String word = s.substring(pos,n);&#xA;&#x9;&#x9;&#x9;&#x9;String out = (String)tables.getWorldToCPP().get(word) + &quot; &quot;;&#xA;&#x9;&#x9;&#x9;&#x9;pos = n + 1;&#xA;&#x9;&#x9;&#x9;&#x9;while (true) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;n = s.indexOf(',',pos);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (n == -1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;word = s.substring(pos,n);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;out += word + &quot;, &quot;;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pos = n + 1;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;while (true) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (s.charAt(pos) == ' ')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;pos++;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;n = s.indexOf(' ',pos);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (n == -1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new RuntimeException(&quot;Invalid syntax in Parameter field: (&quot; + s + &quot;)&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;word = s.substring(pos,n);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;out += (String)tables.getWorldToCPP().get(word) + &quot; &quot;;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pos = n + 1;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;word = s.substring(pos);&#xA;&#x9;&#x9;&#x9;&#x9;out += word;&#xA;&#x9;&#x9;&#x9;&#x9;return out;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="argList" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="        if (!Parameter().equals(&quot;default&quot;)) {&#xD;&#xA;            if (Parameter().equals(&quot;void&quot;))&#xD;&#xA;                return &quot;&quot;;&#xD;&#xA;            else&#xD;&#xA;                return argWords();&#xD;&#xA;            // This gets the non-default case out of the way.&#xD;&#xA;        }&#xD;&#xA;        // This is the &quot;default&quot; case.&#xD;&#xA;        String s = &quot;world&quot;;&#xD;&#xA;        boolean isTeRelated = TeRelated();&#xD;&#xA;        if (isTeRelated) {&#xD;&#xA;            s += &quot;, requestTime&quot;;&#xD;&#xA;        }&#xD;&#xA;        return s;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="argWords" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;String s = Parameter();&#xD;&#xA;&#x9;&#x9;int pos = 0;&#xD;&#xA;&#x9;&#x9;int n = s.indexOf(' ');&#xD;&#xA;&#x9;&#x9;if (n == -1)&#xD;&#xA;&#x9;&#x9;&#x9;throw new RuntimeException(&quot;Invalid syntax in Parameter field: (&quot; + s + &quot;)&quot;);&#xD;&#xA;&#x9;&#x9;String word = s.substring(pos,n);&#xD;&#xA;&#x9;&#x9;String out = &quot;&quot;;&#xD;&#xA;&#x9;&#x9;pos = n + 1;&#xD;&#xA;&#x9;&#x9;while (true) {&#xD;&#xA;&#x9;&#x9;&#x9;n = s.indexOf(',',pos);&#xD;&#xA;&#x9;&#x9;&#x9;if (n == -1)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;word = s.substring(pos,n);&#xD;&#xA;&#x9;&#x9;&#x9;out += word + &quot;, &quot;;&#xD;&#xA;&#x9;&#x9;&#x9;pos = n + 1;&#xD;&#xA;&#x9;&#x9;&#x9;while (true) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (s.charAt(pos) == ' ')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pos++;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;n = s.indexOf(' ',pos);&#xD;&#xA;&#x9;&#x9;&#x9;if (n == -1)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;throw new RuntimeException(&quot;Invalid syntax in Parameter field: (&quot; + s + &quot;)&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;word = s.substring(pos,n);&#xD;&#xA;&#x9;&#x9;&#x9;pos = n + 1;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;word = s.substring(pos);&#xD;&#xA;&#x9;&#x9;out += word;&#xD;&#xA;&#x9;&#x9;return out;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsConversion" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.IsConversion();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsSpecialConversion" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.IsSpecialConversion();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="NumberItemsRawData" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.NumberItemsRawData();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="TotalBytesRawData" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.TotalBytesRawData();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="NumberRawDataTypeBytes" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.NumberRawDataTypeBytes();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="NumberItemsWorldData" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.NumberItemsWorldData();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="RCACell" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.RCACell();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="TeRelatedCell" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.TeRelatedCell();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsDependentGroupBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.IsDependentGroupBit();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsDependentBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.IsDependentBit();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsDependentElement" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.IsDependentElement();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsByteSwapped" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.IsByteSwapped();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsDependentBitElement" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.IsDependentBitElement();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsDependentArrayElement" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.IsDependentArrayElement();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GetDimension" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.GetDimension();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsSingleBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.IsSingleBit();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GetBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.GetBit();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GetMask" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.GetMask();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GetFirstBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.GetFirstBit();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GetLastBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.GetLastBit();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GetGroupMask" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.GetGroupMask();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GetGroupEnd" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.GetGroupEnd();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GetGroupStart" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.GetGroupStart();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="RawSubArrayEndIndex" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.RawSubArrayEndIndex();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="RawSubArrayStartIndex" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.RawSubArrayStartIndex();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsRawSubArray" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.IsRawSubArray();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorlDataToDatabaseTypeUpper1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.WorldDataToDatabaseTypeUpper1();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataTypeUpper1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.WorldDataTypeUpper1();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="setControlAmb">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="this.row = row;&#xA;this.parent = parent;&#xA;super.setControlPoint(row, parent);&#xA;mac = new MandCImpl();&#xA;mac.setMandCAmb(tables, utils);&#xA;mac.setMandCAmb(row, sheet, this);"/>
              </eAnnotations>
              <eParameters name="row" eType="#//control/datamodel/meta/base/EStringArray"/>
              <eParameters name="parent" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EObject"/>
            </eOperations>
            <eStructuralFeatures xsi:type="ecore:EReference" name="mac" eType="#//control/datamodel/meta/amb/MandC"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="DeviceModel" eSuperTypes="#//control/datamodel/meta/base/DeviceModel">
            <eOperations name="IsMonitorDBOnly" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return monitorDBOnly;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsGenerateAlt" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return generateAlt;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Parent" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return ((Main)main).Parent();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Cardinality" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return ((Main)main).Cardinality();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="NodeAddress" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return ((Main)main).NodeAddress();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Channel" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return ((Main)main).Channel();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="BaseAddress" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return ((Main)main).BaseAddress();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GenericMonitorPoints" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return ((Main)main).GenericMonitorPoints();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="CreateModel" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return &quot;true&quot;;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="TheEnd" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel" references="#//control/datamodel/meta/base/Util">
                <details key="body" value="String dir = generatedDir + &quot;/&quot; + Assembly();&#xA;&#x9;&#x9;&#x9;&#x9;utils.RemoveLinesFromFile(dir + &quot;/doc&quot;, Assembly() + &quot;.html&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;utils.RemoveLinesFromFile(dir + &quot;/idl&quot;, Assembly() + &quot;Add.sql&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;utils.RemoveLinesFromFile(dir + &quot;/include&quot;, Assembly() + &quot;HWSimBase.h&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;utils.RemoveLinesFromFile(dir + &quot;/src&quot;, Assembly() + &quot;HWSimBase.cpp&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;utils.RemoveLinesFromFile(dir + &quot;/include&quot;, Assembly() + &quot;CompSimBase.h&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;utils.RemoveLinesFromFile(dir + &quot;/src&quot;, Assembly() + &quot;CompSimBase.cpp&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;utils.RemoveLinesFromFile(dir + &quot;/idl&quot;, Assembly() + &quot;CompSimBase.idl&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;utils.RemoveLinesFromFile(dir + &quot;/test&quot;, &quot;Test&quot; + Assembly() + &quot;HWSimImpl.cpp&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;utils.RemoveLinesFromFile(dir + &quot;/test&quot;, &quot;Test&quot; + Assembly() + &quot;AmbDeviceInt.cpp&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (!IsMonitorDBOnly()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (IsGenerateAlt()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;utils.RemoveLinesFromFile(dir + &quot;/../ALT/&quot;, Assembly() + &quot;.makefile&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;utils.RemoveLinesFromFile(dir + &quot;/../ALT/&quot;, Assembly() + &quot;Impl.idl&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;utils.RemoveLinesFromFile(dir + &quot;/../ALT/&quot;, Assembly() + &quot;Impl.h&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;utils.RemoveLinesFromFile(dir + &quot;/../ALT/&quot;, Assembly() + &quot;Impl.cpp&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;super.TheEnd();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;} else &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Code generation for &quot; + deviceName + &quot; done.&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return &quot;&quot;;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="NodeAddressInDecimal" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;String s = NodeAddress();&#xD;&#xA;&#x9;&#x9;if (s.equals(&quot;parm&quot;))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;0&quot;;&#xD;&#xA;&#x9;&#x9;return HexToDec(s);"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="HexToDec" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;int n = -1;&#xD;&#xA;&#x9;&#x9;try {&#xD;&#xA;&#x9;&#x9;&#x9;n = Integer.parseInt(s.substring(2),16);&#xD;&#xA;&#x9;&#x9;} catch (NumberFormatException err) {&#xD;&#xA;&#x9;&#x9;&#x9;throw new RuntimeException(&quot;Invalid number (&quot; + s + &quot;)&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;return Integer.toString(n);"/>
              </eAnnotations>
              <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eStructuralFeatures xsi:type="ecore:EReference" name="mainAmb" upperBound="-1"
                eType="#//control/datamodel/meta/amb/Main" containment="true"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="cPoints" upperBound="-1"
                eType="#//control/datamodel/meta/amb/Control" containment="true"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="aPoints" upperBound="-1"
                eType="#//control/datamodel/meta/amb/Archive" containment="true"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="mPoints" upperBound="-1"
                eType="#//control/datamodel/meta/amb/Monitor" containment="true"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="note" eType="#//control/datamodel/meta/base/Note"
                containment="true"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="GenericMonitorPoints">
            <eOperations name="getParsedGenericSpreadsheet" eType="#//control/datamodel/meta/base/EStringArray3">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="Util util = BaseFactory.eINSTANCE.createUtil();&#xA;&#x9;&#x9;&#x9;&#x9;dirLocation = util.getInstallDir();&#xA;&#x9;&#x9;&#x9;&#x9;if (!(new java.io.File(dirLocation + &quot;/idl/GENERIC_spreadsheet.xml&quot;).exists())){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Spreadsheet GENERIC_spreadsheet not found. Exiting....&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.exit(1);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;BaseFactory baseFac = BaseFactory.eINSTANCE;&#xA;&#x9;&#x9;&#x9;&#x9;SpreadsheetParser parserSpreadsheet = baseFac.createSpreadsheetParser();&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;String xml = parserSpreadsheet.getSpreadsheet(dirLocation + &quot;/idl&quot;, &quot;GENERIC_spreadsheet.xml&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;String xmlFile = dirLocation + &quot;/idl/GENERIC_spreadsheet.xml&quot;;&#xA;&#x9;&#x9;&#x9;&#x9;String xsdFile = dirLocation + &quot;/config/schemas/amb/Workbook.xsd&quot;;&#xA;&#x9;&#x9;&#x9;&#x9;SpreadsheetParser p = baseFac.createSpreadsheetParser();&#xA;&#x9;&#x9;&#x9;&#x9;p.setSpreadsheetParser(xml);&#xA;&#x9;&#x9;&#x9;&#x9;String [][][] spreadsheet = p.getWorksheets();&#xA;&#x9;&#x9;&#x9;&#x9;SpreadsheetValidator v = baseFac.createSpreadsheetValidator();&#xA;&#x9;&#x9;&#x9;&#x9;if (!v.validate(xmlFile,xsdFile)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;String s = &quot;Spreadsheet GENERIC_spreadsheet.xml is not a valid spreadsheet.&quot;;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;throw new RuntimeException(s);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Spreadsheet GENERIC has been validated.&quot;);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;return spreadsheet;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="getDeviceWorksheetWithGenericPointsAdded" eType="#//control/datamodel/meta/base/EStringArray3">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value=" // Create the SP class&#xD;&#xA;        setDeviceName(spreadsheet[0][2][0]);&#xD;&#xA;        String [][][] genericSpreadsheet = getParsedGenericSpreadsheet();&#xD;&#xA;        // Now we iterate through spreadsheet adding monitor, control and archive generic points.&#xD;&#xA;        &#xD;&#xA;        // I coded this way to make the things clear&#xD;&#xA;        int[] Rows = null;&#xD;&#xA;        int[] Columns = null;&#xD;&#xA;        int[] GenericRows = null;&#xD;&#xA;        &#xD;&#xA;        Rows = new int[4];&#xD;&#xA;        Columns = new int[4];&#xD;&#xA;        GenericRows = new int[4];&#xD;&#xA;        &#xD;&#xA;        String deviceName=spreadsheet[0][2][0];&#xD;&#xA;        &#xD;&#xA;        int mainRows = spreadsheet[0].length;&#xD;&#xA;        int monitorRows = spreadsheet[1].length;&#xD;&#xA;        int controlRows = spreadsheet[2].length;&#xD;&#xA;        int archiveRows = spreadsheet[3].length;&#xD;&#xA;        &#xD;&#xA;        int mainColumns = spreadsheet[0][1].length;&#xD;&#xA;        int monitorColumns = spreadsheet[1][1].length;&#xD;&#xA;        int controlColumns = spreadsheet[2][1].length;&#xD;&#xA;        int archiveColumns = spreadsheet[3][1].length;&#xD;&#xA;        &#xD;&#xA;        int genericMonitorRows = genericSpreadsheet[1].length;&#xD;&#xA;        int genericControlRows = genericSpreadsheet[2].length;&#xD;&#xA;        int genericArchiveRows = genericSpreadsheet[3].length;&#xD;&#xA;        &#xD;&#xA;        // Well, first the newSpreadsheet is created. Arrays are static structures....&#xD;&#xA;        newSpreadsheet = new String[4][][];&#xD;&#xA;        newSpreadsheet[0] = new String[mainRows][mainColumns];&#xD;&#xA;        newSpreadsheet[1] = new String[monitorRows+genericMonitorRows-2][monitorColumns];&#xD;&#xA;        newSpreadsheet[2] = new String[controlRows+genericControlRows-2][controlColumns];&#xD;&#xA;        newSpreadsheet[3] = new String[archiveRows+genericArchiveRows-2][archiveColumns];&#xD;&#xA;        &#xD;&#xA;&#x9;// Hardware Device&#xD;&#xA;        newSpreadsheet[0][0] = new String[1];&#xD;&#xA;        newSpreadsheet[0][0][0] = spreadsheet[0][0][0];&#xD;&#xA;&#x9;// Monitor Point&#xD;&#xA;        newSpreadsheet[1][0] = new String[1];&#xD;&#xA;        newSpreadsheet[1][0][0] = spreadsheet[1][0][0];&#xD;&#xA;&#x9;// Control Point&#xD;&#xA;        newSpreadsheet[2][0] = new String[1];&#xD;&#xA;        newSpreadsheet[2][0][0] = spreadsheet[2][0][0];&#xD;&#xA;&#x9;// Archive Property&#xD;&#xA;        newSpreadsheet[3][0] = new String[1];&#xD;&#xA;        newSpreadsheet[3][0][0] = spreadsheet[3][0][0];&#xD;&#xA;        &#xD;&#xA;        Rows[0] = mainRows; // Yes here I ignore Notes on Main spreadsheet&#xD;&#xA;        Rows[1] = monitorRows;&#xD;&#xA;        Rows[2] = controlRows;&#xD;&#xA;        Rows[3] = archiveRows;&#xD;&#xA;        &#xD;&#xA;        Columns[0] = mainColumns;&#xD;&#xA;        Columns[1] = monitorColumns;&#xD;&#xA;        Columns[2] = controlColumns;&#xD;&#xA;        Columns[3] = archiveColumns;&#xD;&#xA;        &#xD;&#xA;        // Then I copy elements from spreadsheet to newSpreadsheet&#xD;&#xA;        for (int i = 0; i &lt; Rows.length; i++ ) {&#xD;&#xA;            for (int j = 1; j &lt; Rows[i]; j++) {&#xD;&#xA;                for (int k = 0; k &lt; Columns[i]; k++) {&#xD;&#xA;                    if (spreadsheet[i][j][k].equals(&quot;Notes&quot;)){&#xD;&#xA;                        newSpreadsheet[i][j] = new String[2];&#xD;&#xA;                        newSpreadsheet[i][j][k] = spreadsheet[i][j][k];&#xD;&#xA;                        newSpreadsheet[i][j][k+1] = spreadsheet[i][j][k+1];&#xD;&#xA;                        break; &#xD;&#xA;                    }&#xD;&#xA;                    newSpreadsheet[i][j][k] = spreadsheet[i][j][k];&#xD;&#xA;                }&#xD;&#xA;&#xD;&#xA;            }&#xD;&#xA;        }        &#xD;&#xA;        &#xD;&#xA;        // Here we start the copy process from generic spreadsheet&#xD;&#xA;        GenericRows[0] = 0;&#xD;&#xA;        GenericRows[1] = genericMonitorRows;&#xD;&#xA;        GenericRows[2] = genericControlRows;&#xD;&#xA;        GenericRows[3] = genericArchiveRows;&#xD;&#xA;&#xD;&#xA;        for (int i = 1; i &lt; Rows.length ; i++ ) {&#xD;&#xA;            for (int j = Rows[i];j &lt; (Rows[i] + GenericRows[i] - 2); j++) {&#xD;&#xA;                for (int k = 0; k &lt; Columns[i]; k++) {&#xD;&#xA;                    if ( (genericSpreadsheet[i][j-Rows[i]+2][k]).equals(&quot;GENERIC&quot;)){&#xD;&#xA;                        newSpreadsheet[i][j][k] = deviceName;&#xD;&#xA;                    } else {&#xD;&#xA;                        newSpreadsheet[i][j][k] = genericSpreadsheet[i][j-Rows[i]+2][k];&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        return newSpreadsheet;"/>
              </eAnnotations>
              <eParameters name="spreadsheet" eType="#//control/datamodel/meta/base/EStringArray3"/>
            </eOperations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="newSpreadsheet"
                eType="#//control/datamodel/meta/base/EStringArray3"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="deviceName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="dirLocation" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Main" eSuperTypes="#//control/datamodel/meta/base/MainBase">
            <eOperations name="Parent" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Parent&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Cardinality" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Cardinality&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="NodeAddress" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Node Address&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Channel" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Channel&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="BaseAddress" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Base Address&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GenericMonitorPoints" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Generic Monitor Points&quot;)].equals(&quot;yes&quot;);"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="setMainAmb">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="this.row = row;&#xA;super.setMainBase(row);"/>
              </eAnnotations>
              <eParameters name="row" eType="#//control/datamodel/meta/base/EStringArray"/>
            </eOperations>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="MandC">
            <eOperations name="Assembly" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Assembly&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="RCA" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;RCA&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="RCACell" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;RCA&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="RawDataType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="String s = row[tables.getColNum(sheet, &quot;Raw Data Type&quot;)];&#xA;&#x9;&#x9;&#x9;&#x9;if(!mcp.IsDependent())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return IsRawDataArray() ? s.substring(0, s.indexOf(&quot;[&quot;)) : s;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(mcp instanceof Monitor)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return ((Monitor) mcp.getParent()).RawDataType();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(mcp instanceof Control)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return ((Control) mcp.getParent()).RawDataType();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return &quot;ERROR&quot;;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="RawDataTypeCell" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Raw Data Type&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="TeRelated" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return false;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="TeRelatedCell" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;TE Related&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="String s = row[tables.getColNum(sheet, &quot;World Data Type&quot;)];&#xA;return IsWorldDataArray() ? s.substring(0, s.indexOf(&quot;[&quot;)) : s;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataTypeCell" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;World Data Type&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Scale" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="String s = ScaleCell();&#xA;if((s.equals(&quot;none&quot;) == true) || (s.equals(&quot;extended&quot;) == true) || (s.equals(tables.getCelsiusToKelvin()) == true))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;s = &quot;1.0&quot;;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return s;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="ScaleCell" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return utils.normalizeNumber(WorldDataType(), row[tables.getColNum(sheet, &quot;Scale&quot;)]);"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Offset" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;String s = ScaleCell();&#xA;&#x9;&#x9;if(s.equals(tables.getCelsiusToKelvin()))&#xA;&#x9;&#x9;&#x9;return &quot;273.15&quot;;&#xA;&#x9;&#x9;String o = OffsetCell();&#xA;&#x9;&#x9;if((o.equals(&quot;0&quot;) == true) || (o.equals(&quot;none&quot;) == true)&#x9;|| (o.equals(&quot;extended&quot;) == true))&#xA;&#x9;&#x9;&#x9;o = &quot;0.0&quot;;&#xA;&#x9;&#x9;return o;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="OffsetCell" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return utils.normalizeNumber(WorldDataType(), row[tables.getColNum(sheet, &quot;Offset&quot;)]);"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="RawDataToCPPType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return (String)tables.getRawToCPP().get(RawDataType());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataToCPPType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return (String)tables.getWorldToCPP().get(WorldDataType());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataToCORBAType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return (String)tables.getWorldToCORBA().get(WorldDataType());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataToIDLSeqType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return (String)tables.getWorldToIDLSeq().get(WorldDataType());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataToIDLType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return (String)tables.getWorldToIDL().get(WorldDataType());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataToCORBASeqType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return (String)tables.getWorldToCORBASeq().get(WorldDataType());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataToCORBADevIOType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return (String)tables.getWorldToCORBADevIO().get(WorldDataType());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataToJavaType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return (String)tables.getWorldToJava().get(WorldDataType());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataToDatabaseType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return (String)tables.getWorldToDatabase().get(WorldDataType());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataToBACIType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return (String)tables.getWorldToBACI().get(WorldDataType());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsConversion" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;if(ScaleCell().equals(&quot;none&quot;) &amp;&amp; OffsetCell().equals(&quot;none&quot;))&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;return false;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;else if(ScaleCell().equals(&quot;1.0&quot;) &amp;&amp; OffsetCell().equals(&quot;0.0&quot;))&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;return false;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;else if(ScaleCell().equals(&quot;1.0&quot;) &amp;&amp; OffsetCell().equals(&quot;none&quot;))&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;return false;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;else if(ScaleCell().equals(&quot;none&quot;) &amp;&amp; OffsetCell().equals(&quot;0.0&quot;))&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;return false;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return true;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsSpecialConversion" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return ScaleCell().equals(&quot;extended&quot;);"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsWorldDataArray" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="String s = row[tables.getColNum(sheet, &quot;World Data Type&quot;)];&#xA;return s.endsWith(&quot;]&quot;) ? true : false;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsRawDataArray" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;String s = row[tables.getColNum(sheet, &quot;Raw Data Type&quot;)];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(!mcp.IsDependent())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return s.endsWith(&quot;]&quot;) ? true : false;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(s.startsWith(&quot;&amp;lt;&quot;) &amp;&amp; s.substring(1).indexOf(&quot;&amp;lt;&quot;) != -1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return true;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return false;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="NumberItemsRawData" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="String s = row[tables.getColNum(sheet, &quot;Raw Data Type&quot;)];&#xA;return utils.NumberOfItems(s);"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="TotalBytesRawData" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;String s = row[tables.getColNum(sheet, &quot;Raw Data Type&quot;)];&#xA;&#x9;&#x9;return utils.RawDataTypeTotalBytes(s);"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="NumberRawDataTypeBytes" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return utils.NumberRawDataTypeBytes(RawDataType());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="NumberItemsWorldData" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;String s = row[tables.getColNum(sheet, &quot;World Data Type&quot;)];&#xA;&#x9;&#x9;&#x9;&#x9;return utils.NumberOfItems(s);"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsDependentGroupBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;if(!mcp.IsDependent())&#xD;&#xA;&#x9;&#x9;&#x9;return false;&#xD;&#xA;&#x9;&#x9;if(IsDependentBit() &amp;&amp; RawDataTypeCell().indexOf(&quot;-&quot;) != -1)&#xD;&#xA;&#x9;&#x9;&#x9;return true;&#xD;&#xA;&#x9;&#x9;return false;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsDependentBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;if(!mcp.IsDependent())&#xD;&#xA;&#x9;&#x9;&#x9;return false;&#xD;&#xA;&#x9;&#x9;if(RawDataTypeCell().startsWith(&quot;&amp;lt;&quot;))&#xD;&#xA;&#x9;&#x9;&#x9;return true;&#xD;&#xA;&#x9;&#x9;return false;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsDependentElement" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;if(!mcp.IsDependent())&#xD;&#xA;&#x9;&#x9;&#x9;return false;&#xD;&#xA;&#x9;&#x9;if(RawDataTypeCell().startsWith(&quot;[&quot;))&#xD;&#xA;&#x9;&#x9;&#x9;return true;&#xD;&#xA;&#x9;&#x9;return false;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsByteSwapped" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return ((String)tables.getRawToByteSwapped().get(RawDataType())).equals(true);"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsDependentBitElement" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;if(!mcp.IsDependent())&#xD;&#xA;&#x9;&#x9;&#x9;return false;&#xD;&#xA;&#x9;&#x9;if(RawDataTypeCell().startsWith(&quot;&amp;lt;&quot;))&#xD;&#xA;&#x9;&#x9;&#x9;return true;&#xD;&#xA;&#x9;&#x9;return false;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsDependentArrayElement" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;if(!mcp.IsDependent())&#xD;&#xA;&#x9;&#x9;&#x9;return false;&#xD;&#xA;&#x9;&#x9;if(RawDataTypeCell().startsWith(&quot;[&quot;))&#xD;&#xA;&#x9;&#x9;&#x9;return true;&#xD;&#xA;&#x9;&#x9;return false;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GetDimension" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;String s = RawDataTypeCell();&#xD;&#xA;&#x9;&#x9;if(IsDependentArrayElement())&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;int n = s.indexOf(&quot;]&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;return s.substring(1, n);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;if(!IsRawDataArray())&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;0&quot;;&#xD;&#xA;&#x9;&#x9;if(IsDependentBitElement())&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;int n = s.indexOf(&quot;&amp;gt;&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;return s.substring(4, n);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;return &quot;0&quot;;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsSingleBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;String s = RawDataTypeCell();&#xD;&#xA;&#x9;&#x9;if(!s.startsWith(&quot;&amp;lt;&quot;))// &amp;lt;0&amp;gt;&#xD;&#xA;&#x9;&#x9;&#x9;return false;&#xD;&#xA;&#x9;&#x9;if(!s.endsWith(&quot;&amp;gt;&quot;))&#xD;&#xA;&#x9;&#x9;&#x9;return false;&#xD;&#xA;&#x9;&#x9;if(s.indexOf(&quot;-&quot;) == -1)&#xD;&#xA;&#x9;&#x9;&#x9;return true;&#xD;&#xA;&#x9;&#x9;return false;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GetBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;String s = RawDataTypeCell();&#xD;&#xA;&#x9;&#x9;int n = s.indexOf(&quot;&amp;gt;&quot;);&#xD;&#xA;&#x9;&#x9;return s.substring(4, n);"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GetFirstBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;String s = RawDataTypeCell();&#xD;&#xA;&#x9;&#x9;if(!s.startsWith(&quot;&amp;lt;&quot;) || !s.endsWith(&quot;&amp;gt;&quot;))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#x9;&#x9;if(IsSingleBit())&#xD;&#xA;&#x9;&#x9;&#x9;return GetBit();&#xD;&#xA;&#x9;&#x9;int n = s.indexOf(&quot;-&quot;);&#xD;&#xA;&#x9;&#x9;if(n == -1)&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#x9;&#x9;return s.substring(4, n);"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GetLastBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;String s = RawDataTypeCell();&#xD;&#xA;&#x9;&#x9;if(!s.startsWith(&quot;&amp;lt;&quot;) || !s.endsWith(&quot;&amp;gt;&quot;))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#x9;&#x9;if(IsSingleBit())&#xD;&#xA;&#x9;&#x9;&#x9;return GetBit();&#xD;&#xA;&#x9;&#x9;int n = s.indexOf(&quot;-&quot;);&#xD;&#xA;&#x9;&#x9;if(n == -1)&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#x9;&#x9;return s.substring(n + 1, s.length() - 4);"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GetGroupStart" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;String s = RawDataTypeCell();&#xD;&#xA;&#x9;&#x9;if(IsRawDataArray())&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;s = s.substring(4);&#xD;&#xA;&#x9;&#x9;&#x9;int n = s.indexOf(&quot;&amp;lt;&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;int m = s.substring(n + 4).indexOf(&quot;&amp;gt;&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;if(n == -1 || m == -1)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;s = s.substring(n + 4, m + n + 4);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;s = s.substring(4, s.length() - 4);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;// &quot;s&quot; is of type &quot;i-j&quot;&#xD;&#xA;&#x9;&#x9;int n = s.indexOf(&quot;-&quot;);&#xD;&#xA;&#x9;&#x9;if(n == -1)&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#x9;&#x9;return s.substring(0, n);"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GetGroupEnd" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;String s = RawDataTypeCell();&#xD;&#xA;&#x9;&#x9;int n = s.indexOf(&quot;-&quot;);&#xD;&#xA;&#x9;&#x9;if(n == -1)&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#x9;&#x9;return s.substring(n + 1, s.length() - 4);"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GetGroupMask" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;String firstBit = GetGroupStart();&#xD;&#xA;&#x9;&#x9;String lastBit = GetGroupEnd();&#xD;&#xA;&#x9;&#x9;int n = Integer.parseInt(firstBit);&#xD;&#xA;&#x9;&#x9;int m = Integer.parseInt(lastBit);&#xD;&#xA;&#x9;&#x9;int intMaskSize = m - n;&#xD;&#xA;&#x9;&#x9;int intMask = 0;&#xD;&#xA;&#x9;&#x9;for(int i = 0; i &lt;= intMaskSize; i++)&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;intMask += Math.pow(2, i);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;String mask = &quot;0x&quot;.concat(Integer.toHexString(intMask).toUpperCase());&#xD;&#xA;&#x9;&#x9;return mask;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsRawSubArray" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;String s = RawDataTypeCell();&#xD;&#xA;&#x9;&#x9;if((s.indexOf(&quot;[&quot;) != -1) &amp;&amp; (s.indexOf(&quot;-&quot;) != -1)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&amp;&amp; (s.indexOf(&quot;]&quot;) != -1))&#xD;&#xA;&#x9;&#x9;&#x9;return true;&#xD;&#xA;&#x9;&#x9;return false;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="RawSubArrayStartIndex" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;String s = RawDataTypeCell();&#xD;&#xA;&#x9;&#x9;return String.valueOf(findRawSubArrayIndex(s, true));"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="RawSubArrayEndIndex" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;String s = RawDataTypeCell();&#xD;&#xA;&#x9;&#x9;return String.valueOf(findRawSubArrayIndex(s, false));"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="findRawSubArrayIndex" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;int end = s.indexOf(&quot;]&quot;);&#xD;&#xA;&#x9;&#x9;if(end == -1)&#xD;&#xA;&#x9;&#x9;&#x9;throw new RuntimeException(&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;In Raw Datatype column of monitor spreadsheet, subarray notation does not contain \&quot;]\&quot; (&quot;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ s + &quot;)&quot;);&#xD;&#xA;&#x9;&#x9;int start = s.indexOf(&quot;[&quot;) + 1;&#xD;&#xA;&#x9;&#x9;if(start &lt; 1)&#xD;&#xA;&#x9;&#x9;&#x9;throw new RuntimeException(&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;In Raw Datatype column of monitor spreadsheet, subarray notation does not start with \&quot;[\&quot; (&quot;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ s + &quot;)&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;String subString = s.substring(start, end);&#xD;&#xA;&#x9;&#x9;String interpretStrings[] = subString.split(&quot;-&quot;);&#xD;&#xA;&#x9;&#x9;if(interpretStrings.length != 2)&#xD;&#xA;&#x9;&#x9;&#x9;throw new RuntimeException(&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;In Raw Datatype column of monitor spreadsheet, subarray notation does contain a range (&quot;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ s + &quot;)&quot;);&#xD;&#xA;&#x9;&#x9;int index = -1;&#xD;&#xA;&#x9;&#x9;try {&#xD;&#xA;&#x9;&#x9;&#x9;if(startOrEnd == true)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;index = Integer.parseInt(interpretStrings[0]);&#xD;&#xA;&#x9;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;index = Integer.parseInt(interpretStrings[1]);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;catch(NumberFormatException err) {&#xD;&#xA;&#x9;&#x9;&#x9;throw new RuntimeException(&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;In Raw Datatype column of monitor spreadsheet, subarray notation does not contain an integer as index (&quot;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ s&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot;, &quot;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;+ interpretStrings[0]&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;                   + interpretStrings[1] + &quot;)&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;return index;"/>
              </eAnnotations>
              <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
              <eParameters name="startOrEnd" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            </eOperations>
            <eOperations name="WorldDataToDatabaseTypeUpper1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;String s = WorldDataToDatabaseType();&#xD;&#xA;&#x9;&#x9;return Character.toUpperCase(s.charAt(0)) + s.substring(1);"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataTypeUpper1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;String s = WorldDataType();&#xD;&#xA;&#x9;&#x9;return Character.toUpperCase(s.charAt(0)) + s.substring(1);"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="setMandCAmb">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="this.tables = tables;&#xA;this.utils = utils;"/>
              </eAnnotations>
              <eParameters name="tables" eType="#//control/datamodel/meta/base/Table"/>
              <eParameters name="utils" eType="#//control/datamodel/meta/base/Util"/>
            </eOperations>
            <eOperations name="setMandCAmb">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="this.row = row;&#xA;this.sheet = sheet;&#xA;this.mcp = mcp;"/>
              </eAnnotations>
              <eParameters name="row" eType="#//control/datamodel/meta/base/EStringArray"/>
              <eParameters name="sheet" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
              <eParameters name="mcp" eType="#//control/datamodel/meta/base/MandCBase"/>
            </eOperations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="row" eType="#//control/datamodel/meta/base/EStringArray"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="sheet" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="mask" eType="#//control/datamodel/meta/base/EStringArray"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="mcp" eType="#//control/datamodel/meta/base/MandCBase"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="tables" eType="#//control/datamodel/meta/base/Table"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="utils" eType="#//control/datamodel/meta/base/Util"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Monitor" eSuperTypes="#//control/datamodel/meta/base/MonitorPoint">
            <eOperations name="CanBeInvalid" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Can Be Invalid&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsFEStatus" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return CanBeInvalid().equals(&quot;yes-feStatus&quot;);"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Assembly" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.Assembly();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="RCA" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.RCA();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="RawDataType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.RawDataType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="TeRelated" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.TeRelated();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.WorldDataType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Scale" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.Scale();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Offset" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.Offset();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="RawDataToCPPType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.RawDataToCPPType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataToCPPType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.WorldDataToCPPType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataToCORBAType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.WorldDataToCORBAType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataToIDLSeqType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.WorldDataToIDLSeqType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataToIDLType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.WorldDataToIDLType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataToCORBASeqType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.WorldDataToCORBASeqType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataToCORBADevIOType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.WorldDataToCORBADevIOType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataToJavaType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.WorldDataToJavaType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataToDatabaseType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.WorldDataToDatabaseType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataToBACIType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.WorldDataToBACIType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsRawDataArray" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.IsRawDataArray();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsWorldDataArray" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.IsWorldDataArray();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsConversion" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.IsConversion();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsSpecialConversion" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.IsSpecialConversion();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="NumberItemsRawData" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.NumberItemsRawData();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="TotalBytesRawData" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.TotalBytesRawData();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="NumberRawDataTypeBytes" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.NumberRawDataTypeBytes();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="RCACell" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.RCACell();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="NumberItemsWorldData" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.NumberItemsWorldData();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="TeRelatedCell" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.TeRelatedCell();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsDependentGroupBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.IsDependentGroupBit();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsDependentBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.IsDependentBit();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsDependentElement" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.IsDependentElement();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsByteSwapped" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.IsByteSwapped();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsDependentBitElement" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.IsDependentBitElement();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsDependentArrayElement" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.IsDependentArrayElement();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GetDimension" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.GetDimension();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsSingleBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.IsSingleBit();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GetBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.GetBit();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GetMask" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.GetMask();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GetFirstBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.GetFirstBit();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GetLastBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.GetLastBit();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GetGroupMask" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.GetGroupMask();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GetGroupEnd" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.GetGroupEnd();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GetGroupStart" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.GetGroupStart();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="RawSubArrayEndIndex" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.RawSubArrayEndIndex();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="RawSubArrayStartIndex" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.RawSubArrayStartIndex();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsRawSubArray" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.IsRawSubArray();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataToDatabaseTypeUpper1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.WorldDataToDatabaseTypeUpper1();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="WorldDataTypeUpper1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.WorldDataTypeUpper1();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="MinRange" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return utils.normalizeNumber(WorldDataType(), super.MinRange());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="MaxRange" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return utils.normalizeNumber(WorldDataType(), super.MaxRange());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Default" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return utils.normalizeNumber(WorldDataType(), super.Default());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsPattern" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="boolean ret = true;&#xA;&#x9;&#x9;&#x9;&#x9;if(this.IsDependent()) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ret = false;&#xA;&#x9;&#x9;&#x9;&#x9;if (this.getDependents().getContents().isEmpty())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ret = false;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;for (Iterator iter = this.getDependents().getContents().iterator(); iter.hasNext(); ) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Monitor var = (Monitor) iter.next();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(var.WorldDataType().compareTo(&quot;boolean&quot;) != 0){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ret = false;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;if(ret)System.out.println(&quot;IsPattern(): &quot;+ret+&quot;&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return ret;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsPartOfPattern" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="boolean ret = false;&#xA;&#x9;&#x9;&#x9;&#x9;if(IsDependent()){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Monitor parent = (Monitor)this.getParent();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(parent.IsPattern())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ret = true;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;return ret;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsHomogeneous" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;boolean ret = true;&#xA;&#x9;&#x9;&#x9;&#x9;String firsttype = null;&#xA;&#x9;&#x9;&#x9;&#x9;if(hasDependents()){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;for (Iterator&lt;EObject> iter = this.getDependents().getContents().iterator(); iter.hasNext(); ) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Monitor var = (Monitor) iter.next();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if( firsttype == null){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;firsttype = new String(var.WorldDataType());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;continue;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}if(var.WorldDataType().equals(firsttype)) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ret = false;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}else{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ret = false;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;return ret;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsPartOfHomogeneous" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;boolean ret = false;&#xA;&#x9;&#x9;&#x9;&#x9;if(IsDependent()){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Monitor parent = ((Monitor)this.getParent());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(parent.IsHomogeneous())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ret = true;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;return ret;&#x9;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="setMonitorAmb">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="this.tables = tables;&#xA;this.utils = utils;"/>
              </eAnnotations>
              <eParameters name="tables" eType="#//control/datamodel/meta/base/Table"/>
              <eParameters name="utils" eType="#//control/datamodel/meta/base/Util"/>
            </eOperations>
            <eOperations name="setMonitorAmb">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="this.row = row;&#xA;this.parent = parent;&#xA;super.setMonitorPoint(row, parent);&#xA;mac = AmbFactory.eINSTANCE.createMandC();&#xA;mac.setMandCAmb(tables, utils);&#xA;mac.setMandCAmb(row, sheet, this);"/>
              </eAnnotations>
              <eParameters name="row" eType="#//control/datamodel/meta/base/EStringArray"/>
              <eParameters name="parent" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EObject"/>
            </eOperations>
            <eStructuralFeatures xsi:type="ecore:EReference" name="mac" eType="#//control/datamodel/meta/amb/MandC"/>
          </eClassifiers>
        </eSubpackages>
        <eSubpackages name="base" nsURI="http://alma/Control/datamodel/meta/base/1.0"
            nsPrefix="alma.Control.datamodel.meta.base">
          <eClassifiers xsi:type="ecore:EClass" name="ArchiveProperty">
            <eOperations name="IsRefersTo" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mp != null || cp !=null;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsMonitorPoint" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mp != null;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsControlPoint" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return cp != null;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Name&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="APName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;String name = Name();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (name.startsWith(tables.getDepChar()))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;name = name.substring(1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return name;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="RefersTo" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet,  &quot;Refers To&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IntervalFull" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet,  &quot;Interval (secs)&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Interval" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Interval (secs)&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="OnlyOnChange" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Only On Change&quot;)].equals(&quot;yes&quot;);"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DisplayUnits" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Display Units&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GraphMin" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Graph Min&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GraphMax" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Graph Max&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Format" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Format&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="OnStartup" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;On Startup&quot;)].equals(&quot;yes&quot;);"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Title" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Title&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="setArchiveProperty">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="this.row = row;&#xA;this.tables = tables;&#xA;this.sheet = tables.getSheetNum(&quot;Archive Property&quot;);"/>
              </eAnnotations>
              <eParameters name="row" eType="#//control/datamodel/meta/base/EStringArray"/>
              <eParameters name="tables" eType="#//control/datamodel/meta/base/Table"/>
            </eOperations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="row" eType="#//control/datamodel/meta/base/EStringArray"
                derived="true"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="sheet" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="cp" eType="#//control/datamodel/meta/base/ControlPoint"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="mp" eType="#//control/datamodel/meta/base/MonitorPoint"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="tables" eType="#//control/datamodel/meta/base/Table"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="ControlPoint" abstract="true"
              eSuperTypes="#//control/datamodel/meta/base/MandCBase">
            <eOperations name="CPName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return PName();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="AltCPName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return AltPName();&#xD;&#xA;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="ArchiveOnUse" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Archive On Use&quot;)].equals(&quot;yes&quot;);"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsMonitored" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return false;&#xD;&#xA;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="setControlPoint">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="this.tables = tables;&#xA;this.utils = utils;"/>
              </eAnnotations>
              <eParameters name="tables" eType="#//control/datamodel/meta/base/Table"/>
              <eParameters name="utils" eType="#//control/datamodel/meta/base/Util"/>
            </eOperations>
            <eOperations name="setControlPoint">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="this. row = row;&#xA;this.parent = parent;&#xA;super.setMandCBase(row, parent);"/>
              </eAnnotations>
              <eParameters name="row" eType="#//control/datamodel/meta/base/EStringArray"/>
              <eParameters name="parent" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EObject"/>
            </eOperations>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="DeviceModel" abstract="true">
            <eOperations name="CreateModel" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eOperations name="Assembly" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return main.Assembly();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Extends" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return main.Extends();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DeviceName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return main.DeviceName();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Description" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return main.Description();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DescriptionAsString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return main.DescriptionAsString();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="ICD" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return main.ICD();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="ICDDate" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return main.ICDDate();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="ICDDateAsDatabaseDate" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return main.ICDDateAsDatabaseDate();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="ICDDateAsArrayTime" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return main.ICDDateAsArrayTime();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DirPath" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return Assembly();&#xD;&#xA;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="TheEnd" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="String dir = generatedDir + &quot;/&quot; + Assembly();&#xA;&#x9;&#x9;&#x9;&#x9;utils.RemoveLinesFromFile(dir + &quot;/src&quot;, Assembly() + &quot;Base.cpp&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;utils.RemoveLinesFromFile(dir + &quot;/include&quot;, Assembly() + &quot;Base.h&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;utils.RemoveLinesFromFile(dir + &quot;/idl&quot;, Assembly() + &quot;Base.idl&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;utils.RemoveLinesFromFile(dir + &quot;/idl&quot;, Assembly() + &quot;Add.sql&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;utils.RemoveLinesFromFile(dir + &quot;/doc&quot;, Assembly() + &quot;.xml&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;utils.RemoveLinesFromFile(dir + &quot;/doc&quot;, Assembly() + &quot;Component.xml&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;utils.RemoveLinesFromFile(dir + &quot;/config/CDB/schemas&quot;, Assembly() + &quot;Base.xsd&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;utils.RemoveLinesFromFile(dir + &quot;/config&quot;, &quot;TMCDB&quot; + Assembly() + &quot;Add.xml&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;utils.RemoveLinesFromFile(dir + &quot;/src/CCL&quot;, Assembly() + &quot;Base.py&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;utils.RemoveLinesFromFile(dir + &quot;/src/CCL&quot;, &quot;__init__.py&quot;, 1);&#xA;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Code generation for &quot; + deviceName + &quot; done.&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return &quot;&quot;;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="checkIfFileExists" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="java.io.File f = new java.io.File(fileName);&#xD;&#xA;if(f.exists() == true){&#xD;&#x9;return true;&#xD;&#xA; }else{&#xD;&#xA;&#x9;return false;&#xD;&#xA;          }"/>
              </eAnnotations>
              <eParameters name="fileName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="checkIfFileExists" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="if(directory.isEmpty() == false){&#xA;&#x9;return checkIfFileExists(directory + &quot;/&quot; + fileName);&#xD;&#xA;} else{&#xD;&#xA;        return checkIfFileExists(fileName);&#xD;&#xA;          }"/>
              </eAnnotations>
              <eParameters name="directory" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
              <eParameters name="fileName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="checkIfDeviceFileExists" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="String fileName = getDeviceDir() + &quot;/&quot; + directory + &quot;/&quot; + Assembly() + localFileName;&#xA;return checkIfFileExists(fileName);"/>
              </eAnnotations>
              <eParameters name="directory" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
              <eParameters name="localFileName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="checkIfTestFileExists" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="String fileName = getDeviceDir() + &quot;/&quot; + directory + &quot;/Test&quot; + Assembly() + localFileName;&#xD;&#xA;return checkIfFileExists(fileName);"/>
              </eAnnotations>
              <eParameters name="directory" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
              <eParameters name="localFileName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="checkIfCvsignoreFileExists" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="String fileName = getDeviceDir() + &quot;/&quot; + directory + &quot;/.cvsignore&quot;;&#xD;&#xA;return checkIfFileExists(fileName);"/>
              </eAnnotations>
              <eParameters name="directory" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="setDeviceModel">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="this.setDeviceName(System.getProperty(&quot;deviceName&quot;));&#xA;this.setDeviceDir(System.getProperty(&quot;deviceDir&quot;));&#xA;this.setCodegenDir(System.getProperty(&quot;codegenDir&quot;));&#xA;this.setSpreadsheetDir(System.getProperty(&quot;spreadsheetDir&quot;));&#xA;this.setGeneratedDir(System.getProperty(&quot;generatedDir&quot;));"/>
              </eAnnotations>
            </eOperations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="DescriptionIndex"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
                defaultValueLiteral="1"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="spreadsheet" eType="#//control/datamodel/meta/base/EStringArray3"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="container" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResourceSet"
                transient="true"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="notes" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResource"
                transient="true"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="monitorPoints"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResource"
                transient="true"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="controlPoints"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResource"
                transient="true"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="archiveProperties"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResource"
                transient="true"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="deviceName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="busType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="deviceDir" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="codegenDir" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="spreadsheetDir"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="generatedDir" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="monitorDBOnly"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="generateAlt" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="main" eType="#//control/datamodel/meta/base/MainBase"
                containment="true"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="tables" eType="#//control/datamodel/meta/base/Table"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="utils" eType="#//control/datamodel/meta/base/Util"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="MainBase">
            <eOperations name="Assembly" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Assembly&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Description" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Description&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DescriptionAsString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return utils.descriptionAsString(Description());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DeviceName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Device Name&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Extends" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Extends&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="ICD" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;ICD&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="ICDDate" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;ICD Date&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="ICDDateAsDatabaseDate" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return utils.toDatabaseDate(ICDDate());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="ICDDateAsArrayTime" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return utils.toArrayTime(ICDDate());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="setMainBase">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="this.tables = tables;&#xA;this.utils = utils;"/>
              </eAnnotations>
              <eParameters name="tables" eType="#//control/datamodel/meta/base/Table"/>
              <eParameters name="utils" eType="#//control/datamodel/meta/base/Util"/>
            </eOperations>
            <eOperations name="setMainBase">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="this.row = row;&#xA;this.sheet = tables.getSheetNum(&quot;Hardware Device&quot;);"/>
              </eAnnotations>
              <eParameters name="row" eType="#//control/datamodel/meta/base/EStringArray"/>
            </eOperations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="row" eType="#//control/datamodel/meta/base/EStringArray"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="sheet" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="tables" eType="#//control/datamodel/meta/base/Table"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="utils" eType="#//control/datamodel/meta/base/Util"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="MandCBase" abstract="true">
            <eOperations name="addDependent">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="dependents.getContents().add(son);&#xA;container.getResources().add(dependents);"/>
              </eAnnotations>
              <eParameters name="son" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EObject"/>
            </eOperations>
            <eOperations name="IsDependent" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;&#x9;if (getParent() == null){&#xA;&#x9;&#x9;&#x9;&#x9;//&#x9;System.out.println(&quot;no tiene padre&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return false;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;//System.out.println(&quot;si tiene padre&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return true;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="hasDependents" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return !dependents.getContents().isEmpty();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="FullName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Name&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="if(IsDependent())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return row[tables.getColNum(sheet, &quot;Name&quot;)].substring(1);&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return row[tables.getColNum(sheet, &quot;Name&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GetDependentName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return Name();&#xD;&#xA;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GetAltDependentName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return utils.AltName(GetDependentName());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GetDependsOnName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="if(!IsDependent())&#xA;&#x9;&#x9;&#x9;return &quot;&quot;;&#xA;&#x9;&#x9;return ((MandCBase)getParent()).Name();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GetAltDependsOnName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;return utils.AltName(((MandCBase)getParent()).Name());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DataUnits" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Data Units&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="MinRange" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Min Range&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="MaxRange" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Max Range&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Mode" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Mode&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Implement" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Implement&quot;)].equals(&quot;yes&quot;);"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="External" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;External&quot;)].equals(&quot;yes&quot;);"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Description" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Description&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsExternal" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return External();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsArchived" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return true;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsImplemented" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return Implement();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="dErr" eType="#//control/datamodel/meta/base/RuntimeExceptionDT">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return new RuntimeException(spreadsheetName +&quot;:&quot;+ sheetName +&quot;:&quot;+ cell +&quot;:&quot;+ err.toString());"/>
              </eAnnotations>
              <eParameters name="err" eType="#//control/datamodel/meta/base/RuntimeExceptionDT"/>
              <eParameters name="cell" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="dErr" eType="#//control/datamodel/meta/base/RuntimeExceptionDT">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return new RuntimeException(spreadsheetName +&quot;:&quot;+ sheetName +&quot;:&quot;+ cell +&quot;:&quot;+ err);"/>
              </eAnnotations>
              <eParameters name="err" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
              <eParameters name="cell" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="dropPrefix" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="if (s.startsWith(&quot;GET_&quot;) || s.startsWith(&quot;SET_&quot;))&#xD;&#xA;&#x9;return s.substring(4);&#xD;&#xA;return s;"/>
              </eAnnotations>
              <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="PName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;if (Name().startsWith(tables.getDepChar()))&#xA;&#x9;&#x9;&#x9;return dropPrefix(Name().substring(1));&#xA;&#x9;&#x9;return dropPrefix(Name());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="AltPName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;if (Name().startsWith(&quot;SET_&quot;))&#xA;&#x9;&#x9;&#x9;return &quot;Cntl&quot; + utils.AltName(PName()); &#xA;&#x9;&#x9;return utils.AltName(PName());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DescriptionAsString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return utils.descriptionAsString(Description());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DescriptionFormatted" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return utils.formatDescriptionL2(Description());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DescriptionFormattedL4" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return utils.formatDescriptionL4(Description());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DescriptionFormattedL5" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return utils.formatDescriptionL5(Description());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsMonitored" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eOperations name="setMandCBase">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="this.tables = tables;&#xA;this.utils = utils;"/>
              </eAnnotations>
              <eParameters name="tables" eType="#//control/datamodel/meta/base/Table"/>
              <eParameters name="utils" eType="#//control/datamodel/meta/base/Util"/>
            </eOperations>
            <eOperations name="setMandCBase">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="this.row = row;&#xA;this.parent = parent;&#xA;dependents = container.createResource(URI.createURI(&quot;&quot;));&#xA;sheet = (this instanceof MonitorPoint) ? tables.getSheetNum(&quot;Monitor Point&quot;) : tables.getSheetNum(&quot;Control Point&quot;);"/>
              </eAnnotations>
              <eParameters name="row" eType="#//control/datamodel/meta/base/EStringArray"/>
              <eParameters name="parent" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EObject"/>
            </eOperations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="spreadsheetName"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
                defaultValueLiteral="Not needed"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="container" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResourceSet"
                transient="true"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="dependents" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResource"
                transient="true" iD="true"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="parent" eType="#//control/datamodel/meta/base/EObjectDT"
                transient="true"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="archive" eType="#//control/datamodel/meta/base/ArchiveProperty"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="sheetName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="row" eType="#//control/datamodel/meta/base/EStringArray"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="sheet" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="manc" upperBound="-1"
                eType="#//control/datamodel/meta/base/MandCBase" containment="true"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="tables" eType="#//control/datamodel/meta/base/Table"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="utils" eType="#//control/datamodel/meta/base/Util"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="MonitorPoint" abstract="true"
              eSuperTypes="#//control/datamodel/meta/base/MandCBase">
            <eOperations name="Default" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Default&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="ErrorCondition" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Error Condition&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="ErrorSeverity" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Error Severity&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="ErrorAction" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Error Action&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="APName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return PName();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="RefersTo" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return PName();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Interval" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;int defaultValue = 300;&#xA;&#x9;&#x9;&#x9;&#x9;if(archive != null) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if ( ((ArchiveProperty)archive).Interval().equals(&quot;none&quot;) )&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return Integer.toString(defaultValue);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;int value = Integer.valueOf(((ArchiveProperty)archive).Interval());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (value &lt;= 0)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;value = defaultValue;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return Integer.toString(value);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return Integer.toString(defaultValue);"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="OnlyOnChange" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;if(archive != null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return ((ArchiveProperty)archive).OnlyOnChange();&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return false;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DisplayUnits" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="if(archive != null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return ((ArchiveProperty)archive).DisplayUnits();&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return DataUnits();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GraphMin" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;if(archive != null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return ((ArchiveProperty)archive).GraphMin();&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return &quot;none&quot;;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="GraphMax" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;if(archive != null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return ((ArchiveProperty)archive).GraphMax();&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return &quot;none&quot;;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Format" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;&#x9;&#x9;if(archive != null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return ((ArchiveProperty)archive).Format();&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return &quot;none&quot;;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Title" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;&#x9;&#x9;if(archive != null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return ((ArchiveProperty)archive).Title();&#xA;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return Description();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="MPName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return PName();&#xD;&#xA;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="AltMPName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return AltPName();&#xD;&#xA;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsMonitored" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return true;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsPartOfPattern" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eOperations name="IsHomogeneous" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eOperations name="IsPartOfHomogeneous" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            <eOperations name="setMonitorPoint">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="this.tables = tables;&#xA;this.utils = utils;"/>
              </eAnnotations>
              <eParameters name="tables" eType="#//control/datamodel/meta/base/Table"/>
              <eParameters name="utils" eType="#//control/datamodel/meta/base/Util"/>
            </eOperations>
            <eOperations name="setMonitorPoint">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="this. row = row;&#xA;this.parent = parent;&#xA;super.setMandCBase(row, parent);"/>
              </eAnnotations>
              <eParameters name="row" eType="#//control/datamodel/meta/base/EStringArray"/>
              <eParameters name="parent" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EObject"/>
            </eOperations>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Note">
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="note" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
                defaultValueLiteral=""/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Pair" abstract="true" eSuperTypes="#//control/datamodel/meta/base/SpreadsheetParser">
            <eOperations name="setPair">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="content = c;&#xA;newString = n;"/>
              </eAnnotations>
              <eParameters name="c" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
              <eParameters name="n" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="content" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="newString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="SimpleErrorHandler" eSuperTypes="#//control/datamodel/meta/base/ErrorHandlerAuxClass">
            <eOperations name="error">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="System.out.println(&quot;error: line &quot;+ exception.getLineNumber() + &quot;: &quot; + exception.getMessage());&#xD;&#xA;errors = true;"/>
              </eAnnotations>
              <eParameters name="exception" eType="#//control/datamodel/meta/base/SAXParseExceptionDT"/>
            </eOperations>
            <eOperations name="fatalError">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="System.out.println(&quot;fatalError: line &quot;+ exception.getLineNumber() + &quot;: &quot; + exception.getMessage());&#xD;&#xA;errors = true;"/>
              </eAnnotations>
              <eParameters name="exception" eType="#//control/datamodel/meta/base/SAXParseExceptionDT"/>
            </eOperations>
            <eOperations name="warning">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="System.out.println(&quot;warning: line &quot;+ exception.getLineNumber() + &quot;: &quot; + exception.getMessage());&#xD;&#xA;errors = true;"/>
              </eAnnotations>
              <eParameters name="exception" eType="#//control/datamodel/meta/base/SAXParseExceptionDT"/>
            </eOperations>
            <eOperations name="areErrors" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return errors;"/>
              </eAnnotations>
            </eOperations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="errors" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
                defaultValueLiteral="false"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="SpreadsheetParser">
            <eOperations name="getSpreadsheet" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;java.io.File dir = new java.io.File(dirName);&#xD;&#xA;&#x9;&#x9;if (!dir.isDirectory())&#xD;&#xA;&#x9;&#x9;&#x9;throw new RuntimeException (&quot;Directory &quot; + dirName + &quot; does not exist.&quot;);&#xD;&#xA;&#x9;&#x9;java.io.File file = new java.io.File(dir, fileName);&#xD;&#xA;&#x9;&#x9;if (!file.exists())&#xD;&#xA;&#x9;&#x9;&#x9;throw new RuntimeException (&quot;File &quot; + fileName + &quot; in directory &quot; + dirName + &quot; does not exist.&quot;);&#xD;&#xA;&#x9;&#x9;java.io.BufferedReader in = null;&#xD;&#xA;&#x9;&#x9;StringBuffer xmlDoc = null;&#xD;&#xA;&#x9;&#x9;String line = null;&#xD;&#xA;&#x9;&#x9;try {&#xD;&#xA;&#x9;&#x9;&#x9;in = new java.io.BufferedReader(new java.io.FileReader(file));&#xD;&#xA;&#x9;&#x9;&#x9;//Read the entire file and store in it xmlDoc.&#xD;&#xA;&#x9;&#x9;&#x9;xmlDoc = new StringBuffer();&#xD;&#xA;&#x9;&#x9;&#x9;line = in.readLine();&#xD;&#xA;&#x9;&#x9;&#x9;while (line != null) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;xmlDoc.append(line + newline);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;//xmlDoc.append(line);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;line = in.readLine();&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;in.close();&#xD;&#xA;&#x9;&#x9;} catch (java.io.IOException e) {&#xD;&#xA;&#x9;&#x9;&#x9;throw new RuntimeException(e.getMessage());&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;String xml = new String(xmlDoc);&#xD;&#xA;&#x9;&#x9;// Now, the entire xml file is in the string: xml.&#xD;&#xA;&#x9;&#x9;return xml;"/>
              </eAnnotations>
              <eParameters name="dirName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
              <eParameters name="fileName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="getBoundedContent" eType="#//control/datamodel/meta/base/Pair">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;int b1 = s.indexOf(beginPart1);&#xA;&#x9;&#x9;if (b1 == -1)&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;int b2 = s.indexOf(beginPart2,b1);&#xA;&#x9;&#x9;if (b2 == -1)&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;int e = s.indexOf(end,b2);&#xA;&#x9;&#x9;if (e == -1)&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;String content = s.substring(b2 + 1,e).trim();&#xA;&#x9;&#x9;int n = e + end.length();&#xA;&#x9;&#x9;String newS = null;&#xA;&#x9;&#x9;if (n &lt; s.length())&#xA;&#x9;&#x9;&#x9;newS = s.substring(n);&#xA;&#x9;&#x9;PairImpl pp = new PairImpl() {};&#xA;&#x9;&#x9;pp.setPair(content,newS);&#xA;&#x9;&#x9;return pp;"/>
              </eAnnotations>
              <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
              <eParameters name="beginPart1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
              <eParameters name="beginPart2" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
              <eParameters name="end" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="getDataCells" eType="#//control/datamodel/meta/base/EStringArray">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="ArrayList list = new ArrayList ();&#xA;&#x9;&#x9;String data = null;&#xA;&#x9;&#x9;String content = null;&#xA;&#x9;&#x9;while (row != null &amp;&amp; row.length() > 0) {&#xA;&#x9;&#x9;&#x9;Pair p = getBoundedContent(row,&quot;&lt;Cell&quot;,&quot;>&quot;,&quot;&lt;/Cell>&quot;);&#xA;&#x9;&#x9;&#x9;if (p == null)&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;data = p.getContent();&#xA;&#x9;&#x9;&#x9;row = p.getNewString();&#xA;&#x9;&#x9;&#x9;p = getBoundedContent(data,&quot;&lt;Data&quot;,&quot;>&quot;,&quot;&lt;/Data>&quot;);&#xA;&#x9;&#x9;&#x9;if (p == null)&#xA;&#x9;&#x9;&#x9;&#x9;continue;&#xA;&#x9;&#x9;&#x9;content = p.getContent();&#xA;&#x9;&#x9;&#x9;list.add(content);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if(list.size() == 0)&#xA;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;String[] x = new String [list.size()];&#xA;&#x9;&#x9;return (String[])list.toArray(x);"/>
              </eAnnotations>
              <eParameters name="row" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="getWorksheets" eType="#//control/datamodel/meta/base/EStringArray3">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="ArrayList rowList = null;&#xA;&#x9;&#x9;ArrayList sheetList = null;&#xA;&#x9;&#x9;String sheet = null;&#xA;&#x9;&#x9;String row = null;&#xA;&#x9;&#x9;String[] data = null;&#xA;&#x9;&#x9;sheetList = new ArrayList ();&#xA;&#x9;&#x9;String doc = new String (xml);&#xA;&#x9;&#x9;if (doc.startsWith(&quot;@reference&quot;)) {&#xA;&#x9;&#x9;&#x9;refStatus = true;&#xA;&#x9;&#x9;&#x9;return filter(doc);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;Pair p = null;&#xA;&#x9;&#x9;while (doc != null &amp;&amp; doc.length() > 0) {&#xA;&#x9;&#x9;&#x9;p = getBoundedContent(doc,&quot;&lt;Worksheet&quot;,&quot;>&quot;,&quot;&lt;/Worksheet>&quot;);&#xA;&#x9;&#x9;&#x9;if (p == null)&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;sheet = p.getContent();&#xA;&#x9;&#x9;&#x9;doc = p.getNewString();&#xA;&#x9;&#x9;&#x9;rowList = new ArrayList ();&#xA;&#x9;&#x9;&#x9;while (sheet != null &amp;&amp; sheet.length() > 0) {&#xA;&#x9;&#x9;&#x9;&#x9;Pair p2 = getBoundedContent(sheet,&quot;&lt;Row&quot;,&quot;>&quot;,&quot;&lt;/Row>&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;if (p2 == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;row = p2.getContent();&#xA;&#x9;&#x9;&#x9;&#x9;sheet = p2.getNewString();&#xA;&#x9;&#x9;&#x9;&#x9;data = getDataCells(row);&#xA;&#x9;&#x9;&#x9;&#x9;if (data != null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rowList.add(data);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;sheetList.add(rowList);&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;if(p == null){&#xA;&#x9;&#x9;&#x9;doc = new String(xml);&#xA;&#x9;&#x9;&#x9;while (doc != null &amp;&amp; doc.length() > 0) {&#xA;&#x9;&#x9;&#x9;&#x9;p = getBoundedContent(doc,&quot;&lt;ss:Worksheet&quot;,&quot;>&quot;,&quot;&lt;/ss:Worksheet>&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;if(p == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;sheet = p.getContent();&#xA;&#x9;&#x9;&#x9;&#x9;doc = p.getNewString();&#xA;&#x9;&#x9;&#x9;&#x9;rowList = new ArrayList ();&#xA;&#x9;&#x9;&#x9;&#x9;while (sheet != null &amp;&amp; sheet.length() > 0) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Pair p2 = getBoundedContent(sheet,&quot;&lt;Row&quot;,&quot;>&quot;,&quot;&lt;/Row>&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (p2 == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;row = p2.getContent();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;sheet = p2.getNewString();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;data = getDataCells(row);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (data != null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;rowList.add(data);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;sheetList.add(rowList);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#xA;&#x9;&#x9;String[][][] result = new String [sheetList.size()][][];&#xA;&#x9;&#x9;for (int i = 0; i &lt; result.length; ++i) {&#xA;&#x9;&#x9;&#x9;ArrayList x = (ArrayList)sheetList.get(i);&#xA;&#x9;&#x9;&#x9;result[i] = new String [x.size()][];&#xA;&#x9;&#x9;&#x9;for (int j = 0; j &lt; result[i].length; ++j) {&#xA;&#x9;&#x9;&#x9;&#x9;String[] y = (String[])x.get(j);&#xA;&#x9;&#x9;&#x9;&#x9;result[i][j] = new String [y.length];&#xA;&#x9;&#x9;&#x9;&#x9;for (int k = 0; k &lt; y.length; ++k)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;result[i][j][k] = y[k];&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return result;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="isReference" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return refStatus;&#xD;&#xA;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="getReference" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return refPath;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="setXSD">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="xsdFile = xsd;"/>
              </eAnnotations>
              <eParameters name="xsd" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="filter" eType="#//control/datamodel/meta/base/EStringArray3">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="// A. Get the directory that is referenced, and the old and new assembly names.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;// Syntax: @reference = &lt;base-directory-path-name> &lt;base-assembly-name> = &lt;new-assembly-name>&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;java.io.LineNumberReader text = new java.io.LineNumberReader(new java.io.StringReader(doc));&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String line = null;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;line = text.readLine();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException err) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new RuntimeException(&quot;Cannot read file: &quot; + err.toString());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String[] tmp = line.split(&quot;[ |\t]+&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (!tmp[0].equals(&quot;@reference&quot;) || !tmp[1].equals(&quot;=&quot;) || !tmp[4].equals(&quot;=&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new RuntimeException(&quot;Invalid syntax at line number &quot; + text.getLineNumber() + &quot; in file filter.&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String baseDirectory = tmp[2];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String baseAssemblyName = tmp[3];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String newAssemblyName = tmp[5];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Applying filter in directory &quot; + baseDirectory + &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot; to assembly &quot; + baseAssemblyName + &quot;.  New assembly is &quot; + newAssemblyName + &quot;.&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;// B. Get the contents of this base spreadsheet.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;BaseFactory baseFac = BaseFactory.eINSTANCE;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String referenceXml = baseFac.createSpreadsheetParser().getSpreadsheet(baseDirectory, baseAssemblyName + &quot;_spreadsheet.xml&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;refPath = baseDirectory + &quot;/&quot; + baseAssemblyName + &quot;_spreadsheet.xml&quot;;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SpreadsheetParser p = baseFac.createSpreadsheetParser();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;p.setSpreadsheetParser(referenceXml);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SpreadsheetValidator v = baseFac.createSpreadsheetValidator();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (!v.validate(refPath,xsdFile)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String s = &quot;Spreadsheet &quot; + baseAssemblyName + &quot;_spreadsheet.xml is not a valid spreadsheet.&quot;;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new RuntimeException(s);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Base spreadsheet &quot; + baseAssemblyName + &quot; has been validated.&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String[][][] base = p.getWorksheets();&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;// C. Change the assembly name in the base spreadsheet.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;for (int i = 0; i &lt; base.length; ++i) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;for (int j = 0; j &lt; base[i].length; ++j) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (base[i][j][0].equals(baseAssemblyName)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;base[i][j][0] = newAssemblyName;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;// D. Apply the filter to the base.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;//    Any deleted rows we will simply make null.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String[][] worksheet = null;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;while (true) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;line = text.readLine();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException err) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new RuntimeException(&quot;Cannot read file: &quot; + err.toString());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (line == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (line.trim().length() == 0)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;continue;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (line.startsWith(&quot;Main&quot;))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;worksheet = base[0];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else if (line.startsWith(&quot;EndMain&quot;))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;worksheet = null;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else if (line.startsWith(&quot;Monitor&quot;))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;worksheet = base[1];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else if (line.startsWith(&quot;EndMonitor&quot;))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;worksheet = null;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else if (line.startsWith(&quot;Control&quot;))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;worksheet = base[2];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else if (line.startsWith(&quot;EndControl&quot;))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;worksheet = null;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else if (line.startsWith(&quot;Archive&quot;))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;worksheet = base[3];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else if (line.startsWith(&quot;EndArchive&quot;))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;worksheet = null;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (worksheet == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;throw new RuntimeException(&quot;Invalid syntax at line number &quot; + text.getLineNumber() + &quot; in file filter. (Missing statement)&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;tmp = line.split(&quot;[ |\t]+&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (line.startsWith(&quot;~&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;deleteRow(worksheet,tmp[0].substring(1));&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String s = line.substring(tmp[0].length());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;modifyRow(worksheet,text.getLineNumber(),tmp[0],s);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;// E. Assign the non-null array.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String[][][] result = new String [base.length] [] [];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;for (int i = 0; i &lt; result.length; ++i) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;int nrow = 0;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;for (int j = 0; j &lt; base[i].length; ++j) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (base[i][j] != null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;++nrow;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;result[i] = new String [nrow] [];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;int jj = 0;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;for (int j = 0; j &lt; base[i].length; ++j) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (base[i][j] != null) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;result[i][jj] = new String [base[i][j].length];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;for (int k = 0; k &lt; base[i][j].length; ++k)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;result[i][jj][k] = base[i][j][k];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;++jj;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;// F. Return the new spreadsheet. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return result;"/>
              </eAnnotations>
              <eParameters name="doc" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="deleteRow">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="if (worksheet[0][0].equals(&quot;Hardware Device&quot;)) {&#xD;&#xA;&#x9;&#x9;&#x9;for (int i = 2; i &lt; worksheet.length; ++i) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (worksheet[i] == null)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;continue;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (worksheet[i][0].equals(name)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;worksheet[i] = null;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;throw new RuntimeException(&quot;The name &quot; + name + &quot; is not the name of a row in the Main worksheet.&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;for (int i = 2; i &lt; worksheet.length; ++i) {&#xD;&#xA;&#x9;&#x9;&#x9;if (worksheet[i] == null)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;continue;&#xD;&#xA;&#x9;&#x9;&#x9;if (worksheet[i][1].equals(name)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;worksheet[i] = null;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;throw new RuntimeException(&quot;The name &quot; + name + &quot; is not the name of a row in the &quot; + worksheet[0][0] + &quot; worksheet.&quot;);"/>
              </eAnnotations>
              <eParameters name="worksheet" eType="#//control/datamodel/meta/base/EStringArray2"/>
              <eParameters name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="modifyRow">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;// Find the row.&#xD;&#xA;&#x9;&#x9;int row = 0;&#xD;&#xA;&#x9;&#x9;if (worksheet[0][0].equals(&quot;Hardware Device&quot;)) {&#xD;&#xA;&#x9;&#x9;&#x9;int i = 2;&#xD;&#xA;&#x9;&#x9;&#x9;for (; i &lt; worksheet.length; ++i) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (worksheet[i] == null)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;continue;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (worksheet[i][0].equals(rowName)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;row = i;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;if (i == worksheet.length)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;throw new RuntimeException(&quot;The name &quot; + rowName + &quot; is not the name of a row in the Main worksheet.&quot;);&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;int i = 2;&#xD;&#xA;&#x9;&#x9;&#x9;for (; i &lt; worksheet.length; ++i) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (worksheet[i] == null)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;continue;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (worksheet[i][1].equals(rowName)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;row = i;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;if (i == worksheet.length)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;throw new RuntimeException(&quot;The name &quot; + rowName + &quot; is not the name of a row in the &quot; + worksheet[0][0] + &quot; worksheet.&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;String name;&#xD;&#xA;&#x9;&#x9;String value;&#xD;&#xA;&#x9;&#x9;int b;&#xD;&#xA;&#x9;&#x9;int m;&#xD;&#xA;&#x9;&#x9;int e;        &#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;while(true) {&#xD;&#xA;&#x9;&#x9;&#x9;b = s.indexOf('&lt;');&#xD;&#xA;&#x9;&#x9;&#x9;m = s.indexOf('=');&#xD;&#xA;&#x9;&#x9;&#x9;e = s.indexOf('>');&#xD;&#xA;&#x9;&#x9;&#x9;if (b == -1 || m == -1 || e == -1 || m &lt; b || e &lt; m) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;throw new RuntimeException(&quot;Invalid syntax at line number &quot; + lineNumber + &quot; in file filter.&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;name = s.substring(b + 1, m).trim();&#xD;&#xA;&#x9;&#x9;&#x9;value = s.substring(m + 1, e).trim();&#xD;&#xA;&#x9;&#x9;&#x9;// Apply the change.&#xD;&#xA;&#x9;&#x9;&#x9;int j = 0;&#xD;&#xA;&#x9;&#x9;&#x9;for (; j &lt; worksheet[row].length; ++j) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (worksheet[1][j].equals(name)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;worksheet[row][j] = value;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;if (j == worksheet[row].length)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;throw new RuntimeException(&quot;The name &quot; + name + &quot; is not the name of a column in the &quot; + worksheet[0][0] + &quot; worksheet.&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;// Get the next change.&#xD;&#xA;&#x9;&#x9;&#x9;++e;&#xD;&#xA;&#x9;&#x9;&#x9;while (e &lt; s.length() &amp;&amp; (s.charAt(e) == ' ' || s.charAt(e) == '\t'))&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;++e;&#xD;&#xA;&#x9;&#x9;&#x9;if (e == s.length())&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;s = s.substring(e);&#xD;&#xA;&#x9;&#x9;}"/>
              </eAnnotations>
              <eParameters name="worksheet" eType="#//control/datamodel/meta/base/EStringArray2"/>
              <eParameters name="lineNumber" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
              <eParameters name="rowName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
              <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="setSpreadsheetParser">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="this.xml = xml;"/>
              </eAnnotations>
              <eParameters name="xml" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="refPath" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="refStatus" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
                defaultValueLiteral="false"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="xml" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="xsdFile" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="newline" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
                defaultValueLiteral=""/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="SpreadsheetValidator">
            <eOperations name="validate" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;&#x9;&#x9;javax.xml.parsers.DocumentBuilderFactory factory = javax.xml.parsers.DocumentBuilderFactory.newInstance();&#xA;&#x9;&#x9;&#x9;&#x9;factory.setNamespaceAware(true);&#xA;&#x9;&#x9;&#x9;&#x9;factory.setValidating(true);&#xA;&#x9;&#x9;&#x9;&#x9;factory.setAttribute(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;http://java.sun.com/xml/jaxp/properties/schemaLanguage&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;http://www.w3.org/2001/XMLSchema&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;// Specify our own schema - this overrides the schemaLocation in the xml&#xA;&#x9;&#x9;&#x9;&#x9;// file&#xA;&#x9;&#x9;&#x9;&#x9;factory.setAttribute(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;http://java.sun.com/xml/jaxp/properties/schemaSource&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;file://&quot; + xsdFile);&#xA;&#x9;&#x9;&#x9;&#x9;seh = BaseFactory.eINSTANCE.createSimpleErrorHandler();&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;javax.xml.parsers.DocumentBuilder builder = factory.newDocumentBuilder();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;builder.setErrorHandler(seh);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;org.w3c.dom.Document document = builder.parse(xmlFile);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;catch(Exception e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Validating error file &quot; + xmlFile&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot; with schema file &quot; + xsdFile + &quot; failed!&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return false;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;if(seh.areErrors()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;Validating error file &quot; + xmlFile&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;+ &quot; with schema file &quot; + xsdFile + &quot; failed!&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return false;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return true;&#xA;&#x9;&#x9;&#x9;&#x9;}"/>
              </eAnnotations>
              <eParameters name="xmlFile" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
              <eParameters name="xsdFile" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="setSpreadsheetValidator">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="this.errorList = new ArrayList&lt; String >();&#xA;"/>
              </eAnnotations>
            </eOperations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="seh" eType="#//control/datamodel/meta/base/SimpleErrorHandlerDT"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="errorList" eType="#//control/datamodel/meta/base/ArrayList"
                transient="true"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="sehTmp" eType="#//control/datamodel/meta/base/ErrorHandlerDT"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Table">
            <eOperations name="getSheetNum" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="int i;&#xD;&#xA;&#x9;for(i = 0; i &lt; sheetNames.size(); i++)&#xD;&#xA;&#x9;&#x9;if(((String)sheetNames.get(i)).compareTo(name) == 0)&#xD;&#xA;&#x9;&#x9;&#x9;return i;&#xD;&#xA;&#x9;return -1;"/>
              </eAnnotations>
              <eParameters name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="getColNum" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="int i;&#xD;&#xA;for(i = 0; i &lt; ((ArrayList)colNames.get(sheet)).size(); i++)&#xD;&#xA;&#x9;if(((String)((ArrayList)colNames.get(sheet)).get(i)).compareTo(name) == 0)&#xD;&#xA;&#x9;&#x9;return i;&#xD;&#xA;&#x9;return -1;"/>
              </eAnnotations>
              <eParameters name="sheet" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
              <eParameters name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="addSheet">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="sheetNames.add(name);&#xD;&#xA;colNames.add(new ArrayList());"/>
              </eAnnotations>
              <eParameters name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="addCol">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="((ArrayList)colNames.get(sheet)).add(name);&#xD;&#xA;"/>
              </eAnnotations>
              <eParameters name="sheet" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
              <eParameters name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="initialize">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;int i, j;&#xD;&#xA;&#x9;&#x9;sheetNames = new ArrayList();&#xD;&#xA;&#x9;&#x9;colNames = new ArrayList();&#xD;&#xA;&#x9;&#x9;for(i = 0; i &lt; sh.length; i++){&#xD;&#xA;&#x9;&#x9;&#x9;addSheet(sh[i][0][0]);&#xD;&#xA;&#x9;&#x9;&#x9;for(j = 0; j &lt; sh[i][1].length; j++){&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;addCol(i, sh[i][1][j]);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;toCPP = new Hashtable();&#xD;&#xA;&#x9;&#x9;toCPP.put(&quot;char&quot;, &quot;char&quot;);&#xD;&#xA;&#x9;&#x9;toCPP.put(&quot;short&quot;, &quot;short&quot;);&#xD;&#xA;&#x9;&#x9;toCPP.put(&quot;int&quot;, &quot;int&quot;);&#xD;&#xA;&#x9;&#x9;toCPP.put(&quot;long long&quot;, &quot;long long&quot;);&#xD;&#xA;&#x9;&#x9;toCPP.put(&quot;float&quot;, &quot;float&quot;);&#xD;&#xA;&#x9;&#x9;toCPP.put(&quot;double&quot;, &quot;double&quot;);&#xD;&#xA;&#x9;&#x9;toCPP.put(&quot;bool&quot;, &quot;bool&quot;);&#xD;&#xA;&#x9;&#x9;toCPP.put(&quot;string&quot;, &quot;char *&quot;);&#xD;&#xA;&#x9;&#x9;toCPP.put(&quot;void&quot;, &quot;void&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;toIDL = new Hashtable();&#xD;&#xA;&#x9;&#x9;toIDL.put(&quot;char&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;toIDL.put(&quot;short&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;toIDL.put(&quot;int&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;toIDL.put(&quot;long long&quot;, &quot;long long&quot;);&#xD;&#xA;&#x9;&#x9;toIDL.put(&quot;float&quot;, &quot;float&quot;);&#xD;&#xA;&#x9;&#x9;toIDL.put(&quot;double&quot;, &quot;double&quot;);&#xD;&#xA;&#x9;&#x9;toIDL.put(&quot;bool&quot;, &quot;boolean&quot;);&#xD;&#xA;&#x9;&#x9;toIDL.put(&quot;string&quot;, &quot;string&quot;);&#xD;&#xA;&#x9;&#x9;toIDL.put(&quot;void&quot;, &quot;void&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;toIDLSeq = new Hashtable();&#xD;&#xA;&#x9;&#x9;toIDLSeq.put(&quot;char&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;toIDLSeq.put(&quot;short&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;toIDLSeq.put(&quot;int&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;toIDLSeq.put(&quot;long long&quot;, &quot;Control::LongLongSeq&quot;);&#xD;&#xA;&#x9;&#x9;toIDLSeq.put(&quot;float&quot;, &quot;Control::FloatSeq&quot;);&#xD;&#xA;&#x9;&#x9;toIDLSeq.put(&quot;double&quot;, &quot;Control::DoubleSeq&quot;);&#xD;&#xA;&#x9;&#x9;toIDLSeq.put(&quot;bool&quot;, &quot;Control::BooleanSeq&quot;);&#xD;&#xA;&#x9;&#x9;toIDLSeq.put(&quot;string&quot;, &quot;Control::StringSeq&quot;);&#xD;&#xA;&#x9;&#x9;toIDLSeq.put(&quot;void&quot;, &quot;NOTHING&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;toCORBA = new Hashtable();&#xD;&#xA;&#x9;&#x9;toCORBA.put(&quot;char&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;toCORBA.put(&quot;short&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;toCORBA.put(&quot;int&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;toCORBA.put(&quot;long long&quot;, &quot;CORBA::LongLong&quot;);&#xD;&#xA;&#x9;&#x9;toCORBA.put(&quot;float&quot;, &quot;CORBA::Float&quot;);&#xD;&#xA;&#x9;&#x9;toCORBA.put(&quot;double&quot;, &quot;CORBA::Double&quot;);&#xD;&#xA;&#x9;&#x9;toCORBA.put(&quot;bool&quot;, &quot;CORBA::Boolean&quot;);&#xD;&#xA;&#x9;&#x9;toCORBA.put(&quot;string&quot;, &quot;char *&quot;);&#xD;&#xA;&#x9;&#x9;toCORBA.put(&quot;void&quot;, &quot;void&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;toCORBADevIO = new Hashtable();&#xD;&#xA;&#x9;&#x9;toCORBADevIO.put(&quot;char&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;toCORBADevIO.put(&quot;short&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;toCORBADevIO.put(&quot;int&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;toCORBADevIO.put(&quot;long long&quot;, &quot;CORBA::LongLong&quot;);&#xD;&#xA;&#x9;&#x9;toCORBADevIO.put(&quot;float&quot;, &quot;CORBA::Float&quot;);&#xD;&#xA;&#x9;&#x9;toCORBADevIO.put(&quot;double&quot;, &quot;CORBA::Double&quot;);&#xD;&#xA;&#x9;&#x9;toCORBADevIO.put(&quot;bool&quot;, &quot;CORBA::Boolean&quot;);&#xD;&#xA;&#x9;&#x9;toCORBADevIO.put(&quot;string&quot;, &quot;CORBA::String&quot;);&#xD;&#xA;&#x9;&#x9;toCORBADevIO.put(&quot;void&quot;, &quot;NOTHING&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;toCORBASeq = new Hashtable();&#xD;&#xA;&#x9;&#x9;toCORBASeq.put(&quot;char&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;toCORBASeq.put(&quot;short&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;toCORBASeq.put(&quot;int&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;toCORBASeq.put(&quot;long long&quot;, &quot;Control::LongLongSeq&quot;);&#xD;&#xA;&#x9;&#x9;toCORBASeq.put(&quot;float&quot;, &quot;Control::FloatSeq&quot;);&#xD;&#xA;&#x9;&#x9;toCORBASeq.put(&quot;double&quot;, &quot;Control::DoubleSeq&quot;);&#xD;&#xA;&#x9;&#x9;toCORBASeq.put(&quot;bool&quot;, &quot;Control::BooleanSeq&quot;);&#xD;&#xA;&#x9;&#x9;toCORBASeq.put(&quot;string&quot;, &quot;Control::StringSeq&quot;);&#xD;&#xA;&#x9;&#x9;toCORBASeq.put(&quot;void&quot;, &quot;NOTHING&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;toBACI = new Hashtable();&#xD;&#xA;&#x9;&#x9;toBACI.put(&quot;char&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;toBACI.put(&quot;short&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;toBACI.put(&quot;int&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;toBACI.put(&quot;long long&quot;, &quot;longLong&quot;);&#xD;&#xA;&#x9;&#x9;toBACI.put(&quot;float&quot;, &quot;float&quot;);&#xD;&#xA;&#x9;&#x9;toBACI.put(&quot;double&quot;, &quot;double&quot;);&#xD;&#xA;&#x9;&#x9;toBACI.put(&quot;bool&quot;, &quot;boolean&quot;);&#xD;&#xA;&#x9;&#x9;toBACI.put(&quot;string&quot;, &quot;string&quot;);&#xD;&#xA;&#x9;&#x9;toBACI.put(&quot;void&quot;, &quot;void&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;toDatabase = new Hashtable();&#xD;&#xA;&#x9;&#x9;toDatabase.put(&quot;char&quot;, &quot;char&quot;);&#xD;&#xA;&#x9;&#x9;toDatabase.put(&quot;short&quot;, &quot;integer&quot;);&#xD;&#xA;&#x9;&#x9;toDatabase.put(&quot;int&quot;, &quot;integer&quot;);&#xD;&#xA;&#x9;&#x9;toDatabase.put(&quot;long long&quot;, &quot;integer&quot;);&#xD;&#xA;&#x9;&#x9;toDatabase.put(&quot;float&quot;, &quot;float&quot;);&#xD;&#xA;&#x9;&#x9;toDatabase.put(&quot;double&quot;, &quot;double&quot;);&#xD;&#xA;&#x9;&#x9;toDatabase.put(&quot;bool&quot;, &quot;boolean&quot;);&#xD;&#xA;&#x9;&#x9;toDatabase.put(&quot;string&quot;, &quot;string&quot;);&#xD;&#xA;&#x9;&#x9;toDatabase.put(&quot;void&quot;, &quot;-none-&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;rawToCPP = new Hashtable();&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;bit&quot;, &quot;char&quot;);&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;ubyte&quot;, &quot;unsigned char&quot;);&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;int8&quot;, &quot;char&quot;);&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;uint8&quot;, &quot;unsigned char&quot;);&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;int16&quot;, &quot;short&quot;);&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;uint16&quot;, &quot;unsigned short&quot;);&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;int24&quot;, &quot;int&quot;);&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;uint24&quot;, &quot;unsigned int&quot;);&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;int32&quot;, &quot;int&quot;);&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;uint32&quot;, &quot;unsigned int&quot;);&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;int48&quot;, &quot;long long&quot;);&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;uint48&quot;, &quot;unsigned long long&quot;);&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;int64&quot;, &quot;long long&quot;);&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;uint64&quot;, &quot;unsigned long long&quot;);&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;float&quot;, &quot;float&quot;);&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;double&quot;, &quot;double&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;rawToByteSwapped = new Hashtable();&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;bit&quot;, &quot;false&quot;);&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;ubyte&quot;, &quot;false&quot;);&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;int8&quot;, &quot;false&quot;);&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;uint8&quot;, &quot;false&quot;);&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;int16&quot;, &quot;true&quot;);&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;uint16&quot;, &quot;true&quot;);&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;int24&quot;, &quot;true&quot;);&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;uint24&quot;, &quot;true&quot;);&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;int32&quot;, &quot;true&quot;);&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;uint32&quot;, &quot;true&quot;);&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;int48&quot;, &quot;true&quot;);&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;uint48&quot;, &quot;true&quot;);&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;int64&quot;, &quot;true&quot;);&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;uint64&quot;, &quot;true&quot;);&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;float&quot;, &quot;true&quot;);&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;double&quot;, &quot;true&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;rawBytes = new Hashtable();&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;bit&quot;, &quot;1&quot;);&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;ubyte&quot;, &quot;1&quot;);&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;int8&quot;, &quot;1&quot;);&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;uint8&quot;, &quot;1&quot;);&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;int16&quot;, &quot;2&quot;);&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;uint16&quot;, &quot;2&quot;);&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;int24&quot;, &quot;3&quot;);&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;uint24&quot;, &quot;3&quot;);&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;int32&quot;, &quot;4&quot;);&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;uint32&quot;, &quot;4&quot;);&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;int48&quot;, &quot;6&quot;);&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;uint48&quot;, &quot;6&quot;);&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;int64&quot;, &quot;8&quot;);&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;uint64&quot;, &quot;8&quot;);&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;float&quot;, &quot;4&quot;);&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;double&quot;, &quot;8&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;worldToCPP = new Hashtable();&#xD;&#xA;&#x9;&#x9;worldToCPP.put(&quot;byte&quot;, &quot;char&quot;);&#xD;&#xA;&#x9;&#x9;worldToCPP.put(&quot;ubyte&quot;, &quot;unsigned char&quot;);&#xD;&#xA;&#x9;&#x9;worldToCPP.put(&quot;short&quot;, &quot;short&quot;);&#xD;&#xA;&#x9;&#x9;worldToCPP.put(&quot;ushort&quot;, &quot;unsigned short&quot;);&#xD;&#xA;&#x9;&#x9;worldToCPP.put(&quot;int&quot;, &quot;int&quot;);&#xD;&#xA;&#x9;&#x9;worldToCPP.put(&quot;uint&quot;, &quot;unsigned int&quot;);&#xD;&#xA;&#x9;&#x9;worldToCPP.put(&quot;long&quot;, &quot;long long&quot;);&#xD;&#xA;&#x9;&#x9;worldToCPP.put(&quot;ulong&quot;, &quot;unsigned long long&quot;);&#xD;&#xA;&#x9;&#x9;worldToCPP.put(&quot;float&quot;, &quot;float&quot;);&#xD;&#xA;&#x9;&#x9;worldToCPP.put(&quot;double&quot;, &quot;double&quot;);&#xD;&#xA;&#x9;&#x9;worldToCPP.put(&quot;boolean&quot;, &quot;bool&quot;);&#xD;&#xA;&#x9;&#x9;worldToCPP.put(&quot;string&quot;, &quot;std::string&quot;);&#xD;&#xA;&#x9;&#x9;worldToCPP.put(&quot;acstime&quot;, &quot;ACS::Time&quot;);&#xD;&#xA;&#x9;&#x9;worldToCPP.put(&quot;void&quot;, &quot;void&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;worldToJava = new Hashtable();&#xD;&#xA;&#x9;&#x9;worldToJava.put(&quot;byte&quot;, &quot;int&quot;);&#xD;&#xA;&#x9;&#x9;worldToJava.put(&quot;ubyte&quot;, &quot;int&quot;);&#xD;&#xA;&#x9;&#x9;worldToJava.put(&quot;short&quot;, &quot;int&quot;);&#xD;&#xA;&#x9;&#x9;worldToJava.put(&quot;ushort&quot;, &quot;int&quot;);&#xD;&#xA;&#x9;&#x9;worldToJava.put(&quot;int&quot;, &quot;int&quot;);&#xD;&#xA;&#x9;&#x9;worldToJava.put(&quot;uint&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;worldToJava.put(&quot;long&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;worldToJava.put(&quot;ulong&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;worldToJava.put(&quot;float&quot;, &quot;float&quot;);&#xD;&#xA;&#x9;&#x9;worldToJava.put(&quot;double&quot;, &quot;double&quot;);&#xD;&#xA;&#x9;&#x9;worldToJava.put(&quot;boolean&quot;, &quot;boolean&quot;);&#xD;&#xA;&#x9;&#x9;worldToJava.put(&quot;string&quot;, &quot;String&quot;);&#xD;&#xA;&#x9;&#x9;worldToJava.put(&quot;acstime&quot;, &quot;ACSTime&quot;);&#xD;&#xA;&#x9;&#x9;worldToJava.put(&quot;void&quot;, &quot;void&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;worldToBACI = new Hashtable();&#xD;&#xA;&#x9;&#x9;worldToBACI.put(&quot;byte&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;worldToBACI.put(&quot;ubyte&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;worldToBACI.put(&quot;short&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;worldToBACI.put(&quot;ushort&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;worldToBACI.put(&quot;int&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;worldToBACI.put(&quot;uint&quot;, &quot;uLong&quot;);&#xD;&#xA;&#x9;&#x9;worldToBACI.put(&quot;long&quot;, &quot;longLong&quot;);&#xD;&#xA;&#x9;&#x9;worldToBACI.put(&quot;ulong&quot;, &quot;uLongLong&quot;);&#xD;&#xA;&#x9;&#x9;worldToBACI.put(&quot;float&quot;, &quot;float&quot;);&#xD;&#xA;&#x9;&#x9;worldToBACI.put(&quot;double&quot;, &quot;double&quot;);&#xD;&#xA;&#x9;&#x9;worldToBACI.put(&quot;boolean&quot;, &quot;boolean&quot;);&#xD;&#xA;&#x9;&#x9;worldToBACI.put(&quot;string&quot;, &quot;string&quot;);&#xD;&#xA;&#x9;&#x9;worldToBACI.put(&quot;acstime&quot;, &quot;uLongLong&quot;);&#xD;&#xA;&#x9;&#x9;worldToBACI.put(&quot;void&quot;, &quot;void&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;worldToCORBA = new Hashtable();&#xD;&#xA;&#x9;&#x9;worldToCORBA.put(&quot;byte&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBA.put(&quot;ubyte&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBA.put(&quot;short&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBA.put(&quot;ushort&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBA.put(&quot;int&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBA.put(&quot;uint&quot;, &quot;CORBA::ULong&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBA.put(&quot;long&quot;, &quot;CORBA::LongLong&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBA.put(&quot;ulong&quot;, &quot;CORBA::ULongLong&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBA.put(&quot;float&quot;, &quot;CORBA::Float&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBA.put(&quot;double&quot;, &quot;CORBA::Double&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBA.put(&quot;boolean&quot;, &quot;CORBA::Boolean&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBA.put(&quot;string&quot;, &quot;char *&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBA.put(&quot;acstime&quot;, &quot;ACS::Time&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBA.put(&quot;void&quot;, &quot;void&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;worldToCORBADevIO = new Hashtable();&#xD;&#xA;&#x9;&#x9;worldToCORBADevIO.put(&quot;byte&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBADevIO.put(&quot;ubyte&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBADevIO.put(&quot;short&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBADevIO.put(&quot;ushort&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBADevIO.put(&quot;int&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBADevIO.put(&quot;uint&quot;, &quot;CORBA::ULong&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBADevIO.put(&quot;long&quot;, &quot;CORBA::LongLong&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBADevIO.put(&quot;ulong&quot;, &quot;CORBA::ULongLong&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBADevIO.put(&quot;float&quot;, &quot;CORBA::Float&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBADevIO.put(&quot;double&quot;, &quot;CORBA::Double&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBADevIO.put(&quot;boolean&quot;, &quot;CORBA::Boolean&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBADevIO.put(&quot;string&quot;, &quot;CORBA::String&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBADevIO.put(&quot;acstime&quot;, &quot;ACS::Time&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBADevIO.put(&quot;void&quot;, &quot;NOTHING&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;worldToCORBASeq = new Hashtable();&#xD;&#xA;&#x9;&#x9;worldToCORBASeq.put(&quot;byte&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBASeq.put(&quot;ubyte&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBASeq.put(&quot;short&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBASeq.put(&quot;ushort&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBASeq.put(&quot;int&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBASeq.put(&quot;uint&quot;, &quot;Control::ULongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBASeq.put(&quot;long&quot;, &quot;Control::LongLongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBASeq.put(&quot;ulong&quot;, &quot;Control::ULongLongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBASeq.put(&quot;float&quot;, &quot;Control::FloatSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBASeq.put(&quot;double&quot;, &quot;Control::DoubleSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBASeq.put(&quot;boolean&quot;, &quot;Control::BooleanSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBASeq.put(&quot;string&quot;, &quot;Control::StringSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBASeq.put(&quot;acstime&quot;, &quot;Control::ACSTimeSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBASeq.put(&quot;void&quot;, &quot;NOTHING&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;worldToIDLSeq = new Hashtable();&#xD;&#xA;&#x9;&#x9;worldToIDLSeq.put(&quot;byte&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDLSeq.put(&quot;ubyte&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDLSeq.put(&quot;short&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDLSeq.put(&quot;ushort&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDLSeq.put(&quot;int&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDLSeq.put(&quot;uint&quot;, &quot;Control::ULongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDLSeq.put(&quot;long&quot;, &quot;Control::LongLongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDLSeq.put(&quot;ulong&quot;, &quot;Control::ULongLongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDLSeq.put(&quot;float&quot;, &quot;Control::FloatSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDLSeq.put(&quot;double&quot;, &quot;Control::DoubleSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDLSeq.put(&quot;boolean&quot;, &quot;Control::BooleanSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDLSeq.put(&quot;string&quot;, &quot;Control::StringSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDLSeq.put(&quot;acstime&quot;, &quot;Control::ACSTimeSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDLSeq.put(&quot;void&quot;, &quot;NOTHING&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;worldToIDL = new Hashtable();&#xD;&#xA;&#x9;&#x9;worldToIDL.put(&quot;byte&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDL.put(&quot;ubyte&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDL.put(&quot;short&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDL.put(&quot;ushort&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDL.put(&quot;int&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDL.put(&quot;uint&quot;, &quot;unsigned long&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDL.put(&quot;long&quot;, &quot;long long&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDL.put(&quot;ulong&quot;, &quot;unsigned long long&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDL.put(&quot;float&quot;, &quot;float&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDL.put(&quot;double&quot;, &quot;double&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDL.put(&quot;boolean&quot;, &quot;boolean&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDL.put(&quot;string&quot;, &quot;string&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDL.put(&quot;acstime&quot;, &quot;ACS::Time&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDL.put(&quot;void&quot;, &quot;void&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;worldToDatabase = new Hashtable();&#xD;&#xA;&#x9;&#x9;worldToDatabase.put(&quot;byte&quot;, &quot;integer&quot;);&#xD;&#xA;&#x9;&#x9;worldToDatabase.put(&quot;ubyte&quot;, &quot;integer&quot;);&#xD;&#xA;&#x9;&#x9;worldToDatabase.put(&quot;short&quot;, &quot;integer&quot;);&#xD;&#xA;&#x9;&#x9;worldToDatabase.put(&quot;ushort&quot;, &quot;integer&quot;);&#xD;&#xA;&#x9;&#x9;worldToDatabase.put(&quot;int&quot;, &quot;integer&quot;);&#xD;&#xA;&#x9;&#x9;worldToDatabase.put(&quot;uint&quot;, &quot;integer&quot;);&#xD;&#xA;&#x9;&#x9;worldToDatabase.put(&quot;long&quot;, &quot;integer&quot;);&#xD;&#xA;&#x9;&#x9;worldToDatabase.put(&quot;ulong&quot;, &quot;integer&quot;);&#xD;&#xA;&#x9;&#x9;worldToDatabase.put(&quot;float&quot;, &quot;float&quot;);&#xD;&#xA;&#x9;&#x9;worldToDatabase.put(&quot;double&quot;, &quot;double&quot;);&#xD;&#xA;&#x9;&#x9;worldToDatabase.put(&quot;boolean&quot;, &quot;boolean&quot;);&#xD;&#xA;&#x9;&#x9;worldToDatabase.put(&quot;string&quot;, &quot;string&quot;);&#xD;&#xA;&#x9;&#x9;worldToDatabase.put(&quot;acstime&quot;, &quot;integer&quot;);&#xD;&#xA;&#x9;&#x9;worldToDatabase.put(&quot;void&quot;, &quot;-none-&quot;);"/>
              </eAnnotations>
              <eParameters name="sh" eType="#//control/datamodel/meta/base/EStringArray3"/>
            </eOperations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="DepChar" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
                changeable="false" defaultValueLiteral="^"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="CelsiusToKelvin"
                eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
                changeable="false" defaultValueLiteral="CelsiusToKelvin"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="sheetNames" eType="#//control/datamodel/meta/base/ArrayList"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="colNames" eType="#//control/datamodel/meta/base/ArrayList"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="toCPP" eType="#//control/datamodel/meta/base/Hashtable"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="toIDL" eType="#//control/datamodel/meta/base/Hashtable"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="toIDLSeq" eType="#//control/datamodel/meta/base/Hashtable"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="toCORBA" eType="#//control/datamodel/meta/base/Hashtable"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="toCORBASeq" eType="#//control/datamodel/meta/base/Hashtable"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="toCORBADevIO" eType="#//control/datamodel/meta/base/Hashtable"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="toBACI" eType="#//control/datamodel/meta/base/Hashtable"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="toDatabase" eType="#//control/datamodel/meta/base/Hashtable"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="rawToCPP" eType="#//control/datamodel/meta/base/Hashtable"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="rawToByteSwapped"
                eType="#//control/datamodel/meta/base/Hashtable"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="rawBytes" eType="#//control/datamodel/meta/base/Hashtable"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="worldToCPP" eType="#//control/datamodel/meta/base/Hashtable"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="worldToIDL" eType="#//control/datamodel/meta/base/Hashtable"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="worldToIDLSeq"
                eType="#//control/datamodel/meta/base/Hashtable"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="worldToCORBA" eType="#//control/datamodel/meta/base/Hashtable"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="worldToCORBASeq"
                eType="#//control/datamodel/meta/base/Hashtable"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="worldToCORBADevIO"
                eType="#//control/datamodel/meta/base/Hashtable"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="worldToBACI" eType="#//control/datamodel/meta/base/Hashtable"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="worldToJava" eType="#//control/datamodel/meta/base/Hashtable"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="worldToDatabase"
                eType="#//control/datamodel/meta/base/Hashtable"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Util">
            <eOperations name="error">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="System.out.println(msg);&#xD;&#xA;System.exit(0);"/>
              </eAnnotations>
              <eParameters name="msg" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="RemoveLinesFromFile">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;&#x9;&#x9;java.io.PrintStream out = null;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;java.io.LineNumberReader in = null;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;String line = null;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;java.io.File file = new java.io.File (dirName,fileName);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (!file.isFile())&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;error(file.getAbsolutePath() + &quot; is not a file.&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// Open the input file.&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;in = new java.io.LineNumberReader(new java.io.FileReader(file));&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// Create the output file.&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;String newName = file.getAbsolutePath() + &quot;.tmp&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;out = new java.io.PrintStream (new java.io.FileOutputStream (new java.io.File(newName)));&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;line = in.readLine();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// Skip all blank lines at the beginning.&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;while (true) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (line != null &amp;&amp; line.trim().length() == 0)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;line = in.readLine();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;boolean blankFound = false;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;while (line != null) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (line.trim().length() == 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;blankFound = true;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (blankFound) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;blankFound = false;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (replace == 1)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;out.println();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;out.println(line);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;line = in.readLine();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// Close the input file and the output file.&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;in.close();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;out.close();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// Delete the old file and rename the new file.&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (!file.delete())&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;error(&quot;Could not delete &quot; + file.getAbsolutePath());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;java.io.File newFile = new java.io.File (newName);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;newFile.renameTo(file);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}catch (java.io.IOException err) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;error(err.toString());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}"/>
              </eAnnotations>
              <eParameters name="dirName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
              <eParameters name="fileName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
              <eParameters name="replace" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
            </eOperations>
            <eOperations name="AltName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="if (str == null || str.length() == 0)&#xD;&#xA;            return null;&#xD;&#xA;        String s = str;&#xD;&#xA;        StringBuffer x = new StringBuffer ();&#xD;&#xA;        char c = s.charAt(0);&#xD;&#xA;        x.append(Character.toUpperCase(c));&#xD;&#xA;        for (int i = 1; i &lt; s.length(); ++i) {&#xD;&#xA;            c = s.charAt(i);&#xD;&#xA;            if (c == '_') {&#xD;&#xA;                do {&#xD;&#xA;                    ++i;&#xD;&#xA;                    if (i == s.length())&#xD;&#xA;                        break;&#xD;&#xA;                    c = s.charAt(i);&#xD;&#xA;                } while (c == '_');&#xD;&#xA;                if (i == s.length())&#xD;&#xA;                    break;&#xD;&#xA;                x.append(Character.toUpperCase(c));&#xD;&#xA;            } else {&#xD;&#xA;                x.append(Character.toLowerCase(c));&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        return x.toString();"/>
              </eAnnotations>
              <eParameters name="str" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="formatDescriptionBase" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="if (s == null)&#xD;&#xA;            return &quot;&quot;;&#xD;&#xA;        String raw = decodeHTMLChars(s);&#xD;&#xA;        StringBuffer extract = new StringBuffer ();&#xD;&#xA;        int begin = 0;&#xD;&#xA;        int current = 0;&#xD;&#xA;        int len = raw.length();&#xD;&#xA;        char c = 0;&#xD;&#xA;        while (current &lt; len) {&#xD;&#xA;            c = raw.charAt(current);&#xD;&#xA;            if (c == '&amp;' &amp;&amp; (current + 4) &lt;= len &amp;&amp; raw.charAt(current + 1) == '#' &amp;&amp;&#xD;&#xA;                        raw.charAt(current + 2) == '1' &amp;&amp; raw.charAt(current + 3) == '0' &amp;&amp;&#xD;&#xA;                        raw.charAt(current + 4) == ';') {&#xD;&#xA;                c = ' ';&#xD;&#xA;                current += 4;&#xD;&#xA;            }&#xD;&#xA;            extract.append(c);&#xD;&#xA;            if ((current - begin) > maxLength &amp;&amp; c == ' ') {&#xD;&#xA;                extract.append(newline);&#xD;&#xA;                extract.append(prefix);&#xD;&#xA;                begin = current + 1;&#xD;&#xA;            }&#xD;&#xA;            ++current;&#xD;&#xA;        }&#xD;&#xA;        return extract.toString();"/>
              </eAnnotations>
              <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
              <eParameters name="prefix" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="formatDescription" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return formatDescriptionBase(s,&quot;&quot;);"/>
              </eAnnotations>
              <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="formatDescriptionL1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return formatDescriptionBase(s,&quot;/// &quot;);"/>
              </eAnnotations>
              <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="formatDescriptionL2" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return formatDescriptionBase(s,&quot;    /// &quot;);"/>
              </eAnnotations>
              <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="formatDescriptionL4" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return formatDescriptionBase(s,&quot;/// &quot;);"/>
              </eAnnotations>
              <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="formatDescriptionL5" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return formatDescriptionBase(s,&quot;    /// &quot;);"/>
              </eAnnotations>
              <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="descriptionAsString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="if (s == null)&#xD;&#xA;            return &quot;&quot;;&#xD;&#xA;        String raw = decodeHTMLChars(s);&#xD;&#xA;        StringBuffer extract = new StringBuffer ();&#xD;&#xA;        int current = 0;&#xD;&#xA;        int len = raw.length();&#xD;&#xA;        char c = 0;&#xD;&#xA;        while (current &lt; len) {&#xD;&#xA;            c = raw.charAt(current);&#xD;&#xA;            if (c == '&amp;' &amp;&amp; (current + 4) &lt;= len &amp;&amp; raw.charAt(current + 1) == '#' &amp;&amp;&#xD;&#xA;                        raw.charAt(current + 2) == '1' &amp;&amp; raw.charAt(current + 3) == '0' &amp;&amp;&#xD;&#xA;                        raw.charAt(current + 4) == ';') {&#xD;&#xA;                c = ' ';&#xD;&#xA;                current += 4;&#xD;&#xA;            }&#xD;&#xA;            extract.append(c);&#xD;&#xA;            ++current;&#xD;&#xA;        }&#xD;&#xA;        return extract.toString();"/>
              </eAnnotations>
              <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="decodeHTMLChars" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value=" if (s == null || s.length() == 0)&#xD;&#xA;            return s;&#xD;&#xA;        StringBuffer x = new StringBuffer();&#xD;&#xA;        int index = 0;&#xD;&#xA;        int index1 = 0;&#xD;&#xA;        int index2 = 0;&#xD;&#xA;        int index3 = 0;&#xD;&#xA;        int index4 = 0;&#xD;&#xA;        int current = 0;&#xD;&#xA;        while (true) {&#xD;&#xA;            // look for any HTML encoded character&#xD;&#xA;            index1 = s.indexOf(&quot;&amp;lt;&quot;, current);&#xD;&#xA;            index2 = s.indexOf(&quot;&amp;gt;&quot;, current);&#xD;&#xA;            index3 = s.indexOf(&quot;&amp;amp;&quot;, current);&#xD;&#xA;            index4 = s.indexOf(&quot;&amp;#xd;&quot;, current);&#xD;&#xA;            // if there aren't any, we're done&#xD;&#xA;            if (index1 == -1 &amp;&amp; index2 == -1 &amp;&amp; index3 == -1 &amp;&amp; index4 == -1) {&#xD;&#xA;                x.append(s.substring(current));&#xD;&#xA;                break;&#xD;&#xA;            }&#xD;&#xA;            // set index to the least value that is not -1&#xD;&#xA;            index = index1;&#xD;&#xA;            if (index == -1 || (index2 != -1 &amp;&amp; index2 &lt; index))&#xD;&#xA;                index = index2;&#xD;&#xA;            if (index == -1 || (index3 != -1 &amp;&amp; index3 &lt; index))&#xD;&#xA;                index = index3;&#xD;&#xA;            if (index == -1 || (index4 != -1 &amp;&amp; index4 &lt; index))&#xD;&#xA;                index = index4;&#xD;&#xA;            // append the current text up to index&#xD;&#xA;            x.append(s.substring(current,index));&#xD;&#xA;            // append the correct character and skip over the HTML encoded characters&#xD;&#xA;            if (index == index1) {&#xD;&#xA;                x.append('&lt;');&#xD;&#xA;                current = index + 4;&#xD;&#xA;            } else if (index == index2) {&#xD;&#xA;                x.append('>');&#xD;&#xA;                current = index + 4;&#xD;&#xA;            } else if (index == index3) {&#xD;&#xA;                x.append('&amp;');&#xD;&#xA;                current = index + 5;&#xD;&#xA;            } else if (index == index4) {&#xD;&#xA;                x.append('\n');&#xD;&#xA;                current = index + 5;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        return new String (x);"/>
              </eAnnotations>
              <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="isArray" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return s.endsWith(&quot;]&quot;) ? true : false;"/>
              </eAnnotations>
              <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="NumberRawDataTypeBytes" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return (String)tables.getRawBytes().get(s);"/>
              </eAnnotations>
              <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="RawDataTypeTotalBytes" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;if (isArray(s)) {&#xA;&#x9;&#x9;&#x9;int b;&#xA;&#x9;&#x9;&#x9;int n = Integer.parseInt(NumberOfItems(s));&#xA;&#x9;&#x9;&#x9;if(s.startsWith(&quot;&amp;lt;&quot;))&#xA;&#x9;&#x9;&#x9;&#x9;return &quot;0&quot;;&#xA;&#x9;&#x9;&#x9;if(s.startsWith(&quot;[&quot;))&#xA;&#x9;&#x9;&#x9;&#x9;return &quot;0&quot;;&#xA;&#x9;&#x9;&#x9;int i = s.indexOf(&quot;[&quot;);&#xA;&#x9;&#x9;&#x9;String aux = (String) tables.getRawBytes().get(s.substring(0, i));&#xA;&#x9;&#x9;&#x9;b = Integer.parseInt(aux);&#xA;&#xA;&#x9;&#x9;&#x9;String x = Integer.toString(n * b);&#xA;&#x9;&#x9;&#x9;return x;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return (String)tables.getRawBytes().get(s);"/>
              </eAnnotations>
              <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="NumberOfItems" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;if (s.startsWith(&quot;&amp;lt;&quot;))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;1&quot;;&#xD;&#xA;&#x9;&#x9;if (!isArray(s))&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;1&quot;;&#xD;&#xA;&#x9;&#x9;int i = s.indexOf(&quot;[&quot;);&#xD;&#xA;&#x9;&#x9;if (i == -1)&#xD;&#xA;&#x9;&#x9;&#x9;throw new RuntimeException(&quot;Invalid syntax in array notation: (&quot; + s + &quot;)&quot;);&#xD;&#xA;&#x9;&#x9;String x = s.substring(i + 1, s.length() - 1);&#xD;&#xA;&#x9;&#x9;try {&#xD;&#xA;&#x9;&#x9;&#x9;int n = Integer.parseInt(x);&#xD;&#xA;&#x9;&#x9;} catch (NumberFormatException err) {&#xD;&#xA;&#x9;&#x9;&#x9;throw new RuntimeException(&quot;Invalid syntax in array notation: (&quot; + s + &quot;)&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;return x;"/>
              </eAnnotations>
              <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="getRawDataTypeIndex" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;if (s.startsWith(&quot;&amp;lt;&quot;))&#xD;&#xA;&#x9;&#x9;&#x9;return 0;&#xD;&#xA;&#x9;&#x9;if (s.startsWith(&quot;[&quot;))&#xD;&#xA;&#x9;&#x9;&#x9;return 0; // This isn't really true, but it will pass the validation.&#xD;&#xA;&#x9;&#x9;String x = s;&#xD;&#xA;&#x9;&#x9;if (isArray(s)) {&#xD;&#xA;&#x9;&#x9;&#x9;int i = s.indexOf(&quot;[&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;if (i == -1)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;throw new RuntimeException(&quot;Invalid syntax in array notation: (&quot; + s + &quot;)&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;x = s.substring(0, i);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;return 0;&#xD;&#xA;"/>
              </eAnnotations>
              <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="toArrayTime" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;    &#x9;//The required string date form is &quot;YYYY-MM-DDThh:mm:ss.ssss&quot;.&#xD;&#xA;&#x9;&#x9;    &#x9;alma.hla.runtime.asdm.types.ArrayTime t = new alma.hla.runtime.asdm.types.ArrayTime (&quot;20&quot; + parseDateString(s,true) + &quot;T00:00:00.0&quot;);&#xD;&#xA;&#x9;&#x9;    &#x9;long l = t.get();&#xD;&#xA;&#x9;&#x9;    &#x9;return Long.toString(l);"/>
              </eAnnotations>
              <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="toDatabaseDate" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return parseDateString(s,false);"/>
              </eAnnotations>
              <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="parseDateString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;int pos = 0;&#xD;&#xA;&#x9;&#x9;int n = s.indexOf('-'); &#x9;if (n == -1) return null;&#xD;&#xA;&#x9;&#x9;String yy = s.substring(pos,n);&#xD;&#xA;&#x9;&#x9;if (yy.startsWith(&quot;20&quot;))&#xD;&#xA;&#x9;&#x9;&#x9;yy = yy.substring(2);&#xD;&#xA;&#x9;&#x9;pos = n + 1;&#xD;&#xA;&#x9;&#x9;n = s.indexOf('-',pos); &#x9;if (n == -1) return null;&#xD;&#xA;&#x9;&#x9;String mm = s.substring(pos,n);&#xD;&#xA;&#x9;&#x9;int nmm = 0;&#xD;&#xA;&#x9;&#x9;try {&#xD;&#xA;&#x9;&#x9;&#x9;nmm = Integer.parseInt(mm);&#xD;&#xA;&#x9;&#x9;} catch (NumberFormatException err) {&#xD;&#xA;&#x9;&#x9;&#x9;return null;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;if (nmm &lt; 1 || nmm > 12) return null;&#xD;&#xA;&#x9;&#x9;pos = n + 1;&#xD;&#xA;&#x9;&#x9;n = s.indexOf('T',pos); &#x9;if (n == -1) return null;&#xD;&#xA;&#x9;&#x9;String dd = s.substring(pos,n);&#xD;&#xA;&#x9;&#x9;return yy + '-' + (alt ? montHalt[nmm - 1] : month[nmm - 1]) + '-' + dd;"/>
              </eAnnotations>
              <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
              <eParameters name="alt" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
            </eOperations>
            <eOperations name="normalizeNumber" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value=" if (wdt.equals(&quot;boolean&quot;))&#xD;&#xA;&#x9;&#x9;   return normalizeBoolean(value);&#xD;&#xA;&#x9;   else if (wdt.equals(&quot;double&quot;) || wdt.equals(&quot;float&quot;))&#xD;&#xA;&#x9;&#x9;   return normalizeFloat(value);&#xD;&#xA;&#x9;   else&#xD;&#xA;&#x9;&#x9;   return value;"/>
              </eAnnotations>
              <eParameters name="wdt" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
              <eParameters name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="normalizeFloat" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;   try {&#xD;&#xA;          // Does value contain a valid &quot;double&quot; or &quot;float&quot;?&#xD;&#xA;&#x9;&#x9;  Double.parseDouble(value);&#xD;&#xA;          // Does value contain a decimal point?&#xD;&#xA;          if (-1 == value.indexOf('.')) {&#xD;&#xA;        &#x9;  // No decimal point found.&#xD;&#xA;&#x9;&#x9;      // Does value contain an exponent?&#xD;&#xA;&#x9;&#x9;      int i = value.indexOf('E');&#xD;&#xA;&#x9;&#x9;      if (-1 != i) {&#xD;&#xA;&#x9;&#x9;&#x9;      // Insert the &quot;.0&quot; before the &quot;E&quot;.&#xD;&#xA;&#x9;&#x9;&#x9;      String parts[] = value.split(&quot;E&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;      return parts[0] + &quot;.0E&quot; + parts[1];&#xD;&#xA;&#x9;&#x9;       } else {&#xD;&#xA;&#x9;&#x9;    &#x9;   // No exponent found.&#xD;&#xA;&#x9;&#x9;&#x9;       // Append the &quot;.0&quot; to the end.&#xD;&#xA;                   return value + &quot;.0&quot;;&#xD;&#xA;&#x9;&#x9;       }&#xD;&#xA;&#x9;       } else {&#xD;&#xA;&#x9;    &#x9;   // value contains a decimal point.  Return it without changes.  &#xD;&#xA;&#x9;           return value;&#xD;&#xA;&#x9;       }&#xD;&#xA;       } catch (NumberFormatException de) {&#xD;&#xA;           try {&#xD;&#xA;               // Does this contain a valid &quot;integer&quot; or &quot;long&quot;?&#xD;&#xA;        &#x9;   Integer.parseInt(value);&#xD;&#xA;        &#x9;   // Add the missing decimal point and trailing &quot;0&quot;.&#xD;&#xA;        &#x9;   return value + &quot;.0&quot;;&#xD;&#xA;       &#x9;   } catch (NumberFormatException ie) {&#xD;&#xA;       &#x9;&#x9;   // This is not a number.&#xD;&#xA;       &#x9;&#x9;   // Return it as is.&#xD;&#xA;       &#x9;&#x9;   return value;&#xD;&#xA;       &#x9;   }&#xD;&#xA;       }"/>
              </eAnnotations>
              <eParameters name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="normalizeBoolean" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;   int indexOfDot = value.indexOf('.');&#xD;&#xA;&#x9;   if (-1 == indexOfDot) {&#xD;&#xA;&#x9;&#x9;   return value;&#xD;&#xA;&#x9;   } else {&#xD;&#xA;&#x9;&#x9;   return value.substring(0,indexOfDot);&#xD;&#xA;&#x9;   }"/>
              </eAnnotations>
              <eParameters name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="getInstallDir" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;String dirLocation = null;&#xD;&#xA;&#x9;&#x9;String acsroot = System.getenv(&quot;ACSROOT&quot;);&#xD;&#xA;&#x9;&#x9;String intlist = System.getenv(&quot;INTLIST&quot;);&#xD;&#xA;&#x9;&#x9;String introot = System.getenv(&quot;INTROOT&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;if (acsroot != null &amp;&amp; new java.io.File(acsroot + &quot;/lib/ControlGenHwDevicev2&quot;).exists()) {&#xD;&#xA;&#x9;&#x9;&#x9;dirLocation = acsroot + &quot;/lib/ControlGenHwDevicev2&quot;;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;if (intlist != null ) {&#xD;&#xA;&#x9;&#x9;&#x9;String dirs[] = intlist.split(&quot;:&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;for (int i = 0; i &lt; dirs.length; i++) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (new java.io.File(dirs[i] + &quot;/lib/ControlGenHwDevicev2&quot;).exists()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;dirLocation = dirs[i] + &quot;/lib/ControlGenHwDevicev2&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;if (introot != null &amp;&amp; new java.io.File(introot + &quot;/lib/ControlGenHwDevicev2&quot;).exists()) {&#xD;&#xA;&#x9;&#x9;&#x9;dirLocation = introot + &quot;/lib/ControlGenHwDevicev2&quot;;&#xD;&#xA;&#x9;&#x9;}  &#xD;&#xA;&#xD;&#xA;&#x9;&#x9;assert dirLocation != null : &quot;dirLocation is null, this means that I cannot find lib/ControlGenHwDevicev2&quot;;&#xD;&#xA;&#x9;&#x9;return dirLocation;"/>
              </eAnnotations>
            </eOperations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="newline" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="maxLength" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
                defaultValueLiteral="54"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="MONTH" eType="#//control/datamodel/meta/base/EStringArray"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="MONTHalt" eType="#//control/datamodel/meta/base/EStringArray"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="tables" eType="#//control/datamodel/meta/base/Table"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EDataType" name="ArrayList" instanceClassName="java.util.ArrayList"/>
          <eClassifiers xsi:type="ecore:EDataType" name="Hashtable" instanceClassName="java.util.Hashtable"/>
          <eClassifiers xsi:type="ecore:EDataType" name="SimpleErrorHandlerDT" instanceClassName="alma.control.datamodel.meta.base.SimpleErrorHandler"/>
          <eClassifiers xsi:type="ecore:EDataType" name="RuntimeExceptionDT" instanceClassName="java.lang.RuntimeException"/>
          <eClassifiers xsi:type="ecore:EDataType" name="ErrorHandlerDT" instanceClassName="org.xml.sax.ErrorHandler"/>
          <eClassifiers xsi:type="ecore:EDataType" name="EObjectDT" instanceClassName="org.eclipse.emf.ecore.EObject"/>
          <eClassifiers xsi:type="ecore:EDataType" name="SAXParseExceptionDT" instanceClassName="org.xml.sax.SAXParseException"/>
          <eClassifiers xsi:type="ecore:EDataType" name="EStringArray" instanceClassName="java.lang.String[]"/>
          <eClassifiers xsi:type="ecore:EDataType" name="EStringArray2" instanceClassName="java.lang.String[][]"/>
          <eClassifiers xsi:type="ecore:EDataType" name="EStringArray3" instanceClassName="java.lang.String[][][]"/>
          <eClassifiers xsi:type="ecore:EClass" name="ErrorHandlerAuxClass" instanceClassName="org.xml.sax.ErrorHandler"
              abstract="true" interface="true"/>
        </eSubpackages>
        <eSubpackages name="eth" nsURI="http://alma/Control/datamodel/meta/eth/1.0"
            nsPrefix="alma.Control.datamodel.meta.eth">
          <eClassifiers xsi:type="ecore:EClass" name="Archive" eSuperTypes="#//control/datamodel/meta/base/ArchiveProperty">
            <eOperations name="setArchiveEth">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="this.tables = tables;&#xA;setArchiveProperty(row, tables);"/>
              </eAnnotations>
              <eParameters name="row" eType="#//control/datamodel/meta/base/EStringArray"/>
              <eParameters name="tables" eType="#//control/datamodel/meta/base/Table"/>
            </eOperations>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Control" eSuperTypes="#//control/datamodel/meta/base/ControlPoint">
            <eOperations name="setAssemblyName">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="mac.setAssemblyName(assembly);"/>
              </eAnnotations>
              <eParameters name="assembly" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="Assembly" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.Assembly();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Address" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.Address();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsEnumAddress" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;try{&#xD;&#xA;&#x9;&#x9;&#x9;Integer.decode(mac.Address());&#xD;&#xA;&#x9;&#x9;}catch(Exception e){&#xD;&#xA;&#x9;&#x9;&#x9;return true;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return false;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DataType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.DataType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsDataArray" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.IsDataArray();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsOpenArray" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.IsOpenArray();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="getArrayLength" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.getArrayLength();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DataToIDLType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.DataToIDLType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DataToIDLSeqType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.DataToIDLSeqType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DataToCPPType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.DataToCPPType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DataToCORBAType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.DataToCORBAType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DataToCORBADevIOType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.DataToCORBADevIOType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DataToCORBASeqType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.DataToCORBASeqType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DataToBACIType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.DataToBACIType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DataToDatabaseType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.DataToDatabaseType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="setControlEth">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="this.tables = tables;&#xA;this.utils = utils;"/>
              </eAnnotations>
              <eParameters name="tables" eType="#//control/datamodel/meta/base/Table"/>
              <eParameters name="utils" eType="#//control/datamodel/meta/base/Util"/>
            </eOperations>
            <eOperations name="setControlEth">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="this.parent = parent;&#xA;setControlPoint(row, parent);&#xA;mac = EthFactory.eINSTANCE.createMandC();&#xA;mac.setMandCEth(row, sheet);"/>
              </eAnnotations>
              <eParameters name="row" eType="#//control/datamodel/meta/base/EStringArray"/>
              <eParameters name="parent" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EObject"/>
            </eOperations>
            <eStructuralFeatures xsi:type="ecore:EReference" name="mac" eType="#//control/datamodel/meta/eth/MandC"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="DeviceModel" eSuperTypes="#//control/datamodel/meta/base/DeviceModel">
            <eOperations name="CreateModel" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return &quot;&quot;;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="VendorClass" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return ((MainImpl)main).VendorClass();"/>
              </eAnnotations>
            </eOperations>
            <eStructuralFeatures xsi:type="ecore:EReference" name="mainEth" eType="#//control/datamodel/meta/eth/Main"
                containment="true"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="cPoints" upperBound="-1"
                eType="#//control/datamodel/meta/eth/Control" containment="true"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="aPoints" upperBound="-1"
                eType="#//control/datamodel/meta/eth/Archive" containment="true"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="mPoints" upperBound="-1"
                eType="#//control/datamodel/meta/eth/Monitor" containment="true"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="note" eType="#//control/datamodel/meta/base/Note"
                containment="true"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Main" eSuperTypes="#//control/datamodel/meta/base/MainBase">
            <eOperations name="VendorClass" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Vendor Class&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="setMainEth">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="this.row = row;&#xA;super.setMainBase(row);"/>
              </eAnnotations>
              <eParameters name="row" eType="#//control/datamodel/meta/base/EStringArray"/>
            </eOperations>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="MandC">
            <eOperations name="setAssemblyName">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="this.assembly = assembly;"/>
              </eAnnotations>
              <eParameters name="assembly" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="Assembly" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return assembly;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Address" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Address&quot;)];"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DataType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="String s = row[tables.getColNum(sheet, &quot;Data Type&quot;)];&#xA;return IsDataArray() ? s.substring(0,s.indexOf(&quot;[&quot;)) : s;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsDataArray" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return row[tables.getColNum(sheet, &quot;Data Type&quot;)].endsWith(&quot;]&quot;) ? true : false;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsOpenArray" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="if(!IsDataArray()) return false;&#xA;String s =  row[tables.getColNum(sheet, &quot;Data Type&quot;)];&#xA;return (s.indexOf(&quot;]&quot;) - s.indexOf(&quot;[&quot;) == 1) ? true : false;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="getArrayLength" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="if(!IsDataArray()) return &quot;1&quot;;&#xA;String s = row[tables.getColNum(sheet, &quot;Data Type&quot;)];&#xA;return s.substring(s.indexOf(&quot;[&quot;)+1,s.indexOf(&quot;]&quot;));"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DataToCPPType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return (String)tables.getToCPP().get(DataType());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DataToIDLType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return (String)tables.getToIDL().get(DataType());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DataToIDLSeqType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return (String)tables.getToIDLSeq().get(DataType());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DataToCORBAType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return (String)tables.getToCORBA().get(DataType());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DataToCORBADevIOType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return (String)tables.getToCORBADevIO().get(DataType());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DataToCORBASeqType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return (String)tables.getToCORBASeq().get(DataType());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DataToBACIType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return (String)tables.getToBACI().get(DataType());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DataToDatabaseType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return (String)tables.getToDatabase().get(DataType());"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="setMandCEth">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="this.tables = tables;&#xA;this.utils = utils;"/>
              </eAnnotations>
              <eParameters name="tables" eType="#//control/datamodel/meta/base/Table"/>
              <eParameters name="utils" eType="#//control/datamodel/meta/base/Util"/>
            </eOperations>
            <eOperations name="setMandCEth">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="this.row = row;&#xA;this.sheet = sheet;"/>
              </eAnnotations>
              <eParameters name="row" eType="#//control/datamodel/meta/base/EStringArray"/>
              <eParameters name="sheet" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
            </eOperations>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="row" eType="#//control/datamodel/meta/base/EStringArray"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="sheet" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="assembly" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="tables" eType="#//control/datamodel/meta/base/Table"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="utils" eType="#//control/datamodel/meta/base/Util"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Monitor" eSuperTypes="#//control/datamodel/meta/base/MonitorPoint">
            <eOperations name="setAssemblyName">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="mac.setAssemblyName(assembly);"/>
              </eAnnotations>
              <eParameters name="assembly" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            </eOperations>
            <eOperations name="Assembly" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.Assembly();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="Address" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.Address();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsEnumAddress" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#x9;&#x9;try{&#xD;&#xA;&#x9;&#x9;&#x9;Integer.decode(mac.Address());&#xD;&#xA;&#x9;&#x9;}catch(Exception e){&#xD;&#xA;&#x9;&#x9;&#x9;return true;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;return false;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DataType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.DataType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsDataArray" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.IsDataArray();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsOpenArray" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.IsOpenArray();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="getArrayLength" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.getArrayLength();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DataToIDLType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.DataToIDLType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DataToIDLSeqType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.DataToIDLSeqType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DataToCPPType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.DataToCPPType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DataToCORBAType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.DataToCORBAType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DataToCORBADevIOType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.DataToCORBADevIOType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DataToCORBASeqType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.DataToCORBASeqType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DataToBACIType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.DataToBACIType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsArchived" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="&#xD;&#xA;&#x9;&#x9;if (DataType().equals(&quot;uint&quot;))&#xD;&#xA;&#x9;&#x9;&#x9;return false;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;if ( DataType().equals(&quot;bool&quot;) || DataType().equals(&quot;boolean&quot;)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;|| DataType().equals(&quot;string&quot;)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;|| (DataType().equals(&quot;double&quot;) &amp;&amp; IsDataArray())&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;|| (DataType().equals(&quot;int&quot;) &amp;&amp; IsDataArray()) )&#xD;&#xA;&#x9;&#x9;&#x9;return false;&#xD;&#xA;&#x9;&#x9;return true;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="DataToDatabaseType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return mac.DataToDatabaseType();"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsPartOfPattern" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return false;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsHomogeneous" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return true;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="IsPartOfHomogeneous" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="return false;"/>
              </eAnnotations>
            </eOperations>
            <eOperations name="setMonitorEth">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="this.tables = tables;&#xA;this.utils = utils;"/>
              </eAnnotations>
              <eParameters name="tables" eType="#//control/datamodel/meta/base/Table"/>
              <eParameters name="utils" eType="#//control/datamodel/meta/base/Util"/>
            </eOperations>
            <eOperations name="setMonitorEth">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="body" value="this.row = row;&#xA;this.parent = parent;&#xA;setMonitorPoint(row, parent);&#xA;mac = EthFactory.eINSTANCE.createMandC();&#xA;mac.setMandCEth(tables, utils);&#xA;mac.setMandCEth(row, sheet);"/>
              </eAnnotations>
              <eParameters name="row" eType="#//control/datamodel/meta/base/EStringArray"/>
              <eParameters name="parent" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EObject"/>
            </eOperations>
            <eStructuralFeatures xsi:type="ecore:EReference" name="mac" eType="#//control/datamodel/meta/eth/MandC"/>
          </eClassifiers>
        </eSubpackages>
      </eSubpackages>
    </eSubpackages>
  </eSubpackages>
</ecore:EPackage>
