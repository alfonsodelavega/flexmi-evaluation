<?nsuri http://www.eclipse.org/emf/2002/Ecore?>
<?import http://www.eclipse.org/emf/2002/Ecore?>
<package name="TaxCard" nsURI="http:///TaxCard.ecore" nsPrefix="TaxCard">
	<EAnnotation source="http://www.eclipse.org/OCL/Import">
		<EStringToStringMapEntry key="ecore" value="http://www.eclipse.org/emf/2002/Ecore"/>
	</EAnnotation>
	<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore">
		<EStringToStringMapEntry key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
		<EStringToStringMapEntry key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
		<EStringToStringMapEntry key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
	</EAnnotation>
	<EEnum name="Grantor">
		<EEnumLiteral name="ACD"/>
		<EEnumLiteral name="Employer" value="1"/>
		<EEnumLiteral name="CNPF" value="2"/>
		<EEnumLiteral name="CEDIES" value="3"/>
		<EEnumLiteral name="SNJ" value="4"/>
		<EEnumLiteral name="CNAP" value="5"/>
	</EEnum>
	<class name="Constants" abstract="true">
		<attr name="MAXIMUM_CE_RATE_FOR_CHILD_NOT_BEING_PART_OF_HOUSEHOLD" lowerBound="1" defaultValueLiteral="3480" type="//EDouble"/>
		<attr name="MAXIMUM_CE_RATE_FOR_HOUSE_CARE_AND_CHILD_PART_OF_THE_HOUSEHOLD_CARE" lowerBound="1" defaultValueLiteral="3600" type="//EDouble"/>
		<attr name="MINIMUM_SALARY" lowerBound="1" defaultValueLiteral="1500" type="//EDouble"/>
		<attr name="FLAT_RATE_FOR_EXTRA_PROFESSIONAL_DEDUCTION" lowerBound="1" defaultValueLiteral="4500" type="//EDouble"/>
		<attr name="MAXIMUM_DEDUCTIBLE_PERCENTAGE_FOR_DONATIONS" lowerBound="1" defaultValueLiteral="20" type="//EDouble"/>
		<attr name="MINIMUM_DEDUCTIBLE_AMOUNT_FOR_DONATIONS" lowerBound="1" defaultValueLiteral="120" type="//EDouble"/>
		<attr name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANC" lowerBound="1" defaultValueLiteral="0" type="//EDouble"/>
		<attr name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ALIMONY_EXPENSE" lowerBound="1" defaultValueLiteral="24000" type="//EDouble"/>
		<attr name="MAXIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" lowerBound="1" defaultValueLiteral="99" type="//EDouble"/>
		<attr name="MAXIMAL_FLAT_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" lowerBound="1" defaultValueLiteral="30" type="//EDouble"/>
		<attr name="MINIMAL_DISTANCE_FOR_TRAVEL_EXPENSE_DEDUCTION" lowerBound="1" defaultValueLiteral="4" type="//EDouble"/>
		<attr name="FLAT_RATE_CIM_DAILY" lowerBound="1" defaultValueLiteral="2" type="//EDouble"/>
		<attr name="FLAT_RATE_CIM_MONTHLY" lowerBound="1" defaultValueLiteral="62" type="//EDouble"/>
		<attr name="FLAT_RATE_CIM_YEARLY" lowerBound="1" defaultValueLiteral="750" type="//EDouble"/>
		<attr name="FLAT_RATE_CIP_DAILY" lowerBound="1" defaultValueLiteral="1" type="//EDouble"/>
		<attr name="FLAT_RATE_CIP_MONTHLY" lowerBound="1" defaultValueLiteral="25" type="//EDouble"/>
		<attr name="FLAT_RATE_CIP_YEARLY" lowerBound="1" defaultValueLiteral="30" type="//EDouble"/>
		<attr name="FLAT_RATE_CIS_DAILY" lowerBound="1" defaultValueLiteral="1" type="//EDouble"/>
		<attr name="FLAT_RATE_CIS_MONTHLY" lowerBound="1" defaultValueLiteral="25" type="//EDouble"/>
		<attr name="FLAT_RATE_CIS_YEARLY" lowerBound="1" defaultValueLiteral="300" type="//EDouble"/>
		<attr name="FLAT_RATE_FOR_TRAVEL_EXPENSE_PER_UNIT" lowerBound="1" defaultValueLiteral="99" type="//EDouble"/>
		<attr name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_DS" lowerBound="1" type="//EDouble"/>
		<attr name="FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE" lowerBound="1" type="//EDouble"/>
		<attr name="DISABILITY_FLAT_RATE_FOR_MISCELLANEOUS_EXPENSE" lowerBound="1" type="//EDouble"/>
		<attr name="MAXIMUM_DEDUCTIBLE_AMOUNT_FOR_ADDITIONAL_PENSION_AND_INSURANCE" lowerBound="1" type="//EDouble"/>
	</class>
	<EEnum name="Country">
		<EEnumLiteral name="LU"/>
		<EEnumLiteral name="FR" value="1"/>
		<EEnumLiteral name="BE" value="2"/>
		<EEnumLiteral name="DE" value="3"/>
		<EEnumLiteral name="NL" value="4"/>
		<EEnumLiteral name="OTHER" value="5"/>
	</EEnum>
	<EEnum name="Disability_Types">
		<EEnumLiteral name="NONE"/>
		<EEnumLiteral name="A" value="1"/>
		<EEnumLiteral name="B" value="2"/>
		<EEnumLiteral name="C" value="3"/>
		<EEnumLiteral name="D" value="4"/>
		<EEnumLiteral name="E" value="5"/>
		<EEnumLiteral name="OTHER" value="6"/>
		<EEnumLiteral name="beug"/>
	</EEnum>
	<EEnum name="Separation_Causes">
		<EEnumLiteral name="NONE"/>
		<EEnumLiteral name="DIVORCE" value="1"/>
		<EEnumLiteral name="SEPARATION_DE_FAIT" value="2"/>
		<EEnumLiteral name="SEPARATION_BY_COURT" value="3"/>
	</EEnum>
	<EEnum name="Tax_Card_Type">
		<EEnumLiteral name="Principal"/>
		<EEnumLiteral name="Additional" value="1"/>
	</EEnum>
	<EEnum name="Tax_Office">
		<EEnumLiteral name="RTS_2"/>
		<EEnumLiteral name="RTS_3" value="1"/>
		<EEnumLiteral name="RTS_Esch" value="2"/>
		<EEnumLiteral name="RTS_Ettelbruck" value="3"/>
	</EEnum>
	<EEnum name="Tax_Class_Category">
		<EEnumLiteral name="One"/>
		<EEnumLiteral name="One_A" value="1"/>
		<EEnumLiteral name="Two" value="2"/>
	</EEnum>
	<EEnum name="Job_Activity">
		<EEnumLiteral name="Salary"/>
		<EEnumLiteral name="Pension" value="1"/>
		<EEnumLiteral name="Annuity" value="2"/>
	</EEnum>
	<EEnum name="Town">
		<EEnumLiteral name="Luxembourg_city"/>
		<EEnumLiteral name="Bertrange" value="1"/>
		<EEnumLiteral name="Strassen" value="2"/>
		<EEnumLiteral name="Bettembourg" value="3"/>
		<EEnumLiteral name="Beaufort" value="4"/>
	</EEnum>
	<EEnum name="Type_of_Rate">
		<EEnumLiteral name="REGULAR"/>
		<EEnumLiteral name="REAL_COST" value="1"/>
	</EEnum>
	<EEnum name="CE_Type">
		<EEnumLiteral name="INALIDITY_AND_INFIRMITY"/>
		<EEnumLiteral name="DEPENDENCE_AND_CARE_EXCLUDING_CHLIDREN_NOT_PART_OF_HOUSEHOLD" value="1"/>
		<EEnumLiteral name="CARE_FOR_CHILDREN_NOT_BEING_PART_OF_HOUSEHOLD" value="2"/>
	</EEnum>
	<EEnum name="Expense_Purpose">
		<EEnumLiteral name="HOUSE_CARE"/>
		<EEnumLiteral name="CHILD_CARE" value="1"/>
		<EEnumLiteral name="DEPENDENCE_CARE" value="2"/>
		<EEnumLiteral name="ALIMONY" value="4"/>
		<EEnumLiteral name="RECURRENT_DEPT" value="5"/>
		<EEnumLiteral name="OTHER" value="3"/>
	</EEnum>
	<EEnum name="Dependent_Type">
		<EEnumLiteral name="CHILD"/>
		<EEnumLiteral name="SPOUSE" value="1"/>
		<EEnumLiteral name="RELATIVE" value="2"/>
		<EEnumLiteral name="OTHER_FAMILY_MEMBER" value="3"/>
		<EEnumLiteral name="NOT_OWN_CHILD" value="4"/>
	</EEnum>
	<class name="Income_Tax">
		<ref name="taxPayer" lowerBound="1" type="Tax_Payer"/>
		<attr name="tax_amount" lowerBound="1" type="//EDouble"/>
		<attr name="tax_year" lowerBound="1" type="//EInt"/>
	</class>
	<class name="FromAgent">
		<attr name="taxation_year" lowerBound="1" type="//EInt"/>
		<attr name="is_dependent_eligible_for_CE_Not_In_Houshold_Children_Care" lowerBound="1" type="//EBoolean"/>
		<attr name="is_eligible_debt" lowerBound="1" type="//EBoolean"/>
		<ref name="taxPayer" type="Tax_Payer"/>
		<ref name="expense" type="Expense"/>
		<ref name="dependent" type="Dependent"/>
	</class>
	<class name="FromLaw">
		<EOperation name="get_A_for_salary_class_1" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="if(revenu<= 1020) then 0
				else if(revenu <= 1180) then 0.08
				else if(revenu <= 1340) then 0.1
				else if(revenu <= 1500) then 0.12
				else if(revenu <= 1655) then 0.14
				else if(revenu <= 1815) then 0.16
				else if(revenu <= 1975) then 0.18
				else if(revenu <= 2135) then 0.2
				else if(revenu <= 2295) then 0.22
				else if(revenu <= 2450) then 0.24
				else if(revenu <= 2610) then 0.26
				else if(revenu <= 2770) then 0.28
				else if(revenu <= 2930) then 0.3
				else if(revenu <= 3090) then 0.32
				else if(revenu <= 3245) then 0.34
				else if(revenu <= 3405) then 0.36
				else if(revenu <= 3565) then 0.38
				else if(revenu <= 8415) then 0.39
				else 0.4
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="revenu" lowerBound="1" type="EBigDecimal"/>
		</EOperation>
		<EOperation name="get_B_for_salary_class_1" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="if(revenu<= 1020) then 0
				else if(revenu <= 1180) then 81.9
				else if(revenu <= 1340) then 105.555
				else if(revenu <= 1500) then 132.39000
				else if(revenu <= 1655) then 162.405
				else if(revenu <= 1815) then 195.6
				else if(revenu <= 1975) then 231.975
				else if(revenu <= 2135) then 271.53
				else if(revenu <= 2295) then 314.265
				else if(revenu <= 2450) then 360.18
				else if(revenu <= 2610) then 409.275
				else if(revenu <= 2770) then 461.55
				else if(revenu <= 2930) then 517.005
				else if(revenu <= 3090) then 575.64
				else if(revenu <= 3245) then 637.455
				else if(revenu <= 3405) then 702.45
				else if(revenu <= 3565) then 770.625
				else if(revenu <= 8415) then 806.30250 
				else 890.48583
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="revenu" lowerBound="1" type="EBigDecimal"/>
		</EOperation>
		<EOperation name="get_A_for_salary_class_1A" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="if(revenu<= 1960) then 0
				else if(revenu <= 2065) then 0.12
				else if(revenu <= 2170) then 0.15
				else if(revenu <= 2280) then 0.18
				else if(revenu <= 2385) then 0.21
				else if(revenu <= 2490) then 0.24
				else if(revenu <= 2595) then 0.27
				else if(revenu <= 2700) then 0.3
				else if(revenu <= 2810) then 0.33
				else if(revenu <= 2915) then 0.36
				else if(revenu <= 3020) then 0.39
				else 0.4
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="revenu" lowerBound="1" type="EBigDecimal"/>
		</EOperation>
		<EOperation name="get_B_for_salary_class_1A" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="if(revenu<= 1960) then 0
				else if(revenu <= 2065) then 235.5
				else if(revenu <= 2170) then 297.555
				else if(revenu <= 2280) then 362.79
				else if(revenu <= 2385) then 431.205
				else if(revenu <= 2490) then 502.8
				else if(revenu <= 2595) then 577.575
				else if(revenu <= 2700) then 655.53
				else if(revenu <= 2810) then 736.665
				else if(revenu <= 2915) then 820.98
				else if(revenu <= 3020) then 908.475
				else 938.7
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="revenu" lowerBound="1" type="EBigDecimal"/>
		</EOperation>
		<EOperation name="get_A_for_salary_class_2" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="if(revenu<= 1960) then 0
				else if(revenu <= 2280) then 0.08
				else if(revenu <= 2595) then 0.1
				else if(revenu <= 2915) then 0.12
				else if(revenu <= 3230) then 0.14
				else if(revenu <= 3550) then 0.16
				else if(revenu <= 3870) then 0.18
				else if(revenu <= 4185) then 0.2
				else if(revenu <= 4505) then 0.22
				else if(revenu <= 4820) then 0.24
				else if(revenu <= 5140) then 0.26
				else if(revenu <= 5460) then 0.28
				else if(revenu <= 5775) then 0.3
				else if(revenu <= 6095) then 0.32
				else if(revenu <= 6410) then 0.34
				else if(revenu <= 6730) then 0.36
				else if(revenu <= 7050) then 0.38
				else if(revenu <= 16750) then 0.39
				else 0.4
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="revenu" lowerBound="1" type="EBigDecimal"/>
		</EOperation>
		<EOperation name="get_B_for_salary_class_2" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="if(revenu<= 1960) then 0
				else if(revenu <= 2280) then 157
				else if(revenu <= 2595) then 202.61
				else if(revenu <= 2915) then 254.58
				else if(revenu <= 3230) then 312.91
				else if(revenu <= 3550) then 377.6
				else if(revenu <= 3870) then 448.65
				else if(revenu <= 4185) then 526.06
				else if(revenu <= 4505) then 609.83
				else if(revenu <= 4820) then 699.96
				else if(revenu <= 5140) then 796.45
				else if(revenu <= 5460) then 899.3
				else if(revenu <= 5775) then 1008.51
				else if(revenu <= 6095) then 1124.08
				else if(revenu <= 6410) then 1246.01
				else if(revenu <= 6730) then 1374.3
				else if(revenu <= 7050) then 1508.95
				else if(revenu <= 16750) then  1579.455
				else 1746.97166
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="revenu" lowerBound="1" type="EBigDecimal"/>
		</EOperation>
		<EOperation name="get_A_for_pension_class_1" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="if(revenu<= 1000) then 0
				else if(revenu <= 1160) then 0.08
				else if(revenu <= 1320) then 0.1
				else if(revenu <= 1480) then 0.12
				else if(revenu <= 1635) then 0.14
				else if(revenu <= 1795) then 0.16
				else if(revenu <= 1955) then 0.18
				else if(revenu <= 2115) then 0.2
				else if(revenu <= 2275) then 0.22
				else if(revenu <= 2430) then 0.24
				else if(revenu <= 2590) then 0.26
				else if(revenu <= 2750) then 0.28
				else if(revenu <= 2910) then 0.3
				else if(revenu <= 3070) then 0.32
				else if(revenu <= 3225) then 0.34
				else if(revenu <= 3385) then 0.36
				else if(revenu <= 3545) then 0.38
				else if(revenu <= 8395) then 0.39
				else 0.4
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="revenu" lowerBound="1" type="EBigDecimal"/>
		</EOperation>
		<EOperation name="get_B_for_pension_class_1" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="if(revenu<= 1000) then 0
				else if(revenu <= 1160) then 80.3
				else if(revenu <= 1320) then 103.555
				else if(revenu <= 1480) then 129.99
				else if(revenu <= 1635) then 159.605
				else if(revenu <= 1795) then 192.4
				else if(revenu <= 1955) then 228.375
				else if(revenu <= 2115) then 267.53
				else if(revenu <= 2275) then 309.865
				else if(revenu <= 2430) then 355.38
				else if(revenu <= 2590) then 404.075
				else if(revenu <= 2750) then 455.95
				else if(revenu <= 2910) then 511.005
				else if(revenu <= 3070) then 569.24
				else if(revenu <= 3225) then 630.655
				else if(revenu <= 3385) then 695.25
				else if(revenu <= 3545) then 763.025
				else if(revenu <= 8395) then 798.5025
				else 882.48583	
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="revenu" lowerBound="1" type="EBigDecimal"/>
		</EOperation>
		<EOperation name="get_A_for_pension_class_1A" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="if(revenu<= 1940) then 0
				else if(revenu <= 2045) then 0.12
				else if(revenu <= 2150) then 0.15
				else if(revenu <= 2260) then 0.18
				else if(revenu <= 2365) then 0.21
				else if(revenu <= 2470) then 0.24
				else if(revenu <= 2575) then 0.27
				else if(revenu <= 2680) then 0.3
				else if(revenu <= 2790) then 0.33
				else if(revenu <= 2895) then 0.36
				else if(revenu <= 3000) then 0.39
				else 0.4
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="revenu" lowerBound="1" type="EBigDecimal"/>
		</EOperation>
		<EOperation name="get_B_for_pension_class_1A" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="if(revenu<= 1940) then 0
				else if(revenu <= 2045) then 233.100
				else if(revenu <= 2150) then 294.555
				else if(revenu <= 2260) then 359.190
				else if(revenu <= 2365) then 427.005
				else if(revenu <= 2470) then 498
				else if(revenu <= 2575) then 572.175
				else if(revenu <= 2680) then 649.53
				else if(revenu <= 2790) then 730.065
				else if(revenu <= 2895) then 813.780
				else if(revenu <= 3000) then 900.675
				else 930.700
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="revenu" lowerBound="1" type="EBigDecimal"/>
		</EOperation>
		<EOperation name="get_A_for_pension_class_2" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="
				
				if(revenu<= 1940) then 0
				else if(revenu <= 2260) then 0.08
				else if(revenu <= 2575) then 0.1
				else if(revenu <= 2895) then 0.12
				else if(revenu <= 3210) then 0.14
				else if(revenu <= 3530) then 0.16
				else if(revenu <= 3850) then 0.18
				else if(revenu <= 4165) then 0.2
				else if(revenu <= 4485) then 0.22
				else if(revenu <= 4800) then 0.24
				else if(revenu <= 5120) then 0.26
				else if(revenu <= 5440) then 0.28
				else if(revenu <= 5755) then 0.3
				else if(revenu <= 6075) then 0.32
				else if(revenu <= 6390) then 0.34
				else if(revenu <= 6710) then 0.36
				else if(revenu <= 7030) then 0.38
				else if(revenu <= 16730) then 0.39
				else 0.4
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="revenu" lowerBound="1" type="EBigDecimal"/>
		</EOperation>
		<EOperation name="get_B_for_pension_class_2" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="if(revenu<= 1940) then 0
				else if(revenu <= 2260) then 155.4
				else if(revenu <= 2575) then 200.61
				else if(revenu <= 2895) then 252.18
				else if(revenu <= 3210) then 310.11
				else if(revenu <= 3530) then 374.4
				else if(revenu <= 3850) then 445.05
				else if(revenu <= 4165) then 522.06
				else if(revenu <= 4485) then 605.43
				else if(revenu <= 4800) then 695.16
				else if(revenu <= 5120) then 791.25
				else if(revenu <= 5440) then 893.7
				else if(revenu <= 5755) then 1002.51
				else if(revenu <= 6075) then 1117.68
				else if(revenu <= 6390) then 1239.21
				else if(revenu <= 6710) then  1367.1
				else if(revenu <= 7030) then 1501.35
				else if(revenu <= 16730) then 1571.655
				else 1738.97166
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="revenu" lowerBound="1" type="EBigDecimal"/>
		</EOperation>
		<EOperation name="get_A_for_other_yearly_class_1" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="if(revenu<= 11250) then 0
				else if(revenu <= 13150) then 0.08
				else if(revenu <= 15050) then 0.1
				else if(revenu <= 16950) then 0.12
				else if(revenu <= 18850) then 0.14
				else if(revenu <= 20800) then 0.16
				else if(revenu <= 22700) then 0.18
				else if(revenu <= 24600) then 0.2
				else if(revenu <= 26500) then 0.22
				else if(revenu <= 28400) then 0.24
				else if(revenu <= 30300) then 0.26
				else if(revenu <= 32250) then 0.28
				else if(revenu <= 34150) then 0.3
				else if(revenu <= 36050) then 0.32
				else if(revenu <= 37950) then 0.34
				else if(revenu <= 39850) then 0.36
				else if(revenu <= 41750) then 0.38
				else if(revenu <= 100000) then 0.39
				else 0.4
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="revenu" lowerBound="1" type="EBigDecimal"/>
		</EOperation>
		<EOperation name="get_B_for_other_yearly_class_1" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="if(revenu<= 11250) then 0
				else if(revenu <= 13150) then 901.200 
				else if(revenu <= 15050) then 1164.660
				else if(revenu <= 16950) then 1466.280
				else if(revenu <= 18850) then 1806.060
				else if(revenu <= 20800) then 2184
				else if(revenu <= 22700) then 2600.100
				else if(revenu <= 24600) then 3054.360
				else if(revenu <= 26500) then 3546.780 
				else if(revenu <= 28400) then 4077.360
				else if(revenu <= 30300) then 4646.100
				else if(revenu <= 32250) then 5253
				else if(revenu <= 34150) then 5898.060
				else if(revenu <= 36050) then 6581.28
				else if(revenu <= 37950) then 7302.66
				else if(revenu <= 39850) then 8062.2
				else if(revenu <= 41750) then 8859.9
				else if(revenu <= 100000) then 9277.83
				else 10277.83
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="revenu" lowerBound="1" type="EBigDecimal"/>
		</EOperation>
		<EOperation name="get_A_for_other_yearly_class_1A" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="if(revenu<=22500) then 0
				else if(revenu <= 23800) then 0.12
				else if(revenu <= 25050) then 0.15
				else if(revenu <= 26300) then 0.18
				else if(revenu <= 27600) then 0.21
				else if(revenu <= 28850) then 0.24
				else if(revenu <= 30150) then 0.27
				else if(revenu <= 31400) then 0.3
				else if(revenu <= 32700) then 0.33
				else if(revenu <= 33950) then 0.36
				else if(revenu <= 35250) then 0.39
				else 0.4
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="revenu" lowerBound="1" type="EBigDecimal"/>
		</EOperation>
		<EOperation name="get_B_for_other_yearly_class_1A" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="if(revenu<=22500) then 0
				else if(revenu <= 23800) then 2703.600
				else if(revenu <= 25050) then 3417.660
				else if(revenu <= 26300) then 4169.880
				else if(revenu <= 27600) then 4960.260
				else if(revenu <= 28850) then 5788.800
				else if(revenu <= 30150) then 6655.500
				else if(revenu <= 31400) then 7560.360
				else if(revenu <= 32700) then 8503.380
				else if(revenu <= 33950) then 9484.560
				else if(revenu <= 35250) then 10503.900
				else  10856.400
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="revenu" lowerBound="1" type="EBigDecimal"/>
		</EOperation>
		<EOperation name="get_A_for_other_yearly_class_2" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="if(revenu<=22500) then 0
				else if(revenu <= 26300) then 0.08
				else if(revenu <= 30150) then 0.1
				else if(revenu <= 33950) then 0.12
				else if(revenu <= 37750) then 0.14
				else if(revenu <= 41600) then 0.16
				else if(revenu <= 45400) then 0.18
				else if(revenu <= 49200) then 0.2
				else if(revenu <= 53050) then 0.22
				else if(revenu <= 56850) then 0.24
				else if(revenu <= 60650) then 0.26
				else if(revenu <= 64500) then 0.28
				else if(revenu <= 68300) then 0.3
				else if(revenu <= 72100) then 0.32
				else if(revenu <= 75950) then 0.34
				else if(revenu <= 79750) then 0.36
				else if(revenu <= 83550) then 0.38
				else if(revenu <= 200000) then 0.39
				else 0.4
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="revenu" lowerBound="1" type="EBigDecimal"/>
		</EOperation>
		<EOperation name="get_B_for_other_yearly_class_2" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="if(revenu<=22500) then 0
				else if(revenu <= 26300) then 1802.400 
				else if(revenu <= 30150) then 2329.320
				else if(revenu <= 33950) then 2932.560
				else if(revenu <= 37750) then 3612.120
				else if(revenu <= 41600) then 4368.000
				else if(revenu <= 45400) then 5200.200
				else if(revenu <= 49200) then 6108.720
				else if(revenu <= 53050) then 7093.560
				else if(revenu <= 56850) then 8154.720
				else if(revenu <= 60650) then 9292.200
				else if(revenu <= 64500) then 10506.000
				else if(revenu <= 68300) then 11796.120
				else if(revenu <= 72100) then 13162.560
				else if(revenu <= 75950) then 14605.320
				else if(revenu <= 79750) then 16124.400
				else if(revenu <= 83550) then 17719.800
				else if(revenu <= 200000) then 18555.660
				else 20555.660
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="revenu" lowerBound="1" type="EBigDecimal"/>
		</EOperation>
		<EOperation name="get_A_for_salary_yearly_class_1" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="if(revenu<= 12250) then 0
				else if(revenu <= 14150) then 0.08
				else if(revenu <= 16100) then 0.1
				else if(revenu <= 18000) then 0.12
				else if(revenu <= 19900) then 0.14
				else if(revenu <= 21800) then 0.16
				else if(revenu <= 23700) then 0.18
				else if(revenu <= 25600) then 0.2
				else if(revenu <= 27500) then 0.22
				else if(revenu <= 29450) then 0.24
				else if(revenu <= 31350) then 0.26
				else if(revenu <= 33250) then 0.28
				else if(revenu <= 35150) then 0.3
				else if(revenu <= 37050) then 0.32
				else if(revenu <= 38950) then 0.34
				else if(revenu <= 40900) then 0.36
				else if(revenu <= 42800) then 0.38
				else if(revenu <= 101000) then 0.39
				else 0.4
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="revenu" lowerBound="1" type="EBigDecimal"/>
		</EOperation>
		<EOperation name="get_B_for_salary_yearly_class_1" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="if(revenu<= 12250) then 0
				else if(revenu <= 14150) then 982.8000
				else if(revenu <= 16100) then 1266.6600
				else if(revenu <= 18000) then 1588.6800
				else if(revenu <= 19900) then 1948.8600
				else if(revenu <= 21800) then 2347.2000
				else if(revenu <= 23700) then 2783.7000
				else if(revenu <= 25600) then 3258.3600
				else if(revenu <= 27500) then 3771.1800
				else if(revenu <= 29450) then 4322.1600
				else if(revenu <= 31350) then 4911.3000
				else if(revenu <= 33250) then 5538.6000
				else if(revenu <= 35150) then 6204.0600
				else if(revenu <= 37050) then 6907.6800
				else if(revenu <= 38950) then 7649.4600
				else if(revenu <= 40900) then 8429.4000
				else if(revenu <= 42800) then  9247.5000
				else if(revenu <= 101000) then  9675.6300
				else 10685.8300
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="revenu" lowerBound="1" type="EBigDecimal"/>
		</EOperation>
		<EOperation name="get_A_for_salary_yearly_class_1A" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="if(revenu<= 23500) then 0
				else if(revenu <= 24800) then 0.12
				else if(revenu <= 26050) then 0.15
				else if(revenu <= 27350) then 0.18
				else if(revenu <= 28600) then 0.21
				else if(revenu <= 29900) then 0.24
				else if(revenu <= 31150) then 0.27
				else if(revenu <= 32450) then 0.3
				else if(revenu <= 33700) then 0.33
				else if(revenu <= 34950) then 0.36
				else if(revenu <= 36250) then 0.39
				else 0.4
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="revenu" lowerBound="1" type="EBigDecimal"/>
		</EOperation>
		<EOperation name="get_B_for_salary_yearly_class_1A" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="if(revenu<= 23500) then 0
				else if(revenu <= 24800) then 2826.0000
				else if(revenu <= 26050) then 3570.6600
				else if(revenu <= 27350) then 4353.4800
				else if(revenu <= 28600) then 5174.4600
				else if(revenu <= 29900) then 6033.6000
				else if(revenu <= 31150) then 6930.9000
				else if(revenu <= 32450) then 7866.3600
				else if(revenu <= 33700) then 8839.9800
				else if(revenu <= 34950) then 9851.7600
				else if(revenu <= 36250) then  10901.7000
				else 11264.4000
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="revenu" lowerBound="1" type="EBigDecimal"/>
		</EOperation>
		<EOperation name="get_A_for_salary_yearly_class_2" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="if(revenu<= 23550) then 0
				else if(revenu <= 27350) then 0.08
				else if(revenu <= 31150) then 0.1
				else if(revenu <= 34950) then 0.12
				else if(revenu <= 38800) then 0.14
				else if(revenu <= 42600) then 0.16
				else if(revenu <= 46400) then 0.18
				else if(revenu <= 50250) then 0.2
				else if(revenu <= 54050) then 0.22
				else if(revenu <= 57850) then 0.24
				else if(revenu <= 61700) then 0.26
				else if(revenu <= 65500) then 0.28
				else if(revenu <= 69300) then 0.3
				else if(revenu <= 73150) then 0.32
				else if(revenu <= 76950) then 0.34
				else if(revenu <= 80750) then 0.36
				else if(revenu <= 84600) then 0.38
				else if(revenu <= 201000) then 0.39
				else 0.4
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="revenu" lowerBound="1" type="EBigDecimal"/>
		</EOperation>
		<EOperation name="get_B_for_salary_yearly_class_2" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="if(revenu<= 23550) then 0
				else if(revenu <= 27350) then 1884.000
				else if(revenu <= 31150) then 2431.3200
				else if(revenu <= 34950) then 3054.9600
				else if(revenu <= 38800) then 3754.9200
				else if(revenu <= 42600) then 4531.2000
				else if(revenu <= 46400) then 5383.8000
				else if(revenu <= 50250) then 6312.7200
				else if(revenu <= 54050) then 7317.9600
				else if(revenu <= 57850) then 8399.5200
				else if(revenu <= 61700) then 9557.4000
				else if(revenu <= 65500) then 10791.6000
				else if(revenu <= 69300) then 12102.1200
				else if(revenu <= 73150) then 13488.9600
				else if(revenu <= 76950) then 14952.1200
				else if(revenu <= 80750) then 16491.6000
				else if(revenu <= 84600) then 18107.4000
				else if(revenu <= 201000) then 18953.4600
				else 20963.6600
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="revenu" lowerBound="1" type="EBigDecimal"/>
		</EOperation>
		<EOperation name="get_A_for_pension_yearly_class_1" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="if(revenu<= 12000) then 0
				else if(revenu <= 13950) then 0.08
				else if(revenu <= 15850) then 0.1
				else if(revenu <= 17750) then 0.12
				else if(revenu <= 19650) then 0.14
				else if(revenu <= 21550) then 0.16
				else if(revenu <= 23450) then 0.18
				else if(revenu <= 25400) then 0.2
				else if(revenu <= 27300) then 0.22
				else if(revenu <= 29200) then 0.24
				else if(revenu <= 31100) then 0.26
				else if(revenu <= 33000) then 0.28
				else if(revenu <= 34900) then 0.3
				else if(revenu <= 36800) then 0.32
				else if(revenu <= 38750) then 0.34
				else if(revenu <= 40650) then 0.36
				else if(revenu <= 42550) then 0.38
				else if(revenu <= 100750) then 0.39
				else 0.4
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="revenu" lowerBound="1" type="EBigDecimal"/>
		</EOperation>
		<EOperation name="get_B_for_pension_yearly_class_1" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value=" if(revenu<= 12000) then 0
				else if(revenu <= 13950) then 963.600
				else if(revenu <= 15850) then 1242.660
				else if(revenu <= 17750) then 1559.880
				else if(revenu <= 19650) then 1915.260
				else if(revenu <= 21550) then 2308.800
				else if(revenu <= 23450) then 2740.500
				else if(revenu <= 25400) then 3210.360
				else if(revenu <= 27300) then 3718.380
				else if(revenu <= 29200) then 4264.560
				else if(revenu <= 31100) then 4848.900
				else if(revenu <= 33000) then 5471.400
				else if(revenu <= 34900) then 6132.060
				else if(revenu <= 36800) then 6830.880
				else if(revenu <= 38750) then 7567.860
				else if(revenu <= 40650) then 8343.000
				else if(revenu <= 42550) then 9156.300
				else if(revenu <= 100750) then 9582.030
				else 10589.830
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="revenu" lowerBound="1" type="EBigDecimal"/>
		</EOperation>
		<EOperation name="get_A_for_pension_yearly_class_1A" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="if(revenu<= 23300) then 0
				else if(revenu <= 24550) then 0.12
				else if(revenu <= 25850) then 0.15
				else if(revenu <= 27100) then 0.18
				else if(revenu <= 28350) then 0.21
				else if(revenu <= 29650) then 0.24
				else if(revenu <= 30900) then 0.27
				else if(revenu <= 32200) then 0.3
				else if(revenu <= 33450) then 0.33
				else if(revenu <= 34750) then 0.36
				else if(revenu <= 36000) then 0.39
				else 0.4
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="revenu" lowerBound="1" type="EBigDecimal"/>
		</EOperation>
		<EOperation name="get_B_for_pension_yearly_class_1A" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="if(revenu<= 23300) then 0
				else if(revenu <= 24550) then 2797.200
				else if(revenu <= 25850) then 3534.660
				else if(revenu <= 27100) then 4310.280
				else if(revenu <= 28350) then 5124.060
				else if(revenu <= 29650) then 5976.000
				else if(revenu <= 30900) then 6866.100
				else if(revenu <= 32200) then 7794.360
				else if(revenu <= 33450) then 8760.780
				else if(revenu <= 34750) then 9765.360
				else if(revenu <= 36000) then  10808.100
				else 11168.400
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="revenu" lowerBound="1" type="EBigDecimal"/>
		</EOperation>
		<EOperation name="get_A_for_pension_yearly_class_2" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="if(revenu<= 23300) then 0
				else if(revenu <= 27100) then 0.08
				else if(revenu <= 30900) then 0.1
				else if(revenu <= 34750) then 0.12
				else if(revenu <= 38550) then 0.14
				else if(revenu <= 42350) then 0.16
				else if(revenu <= 46200) then 0.18
				else if(revenu <= 50000) then 0.2
				else if(revenu <= 53800) then 0.22
				else if(revenu <= 57650) then 0.24
				else if(revenu <= 61450) then 0.26
				else if(revenu <= 65250) then 0.28
				else if(revenu <= 69100) then 0.3
				else if(revenu <= 72900) then 0.32
				else if(revenu <= 76700) then 0.34
				else if(revenu <= 80550) then 0.36
				else if(revenu <= 84350) then 0.38
				else if(revenu <= 200750) then 0.39
				else 0.4
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="revenu" lowerBound="1" type="EBigDecimal"/>
		</EOperation>
		<EOperation name="get_B_for_pension_yearly_class_2" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="if(revenu<= 23300) then 0
				else if(revenu <= 27100) then 1864.800
				else if(revenu <= 30900) then 2407.320
				else if(revenu <= 34750) then 3026.160
				else if(revenu <= 38550) then 3721.320
				else if(revenu <= 42350) then 4492.800
				else if(revenu <= 46200) then 5340.600
				else if(revenu <= 50000) then 6264.720
				else if(revenu <= 53800) then 7265.160
				else if(revenu <= 57650) then 8341.920
				else if(revenu <= 61450) then 9495.000
				else if(revenu <= 65250) then 10724.400
				else if(revenu <= 69100) then 12030.120
				else if(revenu <= 72900) then 13412.160
				else if(revenu <= 76700) then 14870.520
				else if(revenu <= 80550) then 16405.200
				else if(revenu <= 84350) then 18016.200
				else if(revenu <= 200750) then 18859.860
				else 20867.660
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="revenu" lowerBound="1" type="EBigDecimal"/>
		</EOperation>
		<EOperation name="calculate_taxes_per_year" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="
				if(income_type='Employment') then
				let a:Real = if(classe=Tax_Class_Category::One_A) then get_A_for_salary_yearly_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_A_for_salary_yearly_class_2(amount) else get_A_for_salary_yearly_class_1(amount) endif endif in
				let b:Real = if(classe=Tax_Class_Category::One_A) then get_B_for_salary_yearly_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_B_for_salary_yearly_class_2(amount) else get_B_for_salary_yearly_class_1(amount) endif endif in
				let res:Real = round_lower_euros(a * amount - b) in
				let max:Real = if(classe=Tax_Class_Category::Two) then 301020 else 151020 endif in
				
				if(amount<max) then
				let final_res:Real= round_lower_euros(res*1.07) in
				if(final_res<12)then
				0
				else
				final_res
				endif
				else 
				let adjustement:Real= if(classe=Tax_Class_Category::One_A) then 982.86 else if(classe=Tax_Class_Category::Two) then 1988.88 else 994.44 endif endif in
				let final_res:Real=  round_lower_euros(res + (res*0.09-adjustement)) in
				if(final_res<12)then
				0
				else
				final_res
				endif
				endif
				
				
				
				else
				if(income_type='Pension') then
				let a:Real = if(classe=Tax_Class_Category::One_A) then get_A_for_pension_yearly_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_A_for_pension_yearly_class_2(amount) else get_A_for_pension_yearly_class_1(amount) endif endif in
				let b:Real = if(classe=Tax_Class_Category::One_A) then get_B_for_pension_yearly_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_B_for_pension_yearly_class_2(amount) else get_B_for_pension_yearly_class_1(amount) endif endif in
				let res:Real = round_lower_euros(a * amount - b) in
				let max:Real = if(classe=Tax_Class_Category::Two) then 300780 else 150780 endif in
				
				if(amount<max) then
				let final_res:Real= round_lower_euros(res*1.07) in
				if(final_res<12)then
				0
				else
				final_res
				endif
				else 
				let adjustement:Real= if(classe=Tax_Class_Category::One_A) then 982.86 else if(classe=Tax_Class_Category::Two) then 1988.88 else 994.44 endif endif in
				let final_res:Real=  round_lower_euros(res + (res*0.09-adjustement)) in
				if(final_res<12)then
				0
				else
				final_res
				endif
				
				endif
				
				else
				
				let a:Real = if(classe=Tax_Class_Category::One_A) then get_A_for_other_yearly_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_A_for_other_yearly_class_2(amount) else get_A_for_other_yearly_class_1(amount) endif endif in
				let b:Real = if(classe=Tax_Class_Category::One_A) then get_B_for_other_yearly_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_B_for_other_yearly_class_2(amount) else get_B_for_other_yearly_class_1(amount) endif endif in
				let res:Real = round_lower_euros(a * amount - b) in
				let max:Real = if(classe=Tax_Class_Category::Two) then 300000 else 150000 endif in
				
				if(amount<max) then
				let final_res:Real= round_lower_euros(res*1.07) in
				if(final_res<12)then
				0
				else
				final_res
				endif
				else 
				let adjustement:Real= if(classe=Tax_Class_Category::One_A) then 982.86 else if(classe=Tax_Class_Category::Two) then 1988.88 else 994.44 endif endif in
				let final_res:Real=  round_lower_euros(res + (res*0.09-adjustement)) in
				if(final_res<12)then
				0
				else
				final_res
				endif 
				endif  
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="amount" lowerBound="1" type="EBigDecimal"/>
			<EParameter name="classe" lowerBound="1" type="Tax_Class_Category"/>
			<EParameter name="income_type" lowerBound="1" type="EString"/>
		</EOperation>
		<EOperation name="calculate_taxes_per_year_mixed" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="
				if(income_type='Employment') then
				let a:Real = if(classe=Tax_Class_Category::One_A) then get_A_for_salary_yearly_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_A_for_salary_yearly_class_2(amount) else get_A_for_salary_yearly_class_1(amount) endif endif in
				let b:Real = if(classe=Tax_Class_Category::One_A) then get_B_for_salary_yearly_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_B_for_salary_yearly_class_2(amount) else get_B_for_salary_yearly_class_1(amount) endif endif in
				let res:Real = round_lower_euros(a * local_amount - b) in
				let max:Real = if(classe=Tax_Class_Category::Two) then 301020 else 151020 endif in
				
				if(amount<max) then
				let final_res:Real= round_lower_euros(res*1.07) in
				if(final_res<12)then
				0
				else
				final_res
				endif
				else 
				let adjustement:Real= if(classe=Tax_Class_Category::One_A) then 982.86 else if(classe=Tax_Class_Category::Two) then 1988.88 else 994.44 endif endif in
				let final_res:Real=  round_lower_euros(res + (res*0.09-adjustement)) in
				if(final_res<12)then
				0
				else
				final_res
				endif
				endif
				
				
				
				else
				if(income_type='Pension') then
				let a:Real = if(classe=Tax_Class_Category::One_A) then get_A_for_pension_yearly_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_A_for_pension_yearly_class_2(amount) else get_A_for_pension_yearly_class_1(amount) endif endif in
				let b:Real = if(classe=Tax_Class_Category::One_A) then get_B_for_pension_yearly_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_B_for_pension_yearly_class_2(amount) else get_B_for_pension_yearly_class_1(amount) endif endif in
				let res:Real = round_lower_euros(a * local_amount - b) in
				let max:Real = if(classe=Tax_Class_Category::Two) then 300780 else 150780 endif in
				
				if(amount<max) then
				let final_res:Real= round_lower_euros(res*1.07) in
				if(final_res<12)then
				0
				else
				final_res
				endif
				else 
				let adjustement:Real= if(classe=Tax_Class_Category::One_A) then 982.86 else if(classe=Tax_Class_Category::Two) then 1988.88 else 994.44 endif endif in
				let final_res:Real=  round_lower_euros(res + (res*0.09-adjustement)) in
				if(final_res<12)then
				0
				else
				final_res
				endif
				
				endif
				
				else
				
				let a:Real = if(classe=Tax_Class_Category::One_A) then get_A_for_other_yearly_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_A_for_other_yearly_class_2(amount) else get_A_for_other_yearly_class_1(amount) endif endif in
				let b:Real = if(classe=Tax_Class_Category::One_A) then get_B_for_other_yearly_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_B_for_other_yearly_class_2(amount) else get_B_for_other_yearly_class_1(amount) endif endif in
				let res:Real = round_lower_euros(a * local_amount - b) in
				let max:Real = if(classe=Tax_Class_Category::Two) then 300000 else 150000 endif in
				
				if(amount<max) then
				let final_res:Real= round_lower_euros(res*1.07) in
				if(final_res<12)then
				0
				else
				final_res
				endif
				else 
				let adjustement:Real= if(classe=Tax_Class_Category::One_A) then 982.86 else if(classe=Tax_Class_Category::Two) then 1988.88 else 994.44 endif endif in
				let final_res:Real=  round_lower_euros(res + (res*0.09-adjustement)) in
				if(final_res<12)then
				0
				else
				final_res
				endif 
				endif  
				endif
				endif"/>
			</EAnnotation>
			<EParameter name="amount" lowerBound="1" type="EBigDecimal"/>
			<EParameter name="local_amount" lowerBound="1" type="EBigDecimal"/>
			<EParameter name="classe" lowerBound="1" type="Tax_Class_Category"/>
			<EParameter name="income_type" lowerBound="1" type="EString"/>
		</EOperation>
		<EOperation name="getTaxableIncomePerYear" lowerBound="1" type="EBigDecimal">
			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
				<EStringToStringMapEntry key="body" value="
				let gross_salary_year:Real= income.income_per_year() in
				let type:Income_Type=income.income_type in
				
				if(type.oclIsTypeOf(Employment_Income)) then
				let sum_deductions_year:Real=income.tax_card.getSumDeductionsYear() in
				let part_pension_year:Real= gross_salary_year * income.taxPayer.from_law.PENSION_RATE() in
				let part_CNS_year:Real= gross_salary_year * income.taxPayer.from_law.CNS_RATE() in
				let taxable_income:Real= gross_salary_year- (part_CNS_year + part_pension_year + sum_deductions_year) in  	
				round_lower_fifty_euros(taxable_income)
				
				else
				if(type.oclIsTypeOf(Pensions_and_Annuities_Income))then
				let sum_deductions_year:Real=income.tax_card.getSumDeductionsYear() in
				let taxable_income:Real= gross_salary_year- sum_deductions_year in  	
				round_lower_fifty_euros(taxable_income)
				else
				let details:Set(Income_Detail)= income.details->select(i:Income_Detail|i.is_worked=true) in
					
					let res:Real= details->iterate( elem : Income_Detail;  acc : Real = 0 | 
					
					if(elem.is_contributing_CNS=false and elem.is_contributing_pension=false) then acc + elem.amount 
					else
					if(elem.is_contributing_CNS=true and elem.is_contributing_pension=true) then
					acc+  elem.amount - (elem.amount* income.taxPayer.from_law.PENSION_RATE()) - (elem.amount* income.taxPayer.from_law.CNS_RATE())
					else
					if(elem.is_contributing_CNS=true)then
					acc+  elem.amount  - (elem.amount* income.taxPayer.from_law.CNS_RATE())
					else
					acc+  elem.amount  - (elem.amount* income.taxPayer.from_law.PENSION_RATE()) 
					
					endif 
					endif 
					endif 
					
					)
					
					in round_lower_fifty_euros(res)
					
					endif
					endif
					
					"/>
				</EAnnotation>
				<EParameter name="income" lowerBound="1" type="Income"/>
			</EOperation>
			<EOperation name="round_lower_fifty_euros" lowerBound="1" type="EBigDecimal">
				<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
					<EStringToStringMapEntry key="body" value="
					
					if(amount<50) then
					0
					else
					if (amount>=50 and amount<100) then
						50.0
						else
						let temp_amount:Real = round_lower_euros(amount) in
						let ch:String=temp_amount.toString()in
						let temp_amount1:Real = temp_amount / 100.0 in
						
						if(temp_amount1.round() = temp_amount1.floor()) then
						temp_amount1.floor() * 100.0
						else
						(temp_amount1.round()  * 100.0) -50
						endif
						endif
						endif"/>
					</EAnnotation>
					<EParameter name="amount" lowerBound="1" type="EBigDecimal"/>
				</EOperation>
				<EOperation name="calculate_taxes_per_month" lowerBound="1" type="EBigDecimal">
					<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
						<EStringToStringMapEntry key="body" value="
						
						if(income_type='Employment') then
						let a:Real = if(classe=Tax_Class_Category::One_A) then get_A_for_salary_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_A_for_salary_class_2(amount) else get_A_for_salary_class_1(amount) endif endif in
						let b:Real = if(classe=Tax_Class_Category::One_A) then get_B_for_salary_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_B_for_salary_class_2(amount) else get_B_for_salary_class_1(amount) endif endif in
						let res:Real = round_ten_cent(a * amount - b) in
						let max:Real = if(classe=Tax_Class_Category::Two) then 25085 else 12585 endif in
						
						if(amount<max) then
						let final_res:Real= round_ten_cent(res*1.07) in
						if(final_res<1)then
						0
						else
						final_res
						endif
						else 
						let adjustement:Real= if(classe=Tax_Class_Category::One_A) then 81.906 else if(classe=Tax_Class_Category::Two) then 165.74 else 82.87 endif endif in
						let final_res:Real=  round_ten_cent(res + (res*0.09-adjustement)) in
						if(final_res<1)then
						0
						else
						final_res
						endif
						endif
						
						
						
						else
						if(income_type='Pension') then
						let a:Real = if(classe=Tax_Class_Category::One_A) then get_A_for_pension_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_A_for_pension_class_2(amount) else get_A_for_pension_class_1(amount) endif endif in
						let b:Real = if(classe=Tax_Class_Category::One_A) then get_B_for_pension_class_1A(amount) else if(classe=Tax_Class_Category::Two) then get_B_for_pension_class_2(amount) else get_B_for_pension_class_1(amount) endif endif in
						let res:Real = round_ten_cent(a * amount - b) in
						let max:Real = if(classe=Tax_Class_Category::Two) then 25065 else 12565 endif in
						
						if(amount<max) then
						let final_res:Real= round_ten_cent(res*1.07) in
						if(final_res<1)then
						0
						else
						final_res
						endif
						else 
						let adjustement:Real= if(classe=Tax_Class_Category::One_A) then 81.906 else if(classe=Tax_Class_Category::Two) then 165.74 else 82.87 endif endif in
						let final_res:Real=  round_ten_cent(res + (res*0.09-adjustement)) in
						if(final_res<1)then
						0
						else
						final_res
						endif
						endif	
						else
						0
						endif
						endif"/>
					</EAnnotation>
					<EParameter name="amount" lowerBound="1" type="EBigDecimal"/>
					<EParameter name="classe" lowerBound="1" type="Tax_Class_Category"/>
					<EParameter name="income_type" lowerBound="1" type="EString"/>
				</EOperation>
				<EOperation name="round_lower_euros" lowerBound="1" type="EBigDecimal">
					<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
						<EStringToStringMapEntry key="body" value="
						let p1:Integer = amount.floor() in
						p1.toString().toReal()"/>
					</EAnnotation>
					<EParameter name="amount" lowerBound="1" type="EBigDecimal"/>
				</EOperation>
				<EOperation name="round_ten_cent" lowerBound="1" type="EBigDecimal">
					<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
						<EStringToStringMapEntry key="body" value="
						let p1:Integer = amount.floor() in
						if(p1=amount) then
						amount
						else
						let p2_temp:Real = (amount-p1) * 10 in
						let p2:Integer = p2_temp.floor() in
						p1.toString().toReal()+(p2.toString().toReal()/10.0)
						endif"/>
					</EAnnotation>
					<EParameter name="amount" lowerBound="1" type="EBigDecimal"/>
				</EOperation>
				<EOperation name="precision" lowerBound="1" type="EBigDecimal">
					<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
						<EStringToStringMapEntry key="body" value="
						let ch:String=amount.toString() in
						if(ch.indexOf('.')=-1)then
						amount
						else
						let pos_pt:Integer=ch.indexOf('.') in
						if(pos_pt+degit >=ch.size()) then
							amount 
							else
							let ch1:String=ch.substring(1,pos_pt+degit) in
							ch1.toReal()
							endif
							endif"/>
						</EAnnotation>
						<EParameter name="amount" lowerBound="1" type="EBigDecimal"/>
						<EParameter name="degit" lowerBound="1" type="EBigInteger"/>
					</EOperation>
					<EOperation name="MAXIMUM_FLAT_RATE_FOR_ALIMONY" lowerBound="1" type="EBigDecimal">
						<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
							<EStringToStringMapEntry key="body" value="
							
							if(year_divorce>1997)then
								if(year <=2007) then
								20400
								else
								if(year=2008) then
								21600
								else 
								if(year=2009 or year = 2010) then
								23400
								else
								24000
								endif
								endif
								endif
								else
								
								if(year <=2007) then
								20400
								else
								if(year=2008) then
								21600
								else 
								23400
								endif
								endif	
								endif
								
								"/>
							</EAnnotation>
							<EParameter name="year" lowerBound="1" type="EBigInteger"/>
							<EParameter name="year_divorce" lowerBound="1" type="EBigInteger"/>
						</EOperation>
						<EOperation name="AEP_FLAT_RATE" lowerBound="1" type="EBigDecimal">
							<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
								<EStringToStringMapEntry key="body" value="4500"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="MINIMUM_LEGAL_SALARY" lowerBound="1" type="EBigDecimal">
							<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
								<EStringToStringMapEntry key="body" value="1921.03"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="MAXIMUM_RATE_FOR_CE_CHILDREN" lowerBound="1" type="EBigDecimal">
							<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
								<EStringToStringMapEntry key="body" value="3480 "/>
							</EAnnotation>
						</EOperation>
						<EOperation name="PENSION_RATE" lowerBound="1" type="EBigDecimal">
							<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
								<EStringToStringMapEntry key="body" value="0.08"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="CNS_RATE" lowerBound="1" type="EBigDecimal">
							<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
								<EStringToStringMapEntry key="body" value="0.0305"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="CE_INVALIDITY_FLAT_RATE_TYPE_E" lowerBound="1" type="EBigDecimal">
							<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
								<EStringToStringMapEntry key="body" value="1455"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="CIP_MINIMUM_INCOME_MONTH" lowerBound="1" type="EBigDecimal">
							<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
								<EStringToStringMapEntry key="body" value="25"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="CIP_MINIMUM_INCOME_YEAR" lowerBound="1" type="EBigDecimal">
							<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
								<EStringToStringMapEntry key="body" value="300"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="FLAT_RATE_CIP_YEARLY" lowerBound="1" type="EBigDecimal">
							<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
								<EStringToStringMapEntry key="body" value="300"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="FLAT_RATE_PER_UNIT" lowerBound="1" type="EBigDecimal">
							<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
								<EStringToStringMapEntry key="body" value="99"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="MAXIMUM_DISTANCE_IN_UNITS" lowerBound="1" type="EBigDecimal">
							<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
								<EStringToStringMapEntry key="body" value="30"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="MINIMUM_DISTANCE_IN_UNITS" lowerBound="1" type="EBigDecimal">
							<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
								<EStringToStringMapEntry key="body" value="4"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="FLAT_MAXIMUM_FD" lowerBound="1" type="EBigDecimal">
							<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
								<EStringToStringMapEntry key="body" value="2574"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="CIS_MINIMUM_INCOME_DAY" lowerBound="1" type="EBigDecimal">
							<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
								<EStringToStringMapEntry key="body" value="3.12"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="CIS_MINIMUM_INCOME_MONTH" lowerBound="1" type="EBigDecimal">
							<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
								<EStringToStringMapEntry key="body" value="78"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="CIS_MINIMUM_INCOME_YEAR" lowerBound="1" type="EBigDecimal">
							<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
								<EStringToStringMapEntry key="body" value="936"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="FLAT_RATE_CIS_DAILY" lowerBound="1" type="EBigDecimal">
							<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
								<EStringToStringMapEntry key="body" value="1"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="FLAT_RATE_CIS_MONTHLY" lowerBound="1" type="EBigDecimal">
							<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
								<EStringToStringMapEntry key="body" value="25"/>
							</EAnnotation>
						</EOperation>
						<EOperation name="FLAT_RATE_CIS_YEARLY" lowerBound="1" type="EBigDecimal">
							<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
								<EStringToStringMapEntry key="body" value="300"/>
							</EAnnotation>
						</EOperation>
						<ref name="taxPayer" lowerBound="1" type="Tax_Payer"/>
					</class>
					<class name="Tax_Property">
						<attr name="starting_year" lowerBound="1" type="//EBigInteger"/>
						<attr name="taxed_jointly" lowerBound="1" type="//EBoolean"/>
						<ref name="union_record" lowerBound="1" type="Legal_Union_Record"/>
					</class>
					<class name="Tax_Payer" abstract="true">
						<EOperation name="getTaxClassModified" lowerBound="1" type="Tax_Class_Category">
							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
								<EStringToStringMapEntry key="documentation" value="Here generated operation from model tax class categorization"/>
							</EAnnotation>
							<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
								<EStringToStringMapEntry key="body" value="
								let is_resident_taxpayer:Boolean = self.oclIsKindOf(Resident_Tax_Payer) in													
								/** Description: Returns yes if a given taxpayer is a resident. - **/	
								if (is_resident_taxpayer) = true then
								let is_divorced:Boolean = self.getSeperationState(taxation_year,Separation_Causes::DIVORCE) in													
								/** Description: Returns yes if the taxpayer is divorced within the selected taxation year. -  **/	
								let is_living_separately:Boolean = self.getSeperationState(taxation_year,Separation_Causes::SEPARATION_DE_FAIT) in													
								/** Description: Returns yes if the taxpayer is not cohabiting with his/her spouse. In French: "Separation de fait". -  **/	
								let is_living_separately_by_court:Boolean = self.getSeperationState(taxation_year,Separation_Causes::SEPARATION_BY_COURT) in													
								/** Description: Returns yes if the taxpayer has a judicial sentence dismissing him from cohabiting with his/her spouse. In French: "Separation de corps". -  **/	
								if (is_divorced or is_living_separately_by_court or (is_living_separately and not is_resident_taxpayer)) = false then
								let is_widower:Boolean = self.is_widower in													
								/** Description: Returns yes if the taxpayer has the statute of widower for the current taxation year. -  **/	
								if (is_widower) = true then
								let spouse_death_year:Integer = self.last_start_year_widower in													
								/** Description: Returns the year on which the spouse of the taxpayer past away. -  **/	
								if (spouse_death_year <= taxation_year and spouse_death_year >= taxation_year -3) = true then
									Tax_Class_Category::Two
									else
									if (spouse_death_year <= taxation_year and spouse_death_year >= taxation_year -3) = false then
										Tax_Class_Category::One_A
										else
										invalid
										endif
										endif
										else
										if (is_widower) = false then
										let is_reciving_bonus_for_children:Boolean = self.getIsreceivingAllowancesForChildren(taxation_year) in													
										/** Description: Returns yes if the taxpayer is receiving a bonus for children in household. -  **/	
										if (is_reciving_bonus_for_children) = true then
										Tax_Class_Category::One_A
										else
										if (is_reciving_bonus_for_children) = false then
										let taxpayer_age:Integer = self.getAge(taxation_year) in													
										/** Description: Returns the age of a given taxpayer. -  **/	
										if (taxpayer_age >= 64) = true then
										Tax_Class_Category::One_A
										else
										if (taxpayer_age >= 64) = false then
										Tax_Class_Category::One
										else
										invalid
										endif
										endif
										else
										invalid
										endif
										endif
										else
										invalid
										endif
										endif
										else
										if (is_divorced or is_living_separately_by_court or (is_living_separately and not is_resident_taxpayer)) = true then
										let can_beneficiate_from_transition_state :Boolean = self.getDivorceTransitionState(taxation_year) in													
										/** Description: Returns yes if: (1) the divorce/separation occurred within the last three years from the taxation year, and (2) the taxpayer did has not beneficiated from a divorce/separation transition state for the last five years from the current taxation year. -  **/	
										if (can_beneficiate_from_transition_state ) = false then
										let is_widower:Boolean = self.is_widower in													
										/** Description: Returns yes if the taxpayer has the statute of widower for the current taxation year. -  **/	
										if (is_widower) = true then
										let spouse_death_year:Integer = self.last_start_year_widower in													
										/** Description: Returns the year on which the spouse of the taxpayer past away. -  **/	
										if (spouse_death_year <= taxation_year and spouse_death_year >= taxation_year -3) = true then
											Tax_Class_Category::Two
											else
											if (spouse_death_year <= taxation_year and spouse_death_year >= taxation_year -3) = false then
												Tax_Class_Category::One_A
												else
												invalid
												endif
												endif
												else
												if (is_widower) = false then
												let is_reciving_bonus_for_children:Boolean = self.getIsreceivingAllowancesForChildren(taxation_year) in													
												/** Description: Returns yes if the taxpayer is receiving a bonus for children in household. -  **/	
												if (is_reciving_bonus_for_children) = true then
												Tax_Class_Category::One_A
												else
												if (is_reciving_bonus_for_children) = false then
												let taxpayer_age:Integer = self.getAge(taxation_year) in													
												/** Description: Returns the age of a given taxpayer. -  **/	
												if (taxpayer_age >= 64) = true then
												Tax_Class_Category::One_A
												else
												if (taxpayer_age >= 64) = false then
												Tax_Class_Category::One
												else
												invalid
												endif
												endif
												else
												invalid
												endif
												endif
												else
												invalid
												endif
												endif
												else
												if (can_beneficiate_from_transition_state ) = true then
												Tax_Class_Category::Two
												else
												invalid
												endif
												endif
												else
												invalid
												endif
												endif
												else
												if (is_resident_taxpayer) = false then
												let is_married:Boolean = self.getIsMaried(taxation_year) in													
												/** Description: Returns yes if the taxpayer is married. -  **/	
												if (is_married) = false then
												let is_divorced:Boolean = self.getSeperationState(taxation_year,Separation_Causes::DIVORCE) in													
												/** Description: Returns yes if the taxpayer is divorced within the selected taxation year. -  **/	
												let is_living_separately:Boolean = self.getSeperationState(taxation_year,Separation_Causes::SEPARATION_DE_FAIT) in													
												/** Description: Returns yes if the taxpayer is not cohabiting with his/her spouse. In French: "Separation de fait". -  **/	
												let is_living_separately_by_court:Boolean = self.getSeperationState(taxation_year,Separation_Causes::SEPARATION_BY_COURT) in													
												/** Description: Returns yes if the taxpayer has a judicial sentence dismissing him from cohabiting with his/her spouse. In French: "Separation de corps". -  **/	
												if (is_divorced or is_living_separately_by_court or (is_living_separately and not is_resident_taxpayer)) = false then
												let is_widower:Boolean = self.is_widower in													
												/** Description: Returns yes if the taxpayer has the statute of widower for the current taxation year. -  **/	
												if (is_widower) = true then
												let spouse_death_year:Integer = self.last_start_year_widower in													
												/** Description: Returns the year on which the spouse of the taxpayer past away. -  **/	
												if (spouse_death_year <= taxation_year and spouse_death_year >= taxation_year -3) = true then
													Tax_Class_Category::Two
													else
													if (spouse_death_year <= taxation_year and spouse_death_year >= taxation_year -3) = false then
														Tax_Class_Category::One_A
														else
														invalid
														endif
														endif
														else
														if (is_widower) = false then
														let is_reciving_bonus_for_children:Boolean = self.getIsreceivingAllowancesForChildren(taxation_year) in													
														/** Description: Returns yes if the taxpayer is receiving a bonus for children in household. -  **/	
														if (is_reciving_bonus_for_children) = true then
														Tax_Class_Category::One_A
														else
														if (is_reciving_bonus_for_children) = false then
														let taxpayer_age:Integer = self.getAge(taxation_year) in													
														/** Description: Returns the age of a given taxpayer. -  **/	
														if (taxpayer_age >= 64) = true then
														Tax_Class_Category::One_A
														else
														if (taxpayer_age >= 64) = false then
														Tax_Class_Category::One
														else
														invalid
														endif
														endif
														else
														invalid
														endif
														endif
														else
														invalid
														endif
														endif
														else
														if (is_divorced or is_living_separately_by_court or (is_living_separately and not is_resident_taxpayer)) = true then
														let can_beneficiate_from_transition_state :Boolean = self.getDivorceTransitionState(taxation_year) in													
														/** Description: Returns yes if: (1) the divorce/separation occurred within the last three years from the taxation year, and (2) the taxpayer did has not beneficiated from a divorce/separation transition state for the last five years from the current taxation year. -  **/	
														if (can_beneficiate_from_transition_state ) = false then
														let is_widower:Boolean = self.is_widower in													
														/** Description: Returns yes if the taxpayer has the statute of widower for the current taxation year. -  **/	
														if (is_widower) = true then
														let spouse_death_year:Integer = self.last_start_year_widower in													
														/** Description: Returns the year on which the spouse of the taxpayer past away. -  **/	
														if (spouse_death_year <= taxation_year and spouse_death_year >= taxation_year -3) = true then
															Tax_Class_Category::Two
															else
															if (spouse_death_year <= taxation_year and spouse_death_year >= taxation_year -3) = false then
																Tax_Class_Category::One_A
																else
																invalid
																endif
																endif
																else
																if (is_widower) = false then
																let is_reciving_bonus_for_children:Boolean = self.getIsreceivingAllowancesForChildren(taxation_year) in													
																/** Description: Returns yes if the taxpayer is receiving a bonus for children in household. -  **/	
																if (is_reciving_bonus_for_children) = true then
																Tax_Class_Category::One_A
																else
																if (is_reciving_bonus_for_children) = false then
																let taxpayer_age:Integer = self.getAge(taxation_year) in													
																/** Description: Returns the age of a given taxpayer. -  **/	
																if (taxpayer_age >= 64) = true then
																Tax_Class_Category::One_A
																else
																if (taxpayer_age >= 64) = false then
																Tax_Class_Category::One
																else
																invalid
																endif
																endif
																else
																invalid
																endif
																endif
																else
																invalid
																endif
																endif
																else
																if (can_beneficiate_from_transition_state ) = true then
																Tax_Class_Category::Two
																else
																invalid
																endif
																endif
																else
																invalid
																endif
																endif
																else
																if (is_married) = true then
																let total_professional_income_household:Real = self.getProfetionalIncomeHousehold(taxation_year) in													
																/** Description: Returns the sum of the taxpayer's household professional incomes. -  **/	
																let sum_professional_income_household_Luxembourg:Real = self.getProfetionalIncomeHouseholdLuxembourg(taxation_year) in													
																/** Description: Returns the sum of the taxpayer's household professional incomes that are taxed in Luxembourg. -  **/	
																if (sum_professional_income_household_Luxembourg > (0.5 * total_professional_income_household)) = true then
																Tax_Class_Category::Two
																else
																if (sum_professional_income_household_Luxembourg > (0.5 * total_professional_income_household)) = false then
																Tax_Class_Category::One_A
																else
																invalid
																endif
																endif
																else
																invalid
																endif
																endif
																else
																invalid
																endif
																endif
																"/>
															</EAnnotation>
															<EParameter name="taxation_year" lowerBound="1" type="EBigInteger"/>
														</EOperation>
														<EOperation name="getTaxClass" lowerBound="1" type="Tax_Class_Category">
															<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
																<EStringToStringMapEntry key="body" value="
																let is_resident_taxpayer:Boolean = self.oclIsKindOf(Resident_Tax_Payer) in													
																/** Description: Returns yes if a given taxpayer is a resident. - **/	
																if (is_resident_taxpayer) = true then
																let is_taxed_jointly:Boolean = self.getIsTaxedJointly(taxation_year) in													
																/** Description: Returns yes if the taxpayer is married or has a partnership contract. -  **/	
																if (is_taxed_jointly) = true then
																Tax_Class_Category::Two
																else
																if (is_taxed_jointly) = false then
																let is_divorced:Boolean = self.getSeperationState(taxation_year,Separation_Causes::DIVORCE) in													
																/** Description: Returns yes if the taxpayer is divorced within the selected taxation year. -  **/	
																let is_living_separately:Boolean = self.getSeperationState(taxation_year,Separation_Causes::SEPARATION_DE_FAIT) in													
																/** Description: Returns yes if the taxpayer is not cohabiting with his/her spouse. In French: "Separation de fait". -  **/	
																let is_living_separately_by_court:Boolean = self.getSeperationState(taxation_year,Separation_Causes::SEPARATION_BY_COURT) in													
																/** Description: Returns yes if the taxpayer has a judicial sentence dismissing him from cohabiting with his/her spouse. In French: "Separation de corps". -  **/	
																if (is_divorced or is_living_separately_by_court or (is_living_separately and not is_resident_taxpayer)) = false then
																let is_widower:Boolean = self.is_widower in													
																/** Description: Returns yes if the taxpayer has the statute of widower for the current taxation year. -  **/	
																if (is_widower) = true then
																let spouse_death_year:Integer = self.last_start_year_widower in													
																/** Description: Returns the year on which the spouse of the taxpayer past away. -  **/	
																if (spouse_death_year <= taxation_year and spouse_death_year >= taxation_year -3) = true then
																	Tax_Class_Category::Two
																	else
																	if (spouse_death_year <= taxation_year and spouse_death_year >= taxation_year -3) = false then
																		Tax_Class_Category::One_A
																		else
																		invalid
																		endif
																		endif
																		else
																		if (is_widower) = false then
																		let is_reciving_bonus_for_children:Boolean = self.getIsreceivingAllowancesForChildren(taxation_year) in													
																		/** Description: Returns yes if the taxpayer is receiving a bonus for children in household. -  **/	
																		if (is_reciving_bonus_for_children) = true then
																		Tax_Class_Category::One_A
																		else
																		if (is_reciving_bonus_for_children) = false then
																		let taxpayer_age:Integer = self.getAge(taxation_year) in													
																		/** Description: Returns the age of a given taxpayer. -  **/	
																		if (taxpayer_age >= 64) = true then
																		Tax_Class_Category::One_A
																		else
																		if (taxpayer_age >= 64) = false then
																		Tax_Class_Category::One
																		else
																		invalid
																		endif
																		endif
																		else
																		invalid
																		endif
																		endif
																		else
																		invalid
																		endif
																		endif
																		else
																		if (is_divorced or is_living_separately_by_court or (is_living_separately and not is_resident_taxpayer)) = true then
																		let can_beneficiate_from_transition_state :Boolean = self.getDivorceTransitionState(taxation_year) in													
																		/** Description: Returns yes if: (1) the divorce/separation occurred within the last three years from the taxation year, and (2) the taxpayer did has not benefited from a divorce/separation transition state for the last five years from the current taxation year.  -  **/	
																		if (can_beneficiate_from_transition_state ) = false then
																		let is_widower:Boolean = self.is_widower in													
																		/** Description: Returns yes if the taxpayer has the statute of widower for the current taxation year. -  **/	
																		if (is_widower) = true then
																		let spouse_death_year:Integer = self.last_start_year_widower in													
																		/** Description: Returns the year on which the spouse of the taxpayer past away. -  **/	
																		if (spouse_death_year <= taxation_year and spouse_death_year >= taxation_year -3) = true then
																			Tax_Class_Category::Two
																			else
																			if (spouse_death_year <= taxation_year and spouse_death_year >= taxation_year -3) = false then
																				Tax_Class_Category::One_A
																				else
																				invalid
																				endif
																				endif
																				else
																				if (is_widower) = false then
																				let is_reciving_bonus_for_children:Boolean = self.getIsreceivingAllowancesForChildren(taxation_year) in													
																				/** Description: Returns yes if the taxpayer is receiving a bonus for children in household. -  **/	
																				if (is_reciving_bonus_for_children) = true then
																				Tax_Class_Category::One_A
																				else
																				if (is_reciving_bonus_for_children) = false then
																				let taxpayer_age:Integer = self.getAge(taxation_year) in													
																				/** Description: Returns the age of a given taxpayer. -  **/	
																				if (taxpayer_age >= 64) = true then
																				Tax_Class_Category::One_A
																				else
																				if (taxpayer_age >= 64) = false then
																				Tax_Class_Category::One
																				else
																				invalid
																				endif
																				endif
																				else
																				invalid
																				endif
																				endif
																				else
																				invalid
																				endif
																				endif
																				else
																				if (can_beneficiate_from_transition_state ) = true then
																				Tax_Class_Category::Two
																				else
																				invalid
																				endif
																				endif
																				else
																				invalid
																				endif
																				endif
																				else
																				invalid
																				endif
																				endif
																				else
																				if (is_resident_taxpayer) = false then
																				let is_married:Boolean = self.getIsMaried(taxation_year) in													
																				/** Description: Returns yes if the taxpayer is married. -  **/	
																				if (is_married) = false then
																				let is_taxed_jointly:Boolean = self.getIsTaxedJointly(taxation_year) in													
																				/** Description: Returns yes if the taxpayer is married or has a partnership contract. -  **/	
																				if (is_taxed_jointly) = true then
																				Tax_Class_Category::Two
																				else
																				if (is_taxed_jointly) = false then
																				let is_divorced:Boolean = self.getSeperationState(taxation_year,Separation_Causes::DIVORCE) in													
																				/** Description: Returns yes if the taxpayer is divorced within the selected taxation year. -  **/	
																				let is_living_separately:Boolean = self.getSeperationState(taxation_year,Separation_Causes::SEPARATION_DE_FAIT) in													
																				/** Description: Returns yes if the taxpayer is not cohabiting with his/her spouse. In French: "Separation de fait". -  **/	
																				let is_living_separately_by_court:Boolean = self.getSeperationState(taxation_year,Separation_Causes::SEPARATION_BY_COURT) in													
																				/** Description: Returns yes if the taxpayer has a judicial sentence dismissing him from cohabiting with his/her spouse. In French: "Separation de corps". -  **/	
																				if (is_divorced or is_living_separately_by_court or (is_living_separately and not is_resident_taxpayer)) = false then
																				let is_widower:Boolean = self.is_widower in													
																				/** Description: Returns yes if the taxpayer has the statute of widower for the current taxation year. -  **/	
																				if (is_widower) = true then
																				let spouse_death_year:Integer = self.last_start_year_widower in													
																				/** Description: Returns the year on which the spouse of the taxpayer past away. -  **/	
																				if (spouse_death_year <= taxation_year and spouse_death_year >= taxation_year -3) = true then
																					Tax_Class_Category::Two
																					else
																					if (spouse_death_year <= taxation_year and spouse_death_year >= taxation_year -3) = false then
																						Tax_Class_Category::One_A
																						else
																						invalid
																						endif
																						endif
																						else
																						if (is_widower) = false then
																						let is_reciving_bonus_for_children:Boolean = self.getIsreceivingAllowancesForChildren(taxation_year) in													
																						/** Description: Returns yes if the taxpayer is receiving a bonus for children in household. -  **/	
																						if (is_reciving_bonus_for_children) = true then
																						Tax_Class_Category::One_A
																						else
																						if (is_reciving_bonus_for_children) = false then
																						let taxpayer_age:Integer = self.getAge(taxation_year) in													
																						/** Description: Returns the age of a given taxpayer. -  **/	
																						if (taxpayer_age >= 64) = true then
																						Tax_Class_Category::One_A
																						else
																						if (taxpayer_age >= 64) = false then
																						Tax_Class_Category::One
																						else
																						invalid
																						endif
																						endif
																						else
																						invalid
																						endif
																						endif
																						else
																						invalid
																						endif
																						endif
																						else
																						if (is_divorced or is_living_separately_by_court or (is_living_separately and not is_resident_taxpayer)) = true then
																						let can_beneficiate_from_transition_state :Boolean = self.getDivorceTransitionState(taxation_year) in													
																						/** Description: Returns yes if: (1) the divorce/separation occurred within the last three years from the taxation year, and (2) the taxpayer did has not benefited from a divorce/separation transition state for the last five years from the current taxation year.  -  **/	
																						if (can_beneficiate_from_transition_state ) = false then
																						let is_widower:Boolean = self.is_widower in													
																						/** Description: Returns yes if the taxpayer has the statute of widower for the current taxation year. -  **/	
																						if (is_widower) = true then
																						let spouse_death_year:Integer = self.last_start_year_widower in													
																						/** Description: Returns the year on which the spouse of the taxpayer past away. -  **/	
																						if (spouse_death_year <= taxation_year and spouse_death_year >= taxation_year -3) = true then
																							Tax_Class_Category::Two
																							else
																							if (spouse_death_year <= taxation_year and spouse_death_year >= taxation_year -3) = false then
																								Tax_Class_Category::One_A
																								else
																								invalid
																								endif
																								endif
																								else
																								if (is_widower) = false then
																								let is_reciving_bonus_for_children:Boolean = self.getIsreceivingAllowancesForChildren(taxation_year) in													
																								/** Description: Returns yes if the taxpayer is receiving a bonus for children in household. -  **/	
																								if (is_reciving_bonus_for_children) = true then
																								Tax_Class_Category::One_A
																								else
																								if (is_reciving_bonus_for_children) = false then
																								let taxpayer_age:Integer = self.getAge(taxation_year) in													
																								/** Description: Returns the age of a given taxpayer. -  **/	
																								if (taxpayer_age >= 64) = true then
																								Tax_Class_Category::One_A
																								else
																								if (taxpayer_age >= 64) = false then
																								Tax_Class_Category::One
																								else
																								invalid
																								endif
																								endif
																								else
																								invalid
																								endif
																								endif
																								else
																								invalid
																								endif
																								endif
																								else
																								if (can_beneficiate_from_transition_state ) = true then
																								Tax_Class_Category::Two
																								else
																								invalid
																								endif
																								endif
																								else
																								invalid
																								endif
																								endif
																								else
																								invalid
																								endif
																								endif
																								else
																								if (is_married) = true then
																								let total_professional_income_household:Real = self.getProfetionalIncomeHousehold(taxation_year) in													
																								/** Description: Returns the sum of the taxpayer's household professional incomes. -  **/	
																								let sum_professional_income_household_Luxembourg:Real = self.getProfetionalIncomeHouseholdLuxembourg(taxation_year) in													
																								/** Description: Returns the sum of the taxpayer's household professional incomes that are taxed in Luxembourg. -  **/	
																								if (sum_professional_income_household_Luxembourg > (0.5 * total_professional_income_household)) = true then
																								Tax_Class_Category::Two
																								else
																								if (sum_professional_income_household_Luxembourg > (0.5 * total_professional_income_household)) = false then
																								Tax_Class_Category::One_A
																								else
																								invalid
																								endif
																								endif
																								else
																								invalid
																								endif
																								endif
																								else
																								invalid
																								endif
																								endif
																								"/>
																							</EAnnotation>
																							<EParameter name="taxation_year" lowerBound="1" type="EBigInteger"/>
																						</EOperation>
																						<EOperation name="getProfetionalIncomeHousehold" lowerBound="1" type="EBigDecimal">
																							<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
																								<EStringToStringMapEntry key="body" value="
																								let spouse:Physical_Person= self.getSpouse(year)in
																								let include_spouse:Boolean= if(not spouse.oclIsUndefined()) then spouse.oclIsKindOf(Tax_Payer) else false endif in
																								let myIncomes:Set(Income)=self.incomes->select(i:Income|i.year=year and i.income_type.oclIsKindOf(Employment_Income)) in
																									let myPart:Real= if(myIncomes->oclIsInvalid())then 0.0 else myIncomes.income_amount->sum() endif in
																									
																									if(include_spouse=false)then
																									myPart
																									else
																									let herIncomes:Set(Income)=spouse.oclAsType(Tax_Payer).incomes->select(i:Income|i.year=year and i.income_type.oclIsKindOf(Employment_Income)) in
																									let herPart:Real=if(herIncomes->oclIsInvalid())then 0.0 else herIncomes.income_amount->sum() endif in
																									myPart+herPart
																									endif"/>
																								</EAnnotation>
																								<EParameter name="year" lowerBound="1" type="EBigInteger"/>
																							</EOperation>
																							<EOperation name="getProfetionalIncomeHouseholdLuxembourg" lowerBound="1" type="EBigDecimal">
																								<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
																									<EStringToStringMapEntry key="body" value="
																									let spouse:Physical_Person= self.getSpouse(year)in
																									let include_spouse:Boolean= if(not spouse.oclIsUndefined()) then spouse.oclIsKindOf(Tax_Payer) else false endif in
																									let myIncomes:Set(Income)=self.incomes->select(i:Income|i.year=year and i.income_type.oclIsKindOf(Employment_Income) and i.oclIsTypeOf(Local_Income)) in
																										let myPart:Real=if(myIncomes->oclIsInvalid())then 0.0 else myIncomes.income_amount->sum() endif in
																										
																										if(include_spouse=false)then
																										myPart
																										else
																										let herIncomes:Set(Income)=spouse.oclAsType(Tax_Payer).incomes->select(i:Income|i.year=year and i.income_type.oclIsKindOf(Employment_Income)and i.oclIsTypeOf(Local_Income)) in
																										let herPart:Real=if(herIncomes->oclIsInvalid())then 0.0 else  herIncomes.income_amount->sum() endif in
																										myPart+herPart
																										endif"/>
																									</EAnnotation>
																									<EParameter name="year" lowerBound="1" type="EBigInteger"/>
																								</EOperation>
																								<EOperation name="getIsreceivingAllowancesForChildren" lowerBound="1" type="EBoolean">
																									<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
																										<EStringToStringMapEntry key="body" value="
																										let children1:Set(Dependent)=self.dependents->select(dependent_type=Dependent_Type::CHILD) in
																											let union:Legal_Union_Record=self.getLegalUnionRecord(year) in
																											let house: Household = union.household in
																											let children:Set(Dependent)=if (house.oclIsInvalid()) then children1 else children1->union(house.children->select(allowances->exists(ending_year=-1 and amount>0 and reciver=self))) endif in
																											if(children->size()=0)then
																											false
																											else		
																											let allowances:Boolean=children.allowances->select(starting_year<=year and ending_year=-1 and amount>0)->size()>0in
																												if(allowances)then
																												true
																												else
																												false
																												endif			
																												endif"/>
																											</EAnnotation>
																											<EParameter name="year" lowerBound="1" type="EBigInteger"/>
																										</EOperation>
																										<EOperation name="getIsTaxedJointly" lowerBound="1" type="EBoolean">
																											<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
																												<EStringToStringMapEntry key="body" value="
																												let is_married:Boolean = if(self.getLegalUnionRecord(year).oclIsUndefined()) then false else self.getLegalUnionRecord(year).oclIsTypeOf(Marriage_Record) endif in													
																												/** Description: - **/	
																												if (is_married) = false then
																												let is_in_partnership_relation:Boolean = if(self.getLegalUnionRecord(year).oclIsUndefined()) then false else self.getLegalUnionRecord(year).oclIsTypeOf(Partnership_Record) endif in													
																												/** Description: -  **/	
																												if (is_in_partnership_relation) = false then
																												false
																												else
																												if (is_in_partnership_relation) = true then
																												let is_joint_tax_beneficial:Boolean = true in													
																												/** Description: -  **/	
																												if (is_joint_tax_beneficial) = true then
																												let is_couple_living_apart:Boolean = false in													
																												/** Description: -  **/	
																												let relation_lasted_for_the_taxation_year:Boolean = true  in													
																												/** Description: -  **/	
																												if (relation_lasted_for_the_taxation_year and not is_couple_living_apart) = false then
																												false
																												else
																												if (relation_lasted_for_the_taxation_year and not is_couple_living_apart) = true then
																												let are_both_spouses_resident:Boolean = (self.getSpouse(year).oclIsTypeOf(Resident_Tax_Payer) or self.getSpouse(year).oclIsTypeOf(Physical_Person)) and self.oclIsTypeOf(Resident_Tax_Payer) in													
																												/** Description: -  **/	
																												if (are_both_spouses_resident) = true then
																												true
																												else
																												if (are_both_spouses_resident) = false then
																												let are_both_spouses_non_resident:Boolean = (self.getSpouse(year).oclIsTypeOf(Non_Resident_Tax_Payer) or self.getSpouse(year).oclIsTypeOf(Physical_Person)) and self.oclIsTypeOf(Non_Resident_Tax_Payer) in													
																												/** Description: -  **/	
																												if (are_both_spouses_non_resident) = false then
																												false
																												else
																												if (are_both_spouses_non_resident) = true then
																												let my_incomes_all:Set(Income) = self.incomes->select(i:Income|i.year=year and i.oclIsTypeOf(Local_Income)) 
																													in													
																													/** Description: -  **/	
																													let spouse_incomes_all:Set(Income) = if(self.getSpouse(year).oclIsKindOf(Tax_Payer)) then self.getSpouse(year).oclAsType(Tax_Payer).incomes->select(i:Income|i.year=year and i.oclIsTypeOf(Local_Income)) else OrderedSet{} endif	in													
																													/** Description: -  **/	
																													let total_household_income:Real = if(my_incomes_all->oclIsInvalid() and spouse_incomes_all->oclIsInvalid()) then 0 else if(my_incomes_all->oclIsInvalid()) then spouse_incomes_all.income_amount->sum() else if(spouse_incomes_all->oclIsInvalid()) then my_incomes_all.income_amount->sum() else my_incomes_all.income_amount->sum() + spouse_incomes_all.income_amount->sum()  endif endif endif
																													in													
																													/** Description: -  **/	
																													let resident_taxpayer_income:Real = if(self.oclIsTypeOf(Resident_Tax_Payer)) then if(my_incomes_all->oclIsInvalid()) then 0.0 else my_incomes_all.income_amount->sum() endif else if(spouse_incomes_all->oclIsInvalid()) then 0.0 else spouse_incomes_all.income_amount->sum() endif endif in													
																													/** Description: -  **/	
																													let non_resident_taxpayer_in_Belgium:Boolean = false in													
																													/** Description: -  **/	
																													if ((resident_taxpayer_income > total_household_income * 0.9) or (non_resident_taxpayer_in_Belgium and resident_taxpayer_income > total_household_income * 0.5)) = true then
																													true
																													else
																													if ((resident_taxpayer_income > total_household_income * 0.9) or (non_resident_taxpayer_in_Belgium and resident_taxpayer_income > total_household_income * 0.5)) = false then
																													false
																													else
																													invalid
																													endif
																													endif
																													else
																													invalid
																													endif
																													endif
																													else
																													invalid
																													endif
																													endif
																													else
																													invalid
																													endif
																													endif
																													else
																													if (is_joint_tax_beneficial) = false then
																													false
																													else
																													invalid
																													endif
																													endif
																													else
																													invalid
																													endif
																													endif
																													else
																													if (is_married) = true then
																													let are_both_spouses_resident:Boolean = (self.getSpouse(year).oclIsTypeOf(Resident_Tax_Payer) or self.getSpouse(year).oclIsTypeOf(Physical_Person)) and self.oclIsTypeOf(Resident_Tax_Payer) in													
																													/** Description: -  **/	
																													if (are_both_spouses_resident) = true then
																													true
																													else
																													if (are_both_spouses_resident) = false then
																													let are_both_spouses_non_resident:Boolean = (self.getSpouse(year).oclIsTypeOf(Non_Resident_Tax_Payer) or self.getSpouse(year).oclIsTypeOf(Physical_Person)) and self.oclIsTypeOf(Non_Resident_Tax_Payer) in													
																													/** Description: -  **/	
																													if (are_both_spouses_non_resident) = true then
																													let my_incomes_all:Set(Income) = self.incomes->select(i:Income|i.year=year and i.oclIsTypeOf(Local_Income)) 
																													in													
																													/** Description: -  **/	
																													let spouse_incomes_all:Set(Income) = if(self.getSpouse(year).oclIsKindOf(Tax_Payer)) then self.getSpouse(year).oclAsType(Tax_Payer).incomes->select(i:Income|i.year=year and i.oclIsTypeOf(Local_Income)) else OrderedSet{} endif	in													
																													/** Description: -  **/	
																													let total_household_income:Real = if(my_incomes_all->oclIsInvalid() and spouse_incomes_all->oclIsInvalid()) then 0 else if(my_incomes_all->oclIsInvalid()) then spouse_incomes_all.income_amount->sum() else if(spouse_incomes_all->oclIsInvalid()) then my_incomes_all.income_amount->sum() else my_incomes_all.income_amount->sum() + spouse_incomes_all.income_amount->sum()  endif endif endif
																													in													
																													/** Description: -  **/	
																													let resident_taxpayer_income:Real = if(self.oclIsTypeOf(Resident_Tax_Payer)) then if(my_incomes_all->oclIsInvalid()) then 0.0 else my_incomes_all.income_amount->sum() endif else if(spouse_incomes_all->oclIsInvalid()) then 0.0 else spouse_incomes_all.income_amount->sum() endif endif in													
																													/** Description: -  **/	
																													let non_resident_taxpayer_in_Belgium:Boolean = false in													
																													/** Description: -  **/	
																													let is_couple_assimilated_to_residents:Boolean = (resident_taxpayer_income > total_household_income * 0.9) or (non_resident_taxpayer_in_Belgium and resident_taxpayer_income > total_household_income * 0.5) in													
																													/** Description: -  **/	
																													if (is_couple_assimilated_to_residents) = true then
																													true
																													else
																													if (is_couple_assimilated_to_residents) = false then
																													let is_couple_living_apart:Boolean = false in													
																													/** Description: -  **/	
																													if (is_couple_living_apart) = true then
																													false
																													else
																													if (is_couple_living_apart) = false then
																													let my_incomes:Set(Income) = self.incomes->select(i:Income|i.year=year and i.income_type.oclIsKindOf(Employment_Income) and i.oclIsTypeOf(Local_Income)) 	in													
																													/** Description: -  **/	
																													let spouse_incomes:Set(Income) = if(self.getSpouse(year).oclIsKindOf(Tax_Payer)) then self.getSpouse(year).oclAsType(Tax_Payer).incomes->select(i:Income|i.year=year and i.income_type.oclIsKindOf(Employment_Income) and i.oclIsTypeOf(Local_Income)) else OrderedSet{} endif	in													
																													/** Description: -  **/	
																													let both_spouses_have_professional_income:Boolean = if(my_incomes->oclIsInvalid() or spouse_incomes->oclIsInvalid()) then false else my_incomes->size()>0 and spouse_incomes->size()>0 endif in													
																													/** Description: -  **/	
																													if (both_spouses_have_professional_income) = true then
																													let local_professional_household_income:Real = self.getProfetionalIncomeHouseholdLuxembourg(year) in													
																													/** Description: -  **/	
																													let total_professional_household_income:Real = self.getProfetionalIncomeHousehold(year) in													
																													/** Description: -  **/	
																													if (local_professional_household_income   > total_professional_household_income * 0.5) = false then
																													false
																													else
																													if (local_professional_household_income   > total_professional_household_income * 0.5) = true then
																													true
																													else
																													invalid
																													endif
																													endif
																													else
																													if (both_spouses_have_professional_income) = false then
																													false
																													else
																													invalid
																													endif
																													endif
																													else
																													invalid
																													endif
																													endif
																													else
																													invalid
																													endif
																													endif
																													else
																													if (are_both_spouses_non_resident) = false then
																													let is_couple_living_apart:Boolean = false in													
																													/** Description: -  **/	
																													if (is_couple_living_apart) = true then
																													false
																													else
																													if (is_couple_living_apart) = false then
																													let my_incomes:Set(Income) = self.incomes->select(i:Income|i.year=year and i.income_type.oclIsKindOf(Employment_Income) and i.oclIsTypeOf(Local_Income)) 	in													
																													/** Description: -  **/	
																													let spouse_incomes:Set(Income) = if(self.getSpouse(year).oclIsKindOf(Tax_Payer)) then self.getSpouse(year).oclAsType(Tax_Payer).incomes->select(i:Income|i.year=year and i.income_type.oclIsKindOf(Employment_Income) and i.oclIsTypeOf(Local_Income)) else OrderedSet{} endif	in													
																													/** Description: -  **/	
																													let both_spouses_have_professional_income:Boolean = if(my_incomes->oclIsInvalid() or spouse_incomes->oclIsInvalid()) then false else my_incomes->size()>0 and spouse_incomes->size()>0 endif in													
																													/** Description: -  **/	
																													if (both_spouses_have_professional_income) = true then
																													let total_professional_household_income:Real = self.getProfetionalIncomeHousehold(year) in													
																													/** Description: -  **/	
																													let professional_income_resident_taxpayer:Real = if(self.oclIsTypeOf(Resident_Tax_Payer)) then if(my_incomes->oclIsInvalid()) then 0.0 else my_incomes.income_amount->sum() endif else if(spouse_incomes->oclIsInvalid()) then 0.0 else spouse_incomes.income_amount->sum() endif endif in													
																													/** Description: -  **/	
																													if (professional_income_resident_taxpayer > total_professional_household_income * 0.9) = false then
																													false
																													else
																													if (professional_income_resident_taxpayer > total_professional_household_income * 0.9) = true then
																													true
																													else
																													invalid
																													endif
																													endif
																													else
																													if (both_spouses_have_professional_income) = false then
																													false
																													else
																													invalid
																													endif
																													endif
																													else
																													invalid
																													endif
																													endif
																													else
																													invalid
																													endif
																													endif
																													else
																													invalid
																													endif
																													endif
																													else
																													invalid
																													endif
																													endif
																													"/>
																												</EAnnotation>
																												<EParameter name="year" lowerBound="1" type="EBigInteger"/>
																											</EOperation>
																											<EOperation name="is_dependent_part_of_the_household" lowerBound="1" type="EBoolean">
																												<EParameter name="IN_dependent" lowerBound="1" type="Dependent"/>
																											</EOperation>
																											<EOperation name="number_of_months_of_allowance" lowerBound="1" type="EBigInteger"/>
																											<EOperation name="deduction_according_disability_rate" lowerBound="1" type="EBigDecimal">
																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																													<EStringToStringMapEntry key="documentation" value="Operation*"/>
																												</EAnnotation>
																												<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
																													<EStringToStringMapEntry key="body" value="if ( self.disability_percentage >= 0.25 and  self.disability_percentage < 0.35) then
																														150
																														else if ( self.disability_percentage >= 0.35  and self.disability_percentage < 0.45) then
																															225
																															else if ( self.disability_percentage >=0.45 and  self.disability_percentage <0.55) then
																																375
																																else if ( self.disability_percentage >= 0.55 and  self.disability_percentage < 0.65 ) then
																																	450 
																																	else if ( self.disability_percentage >= 0.65 and self.disability_percentage < 0.75) then
																																		525
																																		else if ( self.disability_percentage >=0.75 and self.disability_percentage < 0.85) then
																																			585
																																			else if ( self.disability_percentage >=0.85 and  self.disability_percentage<  0.95) then
																																				645
																																				else if ( self.disability_percentage >= 0.95 and self.disability_percentage<=1)then
																																					735 else 0 endif endif endif endif endif endif endif endif"/>
																																				</EAnnotation>
																																			</EOperation>
																																			<attr name="AEP_deduction" lowerBound="1" defaultValueLiteral="0" type="//EDouble"/>
																																			<ref name="incomes" ordered="false" lowerBound="1" upperBound="-1" containment="true" type="Income"/>
																																			<ref name="income_Tax_Credit" ordered="false" upperBound="-1" type="Income_Tax_Credit"/>
																																			<ref name="dependents" ordered="false" upperBound="-1" containment="true" type="Dependent"/>
																																			<ref name="incomeTax" type="Income_Tax"/>
																																			<ref name="from_law" lowerBound="1" containment="true" type="FromLaw"/>
																																			<ref name="from_agent" lowerBound="1" containment="true" type="FromAgent"/>
																																		</class>
																																		<class name="Physical_Person">
																																			<EOperation name="is_separated_from" lowerBound="1" type="EBoolean">
																																				<EParameter name="IN_person" lowerBound="1" type="Physical_Person"/>
																																			</EOperation>
																																			<EOperation name="is_person_affiliated_personnaly_to_social_security" lowerBound="1" type="EBoolean"/>
																																			<EOperation name="getIsMaried" lowerBound="1" type="EBoolean">
																																				<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
																																					<EStringToStringMapEntry key="body" value="
																																					
																																					let legel_unions:Set(Legal_Union_Record)=Legal_Union_Record.allInstances()->select( ((individual_A=self or individual_B=self) and oclIsKindOf(Marriage_Record))) in
																																						
																																						if(legel_unions->size()=0) then
																																						false
																																						else
																																						let possible_unions:Set(Legal_Union_Record)=legel_unions->select(start_year<=year)in
																																						let lasted_union:Legal_Union_Record= possible_unions->select(start_year=possible_unions.start_year->max())->any(true) in
																																							if(lasted_union.end_year=-1)then
																																							true
																																							else
																																							false
																																							endif
																																							endif"/>
																																						</EAnnotation>
																																						<EParameter name="year" lowerBound="1" type="EBigInteger"/>
																																					</EOperation>
																																					<EOperation name="getLegalUnionRecord" lowerBound="1" type="Legal_Union_Record">
																																						<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
																																							<EStringToStringMapEntry key="body" value="
																																							
																																							let legel_unions:Set(Legal_Union_Record)=Legal_Union_Record.allInstances()->select( ((individual_A=self or individual_B=self))) in
																																								
																																								if(legel_unions->size()=0) then			
																																								invalid
																																								else
																																								let possible_unions:Set(Legal_Union_Record)=legel_unions->select(start_year<=year)in
																																								let lasted_union:Legal_Union_Record= possible_unions->select(start_year=possible_unions.start_year->max())->any(true) in
																																									if(lasted_union.end_year=-1)then
																																									lasted_union
																																									else
																																									invalid
																																									endif
																																									endif"/>
																																								</EAnnotation>
																																								<EParameter name="year" lowerBound="1" type="EBigInteger"/>
																																							</EOperation>
																																							<EOperation name="getSpouse" lowerBound="1" type="Physical_Person">
																																								<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
																																									<EStringToStringMapEntry key="body" value="
																																									
																																									let legel_unions:Set(Legal_Union_Record)=Legal_Union_Record.allInstances()->select( ((individual_A=self or individual_B=self))) in
																																										
																																										if(legel_unions->size()=0) then
																																										let union:Legal_Union_Record=self.getLegalUnionRecord(year) in 
																																										if(union.oclIsInvalid())then
																																										invalid
																																										else
																																										if(union.individual_B=self) then union.individual_A.oclAsType(Physical_Person) else union.individual_B.oclAsType(Physical_Person) endif endif
																																										else
																																										let possible_unions:Set(Legal_Union_Record)=legel_unions->select(start_year<=year)in
																																										let lasted_union:Legal_Union_Record= possible_unions->select(start_year=possible_unions.start_year->max())->any(true) in
																																											if(lasted_union.end_year=-1)then
																																											
																																											if(lasted_union.individual_A=self)then
																																											lasted_union.individual_B
																																											else
																																											lasted_union.individual_A
																																											endif
																																											else
																																											invalid
																																											endif
																																											endif"/>
																																										</EAnnotation>
																																										<EParameter name="year" lowerBound="1" type="EBigInteger"/>
																																									</EOperation>
																																									<EOperation name="getDivorceTransitionState" lowerBound="1" type="EBoolean">
																																										<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
																																											<EStringToStringMapEntry key="body" value="
																																											let sep_year:Integer=self.getSeperationYear(year) in
																																											if(sep_year=-1)then
																																											false
																																											else
																																											if( (sep_year <= year and sep_year >= (year -3))=false) then
																																												false
																																												else
																																												let past_sep_year:Integer=self.getSeperationYear(year-5) in
																																												if(past_sep_year=-1)then
																																												true
																																												else
																																												false
																																												endif
																																												endif
																																												endif
																																												"/>
																																											</EAnnotation>
																																											<EParameter name="year" lowerBound="1" type="EBigInteger"/>
																																										</EOperation>
																																										<EOperation name="getSeperationYear" lowerBound="1" type="EBigInteger">
																																											<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
																																												<EStringToStringMapEntry key="body" value="
																																												
																																												let legel_unions:Set(Legal_Union_Record)=Legal_Union_Record.allInstances()->select(individual_A=self or individual_B=self) in
																																													
																																													if(legel_unions->size()=0) then
																																													-1
																																													else
																																													let possible_unions:Set(Legal_Union_Record)=legel_unions->select(start_year<=year)in
																																													let lasted_union:Legal_Union_Record= possible_unions->select(start_year=possible_unions.start_year->max())->any(true) in
																																														if(lasted_union.oclIsUndefined()) then
																																														-1
																																														else
																																														if(lasted_union.end_year=-1)then
																																														-1
																																														else
																																														lasted_union.end_year
																																														endif
																																														endif
																																														endif"/>
																																													</EAnnotation>
																																													<EParameter name="year" lowerBound="1" type="EBigInteger"/>
																																												</EOperation>
																																												<EOperation name="getSeperationState" lowerBound="1" type="EBoolean">
																																													<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
																																														<EStringToStringMapEntry key="body" value="
																																														let legel_unions:Set(Legal_Union_Record)=Legal_Union_Record.allInstances()->select(individual_A=self or individual_B=self) in
																																															
																																															if(legel_unions->size()=0) then
																																															false
																																															else
																																															let possible_unions:Set(Legal_Union_Record)=legel_unions->select(start_year<=year)in
																																															let lasted_union:Legal_Union_Record= possible_unions->select(start_year=possible_unions.start_year->max())->any(true) in
																																																if(lasted_union.end_year=-1)then
																																																false
																																																else
																																																lasted_union.separation_cause=seperation_type
																																																endif
																																																endif"/>
																																															</EAnnotation>
																																															<EParameter name="year" lowerBound="1" type="EBigInteger"/>
																																															<EParameter name="seperation_type" lowerBound="1" type="Separation_Causes"/>
																																														</EOperation>
																																														<EOperation name="getAge" lowerBound="1" type="EBigInteger">
																																															<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
																																																<EStringToStringMapEntry key="body" value="
																																																if(birth_year>=year )then
																																																	0
																																																	else
																																																	let age:Integer=year-birth_year+1 in
																																																	if(birth_month=1 and birth_day=1) then
																																																	age+1
																																																	else
																																																	age
																																																	endif
																																																	endif"/>
																																																</EAnnotation>
																																																<EParameter name="year" lowerBound="1" type="EBigInteger"/>
																																															</EOperation>
																																															<attr name="is_assisting_spouse" lowerBound="1" volatile="true" derived="true" type="//EBoolean"/>
																																															<attr name="SSNo" lowerBound="1" type="//EString"/>
																																															<ref name="addresses" ordered="false" upperBound="-1" type="Address"/>
																																															<ref name="expenses" ordered="false" upperBound="-1" type="Expense"/>
																																															<attr name="birth_year" lowerBound="1" volatile="true" derived="true" type="//EInt">
																																																<EAnnotation source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
																																																	<EStringToStringMapEntry key="body" value="External_Allowance"/>
																																																	<EStringToStringMapEntry key="unique" value="false"/>
																																																	<EStringToStringMapEntry key="upper" value="*"/>
																																																</EAnnotation>
																																															</attr>
																																															<attr name="birth_month" lowerBound="1" type="//EInt"/>
																																															<attr name="birth_day" lowerBound="1" type="//EInt"/>
																																															<attr name="disability_percentage" lowerBound="1" defaultValueLiteral="0" type="//EDouble"/>
																																															<attr name="disability_type" lowerBound="1" type="//Disability_Types"/>
																																															<attr name="is_affiliated_personnaly_to_social_security" lowerBound="1" type="//EBoolean"/>
																																															<attr name="name" lowerBound="1" type="//EString"/>
																																															<attr name="is_widower" lowerBound="1" type="//EBoolean"/>
																																															<attr name="last_start_year_widower" lowerBound="1" type="//EBigInteger"/>
																																														</class>
																																														<class name="External_Allowance">
																																															<EOperation name="getAmount" lowerBound="1" type="EDouble">
																																																<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
																																																	<EStringToStringMapEntry key="body" value=" if(dep_age>=6 and dep_age<=11) then
																																																		round_lower_euros(base + 16.17)
																																																		else if (dep_age>=12) then round_lower_euros(base + 48.52) else 
																																																			if(is_disabled) then round_lower_euros(base + 185.60) else base endif endif endif"/>
																																																		</EAnnotation>
																																																		<EParameter name="base" lowerBound="1" type="EDouble"/>
																																																		<EParameter name="dep_age" lowerBound="1" type="EBigInteger"/>
																																																		<EParameter name="is_disabled" lowerBound="1" type="EBoolean"/>
																																																	</EOperation>
																																																	<EOperation name="round_lower_euros" lowerBound="1" type="EDouble">
																																																		<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
																																																			<EStringToStringMapEntry key="body" value="let p1:Integer = amount.floor() in
																																																			p1.toString().toReal()"/>
																																																		</EAnnotation>
																																																		<EParameter name="amount" lowerBound="1" type="EDouble"/>
																																																	</EOperation>
																																																	<attr name="amount" lowerBound="1" type="//EDouble"/>
																																																	<attr name="grantor" lowerBound="1" type="//Grantor"/>
																																																	<attr name="starting_year" lowerBound="1" type="//EInt"/>
																																																	<attr name="ending_year" lowerBound="1" type="//EInt"/>
																																																	<ref name="reciver" lowerBound="1" type="Physical_Person"/>
																																																	<ref name="person" lowerBound="1" type="Dependent"/>
																																																</class>
																																																<class name="Address">
																																																	<attr name="country" lowerBound="1" defaultValueLiteral="LU" type="//Country"/>
																																																	<attr name="street" lowerBound="1" type="//EString"/>
																																																	<attr name="zipCode" lowerBound="1" type="//EString"/>
																																																	<attr name="city" lowerBound="1" type="//EString"/>
																																																	<ref name="taxPayer" ordered="false" lowerBound="1" upperBound="-1" type="Physical_Person"/>
																																																</class>
																																																<class name="Legal_Union_Record" abstract="true">
																																																	<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore">
																																																		<EStringToStringMapEntry key="constraints" value="test"/>
																																																	</EAnnotation>
																																																	<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
																																																		<EStringToStringMapEntry key="test" value="self.properties->size()>0"/>
																																																		</EAnnotation>
																																																		<attr name="mutual_agreement" lowerBound="1" type="//EBoolean"/>
																																																		<attr name="start_year" lowerBound="1" type="//EInt"/>
																																																		<attr name="end_year" lowerBound="1" type="//EInt"/>
																																																		<attr name="separation_cause" lowerBound="1" type="//Separation_Causes"/>
																																																		<ref name="individual_A" lowerBound="1" containment="true" type="Physical_Person"/>
																																																		<ref name="individual_B" lowerBound="1" containment="true" type="Physical_Person"/>
																																																		<ref name="household" lowerBound="1" type="Household"/>
																																																		<ref name="properties" lowerBound="1" containment="true" type="Tax_Property"/>
																																																	</class>
																																																	<class name="Dependent">
																																																		<EOperation name="compute_if_dependent_receives_allowances_eligible_for_CIM" lowerBound="1" type="EBoolean"/>
																																																		<EOperation name="compute_if_dependent_receives_allowances_eligible_for_DS" lowerBound="1" type="EBoolean"/>
																																																		<EOperation name="compute_if_dependent_receives_allowances_eligible_for_CE_dependance_and_care" lowerBound="1" type="EBoolean"/>
																																																		<EOperation name="is_dependent_following_continued_studies" lowerBound="1" type="EBoolean">
																																																			<EParameter name="IN_continued_studies" lowerBound="1" type="EBoolean"/>
																																																		</EOperation>
																																																		<attr name="dependent_type" lowerBound="1" type="//Dependent_Type"/>
																																																		<attr name="continued_studies" lowerBound="1" defaultValueLiteral="false" type="//EBoolean"/>
																																																		<ref name="responsible_person" type="Tax_Payer"/>
																																																		<ref name="expense" ordered="false" upperBound="-1" type="Expense"/>
																																																		<ref name="allowances" ordered="false" upperBound="-1" containment="true" type="External_Allowance"/>
																																																		<ref name="household" type="Household"/>
																																																		<ref name="from_agent" lowerBound="1" type="FromAgent"/>
																																																	</class>
																																																	<class name="Household">
																																																		<ref name="parents" lowerBound="1" containment="true" type="Legal_Union_Record"/>
																																																		<ref name="children" ordered="false" upperBound="-1" containment="true" type="Dependent"/>
																																																	</class>
																																																	<class name="Fiscal_Address"/>
																																																	<class name="Tax_Case" abstract="true" interface="true"/>
																																																	<class name="Habitual_Address"/>
																																																	<class name="Marriage_Record"/>
																																																	<class name="Non_Resident_Tax_Payer">
																																																		<attr name="is_assimilated_to_resident" lowerBound="1" defaultValueLiteral="false" type="//EBoolean"/>
																																																	</class>
																																																	<class name="Partnership_Record"/>
																																																	<class name="Resident_Tax_Payer">
																																																		<attr name="test" lowerBound="1" derived="true" type="//EBoolean">
																																																			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
																																																				<EStringToStringMapEntry key="derivation" value="self.oclAsType(Tax_Payer).from_agent.taxation_year=2014"/>
																																																			</EAnnotation>
																																																		</attr>
																																																	</class>
																																																	<class name="Income_Type" abstract="true">
																																																		<ref name="income" lowerBound="1" type="Income"/>
																																																		<attr name="subjectToWithholdingTax" lowerBound="1" derived="true" type="//EBoolean">
																																																			<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
																																																				<EStringToStringMapEntry key="derivation" value="
																																																				self.income.tax_card->notEmpty()
																																																					"/>
																																																				</EAnnotation>
																																																			</attr>
																																																		</class>
																																																		<class name="Trade_and_Business_Income"/>
																																																		<class name="Agriculture_and_Forestry_Income"/>
																																																		<class name="Independent_Professional_Services_Income"/>
																																																		<class name="Pensions_and_Annuities_Income">
																																																			<attr name="occasional_payement" defaultValueLiteral="false" type="//EBoolean"/>
																																																		</class>
																																																		<class name="Capital_and_Investments_Income"/>
																																																		<class name="Employment_Income"/>
																																																		<class name="Rentals_and_Leases_Income">
																																																			<attr name="is_periodic" lowerBound="1" defaultValueLiteral="true" type="//EBoolean"/>
																																																		</class>
																																																		<class name="Sundry_Income"/>
																																																		<class name="Directors_Fee"/>
																																																		<class name="Foreign_Income"/>
																																																		<class name="Local_Income"/>
																																																		<class name="Income" abstract="true">
																																																			<EOperation name="compute_duration_of_contract" lowerBound="1" type="EBigInteger"/>
																																																			<EOperation name="compute_duration_of_contract_within_taxation_year" lowerBound="1" type="EBigInteger">
																																																				<EParameter name="IN_date" lowerBound="1" type="EDate"/>
																																																			</EOperation>
																																																			<EOperation name="getDurationInyears" lowerBound="1" type="EBigInteger">
																																																				<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
																																																					<EStringToStringMapEntry key="body" value="
																																																					if(self.income_type.oclIsTypeOf(Pensions_and_Annuities_Income)) then 
																																																					if(start_year.oclIsUndefined())then
																																																					-1
																																																					else
																																																					let res:Integer=self.taxPayer.from_agent.taxation_year-start_year in
																																																					if(res<0) then
																																																					0
																																																					else
																																																					res
																																																					endif
																																																					endif
																																																					else
																																																					-1
																																																					endif"/>
																																																				</EAnnotation>
																																																			</EOperation>
																																																			<EOperation name="prorata_worked_months" lowerBound="1" type="EBigInteger">
																																																				<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
																																																					<EStringToStringMapEntry key="body" value="self.details->select(is_worked)->size()"/>
																																																					</EAnnotation>
																																																				</EOperation>
																																																				<EOperation name="prorata_worked_days" lowerBound="1" type="EBigInteger">
																																																					<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
																																																						<EStringToStringMapEntry key="body" value="let a:Set(Income_Detail)=self.details->select(is_worked) in  
																																																							a.worked_days->sum().mod(25)"/>
																																																						</EAnnotation>
																																																					</EOperation>
																																																					<EOperation name="prorata_period" lowerBound="1" type="EBigDecimal">
																																																						<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
																																																							<EStringToStringMapEntry key="body" value="
																																																							let nb_months:Integer=self.prorata_worked_months()in
																																																							let nb_days:Integer=self.prorata_worked_days()in
																																																							if(nb_months=12) then
																																																							1
																																																							else 
																																																							nb_months/12 + nb_days/300
																																																							endif"/>
																																																						</EAnnotation>
																																																					</EOperation>
																																																					<EOperation name="income_per_day" lowerBound="1" type="EBigDecimal">
																																																						<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
																																																							<EStringToStringMapEntry key="body" value="income_per_year()/300"/>
																																																						</EAnnotation>
																																																					</EOperation>
																																																					<EOperation name="income_per_month" lowerBound="1" type="EBigDecimal">
																																																						<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
																																																							<EStringToStringMapEntry key="body" value="income_per_year()/12"/>
																																																						</EAnnotation>
																																																					</EOperation>
																																																					<EOperation name="income_per_year" lowerBound="1" type="EBigDecimal">
																																																						<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
																																																							<EStringToStringMapEntry key="body" value="
																																																							let involved_details:Set(Income_Detail)=self.details->select(i:Income_Detail| i.is_worked=true) in
																																																								involved_details.amount->sum()"/>
																																																							</EAnnotation>
																																																						</EOperation>
																																																						<ref name="income_type" lowerBound="1" containment="true" type="Income_Type"/>
																																																						<attr name="start_date_within_taxation_year" lowerBound="1" type="//EDate"/>
																																																						<attr name="num" lowerBound="1" type="//EInt"/>
																																																						<attr name="start_date_of_contract" lowerBound="1" type="//EDate"/>
																																																						<attr name="end_date_within_taxation_year" lowerBound="1" type="//EDate"/>
																																																						<ref name="tax_card" containment="true" type="Tax_Card"/>
																																																						<ref name="expenses" ordered="false" upperBound="-1" containment="true" type="Expense"/>
																																																						<attr name="tax_liability" type="//EDouble"/>
																																																						<ref name="taxPayer" lowerBound="1" type="Tax_Payer"/>
																																																						<attr name="year" type="//EInt"/>
																																																						<attr name="start_year" type="//EInt"/>
																																																						<ref name="details" lowerBound="12" upperBound="12" containment="true" type="Income_Detail"/>
																																																						<attr name="income_amount" lowerBound="1" derived="true" type="//EBigDecimal">
																																																							<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
																																																								<EStringToStringMapEntry key="derivation" value="let non_null_amounts:OrderedSet(Income_Detail)=self.details->select(det:Income_Detail|det.amount>0)->asOrderedSet() in
																																																									non_null_amounts->collect(amount)->min() "/>
																																																								</EAnnotation>
																																																							</attr>
																																																						</class>
																																																						<class name="Tax_Card">
																																																							<EOperation name="getSumDeductionsYear" lowerBound="1" type="EBigDecimal">
																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																									<EStringToStringMapEntry key="documentation" value="TO be added each time a model is validated"/>
																																																								</EAnnotation>
																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
																																																									<EStringToStringMapEntry key="body" value="deduction_FO_yearly+deduction_FD_yearly+deduction_CE_invalidity_yearly"/>
																																																								</EAnnotation>
																																																							</EOperation>
																																																							<EOperation name="getSumCreditsYear" lowerBound="1" type="EBigDecimal">
																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
																																																									<EStringToStringMapEntry key="body" value="credit_CIS_yearly+credit_CIP_yearly"/>
																																																								</EAnnotation>
																																																							</EOperation>
																																																							<attr name="card_identifier" type="//EString"/>
																																																							<attr name="tax_card_type" lowerBound="1" derived="true" type="//Tax_Card_Type">
																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
																																																									<EStringToStringMapEntry key="derivation" value="
																																																									if(self.income.taxPayer.incomes->size()=1) then 
																																																										Tax_Card_Type::Principal
																																																										else
																																																										let all_incomes:OrderedSet(Income)=self.income.taxPayer.incomes->select(inc:Income| inc.income_amount= self.income.taxPayer.incomes.income_amount->max())->asOrderedSet() in
																																																										let bigest_income:Income= all_incomes->first() in
																																																										if(bigest_income=self.income) then
																																																										Tax_Card_Type::Principal
																																																										else
																																																										Tax_Card_Type::Additional
																																																										endif
																																																										endif
																																																										"/>
																																																									</EAnnotation>
																																																								</attr>
																																																								<attr name="tax_office" type="//Tax_Office"/>
																																																								<attr name="valid_from_date" type="//EDate"/>
																																																								<attr name="valid_until_date" type="//EDate"/>
																																																								<attr name="percentage_of_witholding" lowerBound="1" volatile="true" derived="true" type="//EDouble"/>
																																																								<attr name="tax_payers_name_surname" ordered="false" upperBound="-1" volatile="true" derived="true" type="//EString"/>
																																																								<attr name="tax_payers_partner_name_surname" ordered="false" upperBound="-1" volatile="true" derived="true" type="//EString"/>
																																																								<ref name="tax_payers_address" lowerBound="1" type="Address"/>
																																																								<attr name="jobs_Employer_SSNo" type="//EString"/>
																																																								<attr name="jobs_employers_name" type="//EString"/>
																																																								<attr name="jobs_activity_type" type="//Job_Activity"/>
																																																								<attr name="jobs_place_of_work" lowerBound="1" volatile="true" type="//Town"/>
																																																								<attr name="deduction_FD_daily" lowerBound="1" defaultValueLiteral="0" type="//EDouble"/>
																																																								<attr name="deduction_FD_monthly" lowerBound="1" defaultValueLiteral="0" type="//EDouble"/>
																																																								<attr name="deduction_FD_yearly" lowerBound="1" defaultValueLiteral="0" type="//EDouble"/>
																																																								<attr name="deduction_AC_daily" lowerBound="1" defaultValueLiteral="0" type="//EDouble"/>
																																																								<attr name="deduction_AC_monthly" lowerBound="1" defaultValueLiteral="0" type="//EDouble"/>
																																																								<attr name="deduction_AC_yearly" lowerBound="1" defaultValueLiteral="0" type="//EDouble"/>
																																																								<attr name="deduction_CE_daily" lowerBound="1" defaultValueLiteral="0" type="//EDouble"/>
																																																								<attr name="deduction_CE_monthly" lowerBound="1" defaultValueLiteral="0" type="//EDouble"/>
																																																								<attr name="deduction_CE_yearly" lowerBound="1" defaultValueLiteral="0" type="//EDouble"/>
																																																								<attr name="deduction_CE_invalidity_yearly" lowerBound="1" defaultValueLiteral="0" type="//EDouble"/>
																																																								<attr name="deduction_DS_daily" lowerBound="1" defaultValueLiteral="0" type="//EDouble"/>
																																																								<attr name="deduction_DS_monthly" lowerBound="1" defaultValueLiteral="0" type="//EDouble"/>
																																																								<attr name="deduction_DS_yearly" lowerBound="1" defaultValueLiteral="0" type="//EDouble"/>
																																																								<attr name="deduction_DS_Alimony_yearly" lowerBound="1" defaultValueLiteral="0" type="//EDouble"/>
																																																								<attr name="deduction_DS_Debt_yearly" lowerBound="1" defaultValueLiteral="0" type="//EDouble"/>
																																																								<attr name="deduction_FO_daily" lowerBound="1" defaultValueLiteral="0" type="//EDouble"/>
																																																								<attr name="deduction_FO_monthly" lowerBound="1" defaultValueLiteral="0" type="//EDouble"/>
																																																								<attr name="deduction_FO_yearly" lowerBound="1" defaultValueLiteral="0" type="//EDouble"/>
																																																								<attr name="credit_CIS_daily" lowerBound="1" defaultValueLiteral="0" type="//EDouble"/>
																																																								<attr name="credit_CIS_monthly" lowerBound="1" defaultValueLiteral="0" type="//EDouble"/>
																																																								<attr name="credit_CIS_yearly" lowerBound="1" defaultValueLiteral="0" type="//EDouble"/>
																																																								<attr name="credit_CIP_monthly" lowerBound="1" defaultValueLiteral="0" type="//EDouble"/>
																																																								<attr name="credit_CIP_yearly" lowerBound="1" defaultValueLiteral="0" type="//EDouble"/>
																																																								<attr name="credit_CIM_daily" lowerBound="1" defaultValueLiteral="0" type="//EDouble"/>
																																																								<attr name="credit_CIM_monthly" lowerBound="1" defaultValueLiteral="0" type="//EDouble"/>
																																																								<attr name="credit_CIM_yearly" lowerBound="1" defaultValueLiteral="0" type="//EDouble"/>
																																																								<attr name="validity" lowerBound="1" type="//EBoolean"/>
																																																								<ref name="income_Tax_Credit" ordered="false" upperBound="-1" type="Income_Tax_Credit"/>
																																																								<ref name="previous" type="Tax_Card"/>
																																																								<ref name="current_tax_card" type="Tax_Card"/>
																																																								<ref name="income" lowerBound="1" type="Income"/>
																																																							</class>
																																																							<class name="CIM"/>
																																																							<class name="CIP"/>
																																																							<class name="CIS"/>
																																																							<class name="Income_Tax_Credit">
																																																								<attr name="grantedBy" lowerBound="1" type="//Grantor"/>
																																																								<ref name="taxPayer" type="Tax_Payer"/>
																																																								<attr name="tax_year" lowerBound="1" type="//EInt"/>
																																																								<attr name="yearly" lowerBound="1" defaultValueLiteral="300" type="//EDouble"/>
																																																								<attr name="monthly" lowerBound="1" defaultValueLiteral="25" type="//EDouble"/>
																																																								<attr name="daily" lowerBound="1" defaultValueLiteral="1" type="//EDouble"/>
																																																								<ref name="taxation_Frame" type="Tax_Card"/>
																																																							</class>
																																																							<class name="FD">
																																																								<EOperation name="compute_distance_unit_between_home_and_workpalce" lowerBound="1" type="EBigDecimal"/>
																																																								<attr name="distance_declared_in_january" lowerBound="1" type="//EDouble"/>
																																																								<attr name="calculated_distance" lowerBound="1" volatile="true" derived="true" type="//EDouble"/>
																																																							</class>
																																																							<class name="Professional_Expenses_Deduction"/>
																																																							<class name="FO">
																																																								<EOperation name="compute_disability_flat_rate" lowerBound="1" type="EBigDecimal"/>
																																																								<EOperation name="compute_regular_flat_rate" lowerBound="1" type="EBigDecimal"/>
																																																								<attr name="rate_type_for_FO" lowerBound="1" volatile="true" derived="true" type="//Type_of_Rate"/>
																																																							</class>
																																																							<class name="CE">
																																																								<attr name="ce_deduction_type" lowerBound="1" type="//CE_Type"/>
																																																								<attr name="dependent_relative_flat_rate" lowerBound="1" type="//EDouble"/>
																																																								<attr name="disability_flat_rate" lowerBound="1" type="//EDouble"/>
																																																							</class>
																																																							<class name="DS_for_Permanent_Expense">
																																																								<attr name="permanent_expense_category" lowerBound="1" type="//Category_of_Permanent_Expense"/>
																																																							</class>
																																																							<class name="DS">
																																																								<attr name="maximum_deductible_amount" lowerBound="1" type="//EDouble"/>
																																																							</class>
																																																							<class name="DS_for_Interest_Expense">
																																																								<EOperation name="compute_maximum_deductible_amount" lowerBound="1" type="EBigDecimal">
																																																									<EParameter name="IN_children_with_allowances" ordered="false" upperBound="-1" type="Dependent"/>
																																																									<EParameter name="IN_legal_union" ordered="false" upperBound="-1" type="Legal_Union_Record"/>
																																																								</EOperation>
																																																							</class>
																																																							<class name="DS_for_Health_and_Pension_Insurance">
																																																								<attr name="insurance_category" lowerBound="1" type="//Category_of_Health_and_Pension_Insurances"/>
																																																							</class>
																																																							<class name="DS_for_Private_Insurance_and_Plan">
																																																								<EOperation name="compute_increase_for_life_insurance" lowerBound="1" type="EBigDecimal"/>
																																																								<EOperation name="compute_maximum_deductible_amount_for_private_insruance" lowerBound="1" type="EBigDecimal"/>
																																																								<EOperation name="compute_maximum_deductible_amount_for_old_age_pension_plan" lowerBound="1" type="EBigDecimal"/>
																																																								<attr name="private_insurance_and_plan_category" lowerBound="1" type="//Category_of_Private_Insurance_and_Plan"/>
																																																								<attr name="increase_for_life_insurance" lowerBound="1" volatile="true" derived="true" type="//EDouble"/>
																																																								<attr name="maximum_deductible_amount_for_private_insurance" lowerBound="1" volatile="true" derived="true" type="//EDouble"/>
																																																								<attr name="maximum_deductible_amount_for_old_age_pension_plan" lowerBound="1" volatile="true" derived="true" type="//EDouble"/>
																																																							</class>
																																																							<class name="DS_for_Loss_Carryforward"/>
																																																							<class name="DS_for_Donation"/>
																																																							<class name="Permanent_Expense">
																																																								<EOperation name="is_expense_eligible_for_deduction" lowerBound="1" type="EBoolean">
																																																									<EParameter name="IN_agent_response" lowerBound="1" type="EBoolean"/>
																																																								</EOperation>
																																																								<attr name="category" lowerBound="1" type="//Category_of_Permanent_Expense"/>
																																																								<attr name="is_eligible_for_deduction" lowerBound="1" volatile="true" defaultValueLiteral="false" derived="true" type="//EBoolean"/>
																																																							</class>
																																																							<class name="Special_Expense_DS"/>
																																																							<class name="Expense">
																																																								<ref name="beneficiary" type="Physical_Person"/>
																																																								<attr name="declared_amount" lowerBound="1" type="//EDouble"/>
																																																								<attr name="expense_purpose" lowerBound="1" defaultValueLiteral="OTHER" type="//Expense_Purpose"/>
																																																								<ref name="dependent" type="Dependent"/>
																																																								<attr name="year_expense_was_incurred_in" lowerBound="1" type="//EInt"/>
																																																								<ref name="income" lowerBound="1" type="Income"/>
																																																								<ref name="from_agent" containment="true" type="FromAgent"/>
																																																							</class>
																																																							<class name="Interest_Expense"/>
																																																							<class name="Private_Insurance_and_Plan">
																																																								<EOperation name="is_private_insurance_and_plan_eligible_for_deduction" lowerBound="1" type="EBoolean"/>
																																																								<attr name="category" lowerBound="1" type="//Category_of_Private_Insurance_and_Plan"/>
																																																								<attr name="duration_of_contract" lowerBound="1" type="//EInt">
																																																									<EAnnotation source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
																																																										<EStringToStringMapEntry key="body" value="Expense"/>
																																																										<EStringToStringMapEntry key="unique" value="false"/>
																																																										<EStringToStringMapEntry key="upper" value="*"/>
																																																									</EAnnotation>
																																																								</attr>
																																																								<attr name="is_private_insurance_and_plan_eligible_for_deduction" lowerBound="1" volatile="true" defaultValueLiteral="false" derived="true" type="//EBoolean"/>
																																																							</class>
																																																							<EEnum name="Category_of_Private_Insurance_and_Plan">
																																																								<EEnumLiteral name="PRIVATE_INSURANCE"/>
																																																								<EEnumLiteral name="PRIVATE_LIFE_INSURANCE" value="1"/>
																																																								<EEnumLiteral name="COMPANY_MEMBERS_PRIVATE_INSURANCE" value="2"/>
																																																								<EEnumLiteral name="HOUSING_SAVING_PLAN" value="3"/>
																																																								<EEnumLiteral name="OLD_AGE_PENSION_PLAN" value="4"/>
																																																							</EEnum>
																																																							<class name="Health_and_Pension_Insurance">
																																																								<attr name="category" lowerBound="1" type="//Category_of_Health_and_Pension_Insurances"/>
																																																								<attr name="is_related_to_additional_salary" lowerBound="1" defaultValueLiteral="false" type="//EBoolean"/>
																																																							</class>
																																																							<EEnum name="Category_of_Health_and_Pension_Insurances">
																																																								<EEnumLiteral name="MANDATORY_HEALTH_AND_PENSION_INSURANCE"/>
																																																								<EEnumLiteral name="ADDITIONAL_EMPLOYERS_PENSION_INSURANCE" value="1"/>
																																																								<EEnumLiteral name="CONTINUED_HEALTH_AND_PENSION_INSURANCE" value="2"/>
																																																							</EEnum>
																																																							<class name="Donation">
																																																								<EOperation name="get_beneficiary_eligibility_for_deduction" lowerBound="1" type="EBoolean"/>
																																																								<attr name="beneficiary1" lowerBound="1" type="//EString"/>
																																																								<attr name="is_beneficiary_eligible" lowerBound="1" volatile="true" defaultValueLiteral="false" derived="true" type="//EBoolean"/>
																																																								<attr name="is_donation_reported" lowerBound="1" type="//EBoolean"/>
																																																							</class>
																																																							<class name="Loss_Carryforward">
																																																								<EOperation name="is_accountability_regular" lowerBound="1" type="EBoolean"/>
																																																								<EOperation name="is_compensated_by_other_means" lowerBound="1" type="EBoolean"/>
																																																								<EOperation name="has_been_tax_payer_partner_in_business" lowerBound="1" type="EBoolean"/>
																																																								<EOperation name="has_tax_payer_inherited_business_ownership" lowerBound="1" type="EBoolean"/>
																																																								<attr name="regular_accountability" lowerBound="1" volatile="true" derived="true" type="//EBoolean"/>
																																																								<attr name="compensation_by_other_means" lowerBound="1" volatile="true" derived="true" type="//EBoolean"/>
																																																								<attr name="tax_payer_has_inherited_business_ownership" lowerBound="1" volatile="true" defaultValueLiteral="false" derived="true" type="//EBoolean"/>
																																																								<attr name="tax_payer_has_been_partner_in_business" lowerBound="1" volatile="true" defaultValueLiteral="true" derived="true" type="//EBoolean"/>
																																																							</class>
																																																							<class name="Spousal_Expense_AC"/>
																																																							<class name="Extraordinary_Expense_CE">
																																																								<EOperation name="is_above_thresholded_deduction_percentage_for_CE" lowerBound="1" type="EBoolean"/>
																																																								<EOperation name="compute_thresholded_deduction_percentage_for_CE" lowerBound="1" type="EBigDecimal">
																																																									<EParameter name="IN_thresholded_deduction_percentage" lowerBound="1" type="EBigDecimal"/>
																																																								</EOperation>
																																																								<attr name="thresholded_deduction_percentage" lowerBound="1" type="//EDouble"/>
																																																								<attr name="ce_type" lowerBound="1" type="//CE_Type"/>
																																																							</class>
																																																							<class name="Travel_Expense_FD"/>
																																																							<class name="Professional_Expense"/>
																																																							<class name="Miscellaneous_Expense_FO"/>
																																																							<EEnum name="Category_of_Permanent_Expense">
																																																								<EEnumLiteral name="MISCELLANEOUS_DEBT"/>
																																																								<EEnumLiteral name="ALIMONY" value="1"/>
																																																							</EEnum>
																																																							<class name="Income_Detail">
																																																								<attr name="month" lowerBound="1" defaultValueLiteral="12" derived="true" type="//EInt">
																																																									<EAnnotation source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
																																																										<EStringToStringMapEntry key="derivation" value="
																																																										let details:OrderedSet(Income_Detail)=self.income.details in
																																																										details->indexOf(self)"/>
																																																										</EAnnotation>
																																																									</attr>
																																																									<attr name="amount" lowerBound="1" type="//EDouble"/>
																																																									<attr name="is_worked" lowerBound="1" type="//EBoolean"/>
																																																									<attr name="distance" lowerBound="1" type="//EDouble"/>
																																																									<attr name="worked_days" lowerBound="1" type="//EInt"/>
																																																									<attr name="is_contributing_CNS" lowerBound="1" type="//EBoolean"/>
																																																									<attr name="is_contributing_pension" lowerBound="1" type="//EBoolean"/>
																																																									<attr name="is_contributing_dependante_insurance" lowerBound="1" type="//EBoolean"/>
																																																									<ref name="income" lowerBound="1" type="Income"/>
																																																								</class>
																																																							</package>
