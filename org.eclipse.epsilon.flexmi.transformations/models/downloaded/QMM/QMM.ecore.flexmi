<?nsuri http://www.eclipse.org/emf/2002/Ecore?>
<?import http://www.eclipse.org/emf/2002/Ecore?>
<package name="qmm" nsURI="/QMM/model/QMM.ecore" nsPrefix="qmm">
	<type name="AttributeDataType" instanceClassName="java.lang.String"/>
	<class name="AttributeFamily">
		<EOperation name="validate" lowerBound="1" type="EBoolean">
			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
				<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
				if(this.evaluationOperator != null){
				EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
					for(int i=0; i<diagnosticList.size(); i++){
					diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
					}
					}
					}
					
					return true;"/>
				</EAnnotation>
				<EParameter name="diagnostic" type="EDiagnosticChain"/>
				<EParameter name="context" type="EMap"/>
			</EOperation>
		</class>
		<class name="AttributeNameMapping">
			<EOperation name="validate" lowerBound="1" type="EBoolean">
				<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
					<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
					if(this.evaluationOperator != null){
					EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
						for(int i=0; i<diagnosticList.size(); i++){
						diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
						}
						}
						}
						
						final int roleAttribute_upperBound = 1;
						int nr_nonTransitive_roleAttribute = 0;
						if(this.roleAttribute != null){
						for(qmm.OrGroup og : this.roleAttribute) if(!og.isTransitive()) nr_nonTransitive_roleAttribute++;
						}
						if(nr_nonTransitive_roleAttribute > roleAttribute_upperBound && roleAttribute_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_roleAttribute + " non-transitive roleAttribute. Only " + roleAttribute_upperBound + " are allowed.",new Object[] { this }));
							
							final int systemUnitAttribute_upperBound = 1;
							int nr_nonTransitive_systemUnitAttribute = 0;
							if(this.systemUnitAttribute != null){
							for(qmm.OrGroup og : this.systemUnitAttribute) if(!og.isTransitive()) nr_nonTransitive_systemUnitAttribute++;
							}
							if(nr_nonTransitive_systemUnitAttribute > systemUnitAttribute_upperBound && systemUnitAttribute_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_systemUnitAttribute + " non-transitive systemUnitAttribute. Only " + systemUnitAttribute_upperBound + " are allowed.",new Object[] { this }));
							
							return true;"/>
						</EAnnotation>
						<EParameter name="diagnostic" type="EDiagnosticChain"/>
						<EParameter name="context" type="EMap"/>
					</EOperation>
					<ref name="roleAttribute" upperBound="-1" containment="true" type="Attribute_OrGroup"/>
					<ref name="systemUnitAttribute" upperBound="-1" containment="true" type="Attribute_OrGroup"/>
					<ref name="roleAttributeName_AttrEClass" containment="true" type="AttributeNameMapping_roleAttributeName_AttrEClass"/>
					<ref name="systemUnitAttributeName_AttrEClass" containment="true" type="AttributeNameMapping_systemUnitAttributeName_AttrEClass"/>
				</class>
				<class name="Attribute">
					<EOperation name="validate" lowerBound="1" type="EBoolean">
						<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
							<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
							if(this.evaluationOperator != null){
							EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
								for(int i=0; i<diagnosticList.size(); i++){
								diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
								}
								}
								}
								
								final int refSemantic_upperBound = -1;
								int nr_nonTransitive_refSemantic = 0;
								if(this.refSemantic != null){
								for(qmm.OrGroup og : this.refSemantic) if(!og.isTransitive()) nr_nonTransitive_refSemantic++;
								}
								if(nr_nonTransitive_refSemantic > refSemantic_upperBound && refSemantic_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_refSemantic + " non-transitive refSemantic. Only " + refSemantic_upperBound + " are allowed.",new Object[] { this }));
									
									final int constraint_upperBound = -1;
									int nr_nonTransitive_constraint = 0;
									if(this.constraint != null){
									for(qmm.OrGroup og : this.constraint) if(!og.isTransitive()) nr_nonTransitive_constraint++;
									}
									if(nr_nonTransitive_constraint > constraint_upperBound && constraint_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_constraint + " non-transitive constraint. Only " + constraint_upperBound + " are allowed.",new Object[] { this }));
									
									final int attribute_upperBound = -1;
									int nr_nonTransitive_attribute = 0;
									if(this.attribute != null){
									for(qmm.OrGroup og : this.attribute) if(!og.isTransitive()) nr_nonTransitive_attribute++;
									}
									if(nr_nonTransitive_attribute > attribute_upperBound && attribute_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_attribute + " non-transitive attribute. Only " + attribute_upperBound + " are allowed.",new Object[] { this }));
									
									return true;"/>
								</EAnnotation>
								<EParameter name="diagnostic" type="EDiagnosticChain"/>
								<EParameter name="context" type="EMap"/>
							</EOperation>
							<ref name="refSemantic" upperBound="-1" containment="true" resolveProxies="false" type="RefSemantic_OrGroup"/>
							<ref name="constraint" upperBound="-1" containment="true" resolveProxies="false" type="AttributeValueRequirement_OrGroup"/>
							<ref name="attribute" upperBound="-1" containment="true" resolveProxies="false" type="Attribute_OrGroup"/>
							<ref name="defaultValue_AttrEClass" containment="true" type="Attribute_defaultValue_AttrEClass"/>
							<ref name="value_AttrEClass" containment="true" type="Attribute_value_AttrEClass"/>
							<ref name="attributeDataType_AttrEClass" containment="true" type="Attribute_attributeDataType_AttrEClass"/>
							<ref name="refAttributeType_AttrEClass" containment="true" type="Attribute_refAttributeType_AttrEClass"/>
							<ref name="unit_AttrEClass" containment="true" type="Attribute_unit_AttrEClass"/>
						</class>
						<class name="AttributeLib">
							<EOperation name="validate" lowerBound="1" type="EBoolean">
								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
									<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
									if(this.evaluationOperator != null){
									EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
										for(int i=0; i<diagnosticList.size(); i++){
										diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
										}
										}
										}
										
										final int attributeType_upperBound = -1;
										int nr_nonTransitive_attributeType = 0;
										if(this.attributeType != null){
										for(qmm.OrGroup og : this.attributeType) if(!og.isTransitive()) nr_nonTransitive_attributeType++;
										}
										if(nr_nonTransitive_attributeType > attributeType_upperBound && attributeType_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_attributeType + " non-transitive attributeType. Only " + attributeType_upperBound + " are allowed.",new Object[] { this }));
											
											return true;"/>
										</EAnnotation>
										<EParameter name="diagnostic" type="EDiagnosticChain"/>
										<EParameter name="context" type="EMap"/>
									</EOperation>
									<ref name="attributeType" upperBound="-1" containment="true" resolveProxies="false" type="Attribute_OrGroup"/>
								</class>
								<class name="AttributeValueRequirement">
									<EOperation name="validate" lowerBound="1" type="EBoolean">
										<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
											<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
											if(this.evaluationOperator != null){
											EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
												for(int i=0; i<diagnosticList.size(); i++){
												diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
												}
												}
												}
												
												final int ordinalScaledType_upperBound = 1;
												int nr_nonTransitive_ordinalScaledType = 0;
												if(this.ordinalScaledType != null){
												for(qmm.OrGroup og : this.ordinalScaledType) if(!og.isTransitive()) nr_nonTransitive_ordinalScaledType++;
												}
												if(nr_nonTransitive_ordinalScaledType > ordinalScaledType_upperBound && ordinalScaledType_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_ordinalScaledType + " non-transitive ordinalScaledType. Only " + ordinalScaledType_upperBound + " are allowed.",new Object[] { this }));
													
													final int nominalScaledType_upperBound = 1;
													int nr_nonTransitive_nominalScaledType = 0;
													if(this.nominalScaledType != null){
													for(qmm.OrGroup og : this.nominalScaledType) if(!og.isTransitive()) nr_nonTransitive_nominalScaledType++;
													}
													if(nr_nonTransitive_nominalScaledType > nominalScaledType_upperBound && nominalScaledType_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_nominalScaledType + " non-transitive nominalScaledType. Only " + nominalScaledType_upperBound + " are allowed.",new Object[] { this }));
													
													final int unknownType_upperBound = 1;
													int nr_nonTransitive_unknownType = 0;
													if(this.unknownType != null){
													for(qmm.OrGroup og : this.unknownType) if(!og.isTransitive()) nr_nonTransitive_unknownType++;
													}
													if(nr_nonTransitive_unknownType > unknownType_upperBound && unknownType_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_unknownType + " non-transitive unknownType. Only " + unknownType_upperBound + " are allowed.",new Object[] { this }));
													
													return true;"/>
												</EAnnotation>
												<EParameter name="diagnostic" type="EDiagnosticChain"/>
												<EParameter name="context" type="EMap"/>
											</EOperation>
											<ref name="ordinalScaledType" upperBound="-1" containment="true" resolveProxies="false" type="OrdinalScaledType_OrGroup"/>
											<ref name="nominalScaledType" upperBound="-1" containment="true" resolveProxies="false" type="NominalScaledType_OrGroup"/>
											<ref name="unknownType" upperBound="-1" containment="true" resolveProxies="false" type="UnknownType_OrGroup"/>
											<ref name="name_AttrEClass" containment="true" type="AttributeValueRequirement_name_AttrEClass"/>
										</class>
										<class name="CAEXBasicObject">
											<EOperation name="validate" lowerBound="1" type="EBoolean">
												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
													<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
													if(this.evaluationOperator != null){
													EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
														for(int i=0; i<diagnosticList.size(); i++){
														diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
														}
														}
														}
														
														final int description_upperBound = 1;
														int nr_nonTransitive_description = 0;
														if(this.description != null){
														for(qmm.OrGroup og : this.description) if(!og.isTransitive()) nr_nonTransitive_description++;
														}
														if(nr_nonTransitive_description > description_upperBound && description_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_description + " non-transitive description. Only " + description_upperBound + " are allowed.",new Object[] { this }));
															
															final int version_upperBound = 1;
															int nr_nonTransitive_version = 0;
															if(this.version != null){
															for(qmm.OrGroup og : this.version) if(!og.isTransitive()) nr_nonTransitive_version++;
															}
															if(nr_nonTransitive_version > version_upperBound && version_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_version + " non-transitive version. Only " + version_upperBound + " are allowed.",new Object[] { this }));
															
															final int revision_upperBound = -1;
															int nr_nonTransitive_revision = 0;
															if(this.revision != null){
															for(qmm.OrGroup og : this.revision) if(!og.isTransitive()) nr_nonTransitive_revision++;
															}
															if(nr_nonTransitive_revision > revision_upperBound && revision_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_revision + " non-transitive revision. Only " + revision_upperBound + " are allowed.",new Object[] { this }));
															
															final int copyright_upperBound = 1;
															int nr_nonTransitive_copyright = 0;
															if(this.copyright != null){
															for(qmm.OrGroup og : this.copyright) if(!og.isTransitive()) nr_nonTransitive_copyright++;
															}
															if(nr_nonTransitive_copyright > copyright_upperBound && copyright_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_copyright + " non-transitive copyright. Only " + copyright_upperBound + " are allowed.",new Object[] { this }));
															
															final int additionalInformation_upperBound = 1;
															int nr_nonTransitive_additionalInformation = 0;
															if(this.additionalInformation != null){
															for(qmm.OrGroup og : this.additionalInformation) if(!og.isTransitive()) nr_nonTransitive_additionalInformation++;
															}
															if(nr_nonTransitive_additionalInformation > additionalInformation_upperBound && additionalInformation_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_additionalInformation + " non-transitive additionalInformation. Only " + additionalInformation_upperBound + " are allowed.",new Object[] { this }));
															
															return true;"/>
														</EAnnotation>
														<EParameter name="diagnostic" type="EDiagnosticChain"/>
														<EParameter name="context" type="EMap"/>
													</EOperation>
													<ref name="description" upperBound="-1" containment="true" type="Description_OrGroup"/>
													<ref name="version" upperBound="-1" containment="true" type="Version_OrGroup"/>
													<ref name="revision" upperBound="-1" containment="true" type="Revision_OrGroup"/>
													<ref name="copyright" upperBound="-1" containment="true" type="Copyright_OrGroup"/>
													<ref name="additionalInformation" upperBound="-1" containment="true" type="AdditionalInformation_OrGroup"/>
													<ref name="changeMode_AttrEClass" containment="true" type="CAEXBasicObject_changeMode_AttrEClass"/>
												</class>
												<class name="CAEXFile">
													<EOperation name="validate" lowerBound="1" type="EBoolean">
														<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
															<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
															if(this.evaluationOperator != null){
															EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																for(int i=0; i<diagnosticList.size(); i++){
																diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																}
																}
																}
																
																final int sourceDocumentInformation_upperBound = -1;
																int nr_nonTransitive_sourceDocumentInformation = 0;
																if(this.sourceDocumentInformation != null){
																for(qmm.OrGroup og : this.sourceDocumentInformation) if(!og.isTransitive()) nr_nonTransitive_sourceDocumentInformation++;
																}
																if(nr_nonTransitive_sourceDocumentInformation > sourceDocumentInformation_upperBound && sourceDocumentInformation_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_sourceDocumentInformation + " non-transitive sourceDocumentInformation. Only " + sourceDocumentInformation_upperBound + " are allowed.",new Object[] { this }));
																	
																	final int externalReference_upperBound = -1;
																	int nr_nonTransitive_externalReference = 0;
																	if(this.externalReference != null){
																	for(qmm.OrGroup og : this.externalReference) if(!og.isTransitive()) nr_nonTransitive_externalReference++;
																	}
																	if(nr_nonTransitive_externalReference > externalReference_upperBound && externalReference_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_externalReference + " non-transitive externalReference. Only " + externalReference_upperBound + " are allowed.",new Object[] { this }));
																	
																	final int instanceHierarchy_upperBound = -1;
																	int nr_nonTransitive_instanceHierarchy = 0;
																	if(this.instanceHierarchy != null){
																	for(qmm.OrGroup og : this.instanceHierarchy) if(!og.isTransitive()) nr_nonTransitive_instanceHierarchy++;
																	}
																	if(nr_nonTransitive_instanceHierarchy > instanceHierarchy_upperBound && instanceHierarchy_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_instanceHierarchy + " non-transitive instanceHierarchy. Only " + instanceHierarchy_upperBound + " are allowed.",new Object[] { this }));
																	
																	final int interfaceClassLib_upperBound = -1;
																	int nr_nonTransitive_interfaceClassLib = 0;
																	if(this.interfaceClassLib != null){
																	for(qmm.OrGroup og : this.interfaceClassLib) if(!og.isTransitive()) nr_nonTransitive_interfaceClassLib++;
																	}
																	if(nr_nonTransitive_interfaceClassLib > interfaceClassLib_upperBound && interfaceClassLib_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_interfaceClassLib + " non-transitive interfaceClassLib. Only " + interfaceClassLib_upperBound + " are allowed.",new Object[] { this }));
																	
																	final int roleClassLib_upperBound = -1;
																	int nr_nonTransitive_roleClassLib = 0;
																	if(this.roleClassLib != null){
																	for(qmm.OrGroup og : this.roleClassLib) if(!og.isTransitive()) nr_nonTransitive_roleClassLib++;
																	}
																	if(nr_nonTransitive_roleClassLib > roleClassLib_upperBound && roleClassLib_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_roleClassLib + " non-transitive roleClassLib. Only " + roleClassLib_upperBound + " are allowed.",new Object[] { this }));
																	
																	final int systemUnitClassLib_upperBound = -1;
																	int nr_nonTransitive_systemUnitClassLib = 0;
																	if(this.systemUnitClassLib != null){
																	for(qmm.OrGroup og : this.systemUnitClassLib) if(!og.isTransitive()) nr_nonTransitive_systemUnitClassLib++;
																	}
																	if(nr_nonTransitive_systemUnitClassLib > systemUnitClassLib_upperBound && systemUnitClassLib_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_systemUnitClassLib + " non-transitive systemUnitClassLib. Only " + systemUnitClassLib_upperBound + " are allowed.",new Object[] { this }));
																	
																	final int attributeTypeLib_upperBound = -1;
																	int nr_nonTransitive_attributeTypeLib = 0;
																	if(this.attributeTypeLib != null){
																	for(qmm.OrGroup og : this.attributeTypeLib) if(!og.isTransitive()) nr_nonTransitive_attributeTypeLib++;
																	}
																	if(nr_nonTransitive_attributeTypeLib > attributeTypeLib_upperBound && attributeTypeLib_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_attributeTypeLib + " non-transitive attributeTypeLib. Only " + attributeTypeLib_upperBound + " are allowed.",new Object[] { this }));
																	
																	return true;"/>
																</EAnnotation>
																<EParameter name="diagnostic" type="EDiagnosticChain"/>
																<EParameter name="context" type="EMap"/>
															</EOperation>
															<ref name="sourceDocumentInformation" upperBound="-1" containment="true" resolveProxies="false" type="SourceDocumentInformation_OrGroup"/>
															<ref name="externalReference" upperBound="-1" containment="true" resolveProxies="false" type="ExternalReferenceType_OrGroup"/>
															<ref name="instanceHierarchy" upperBound="-1" containment="true" resolveProxies="false" type="InstanceHierarchy_OrGroup"/>
															<ref name="interfaceClassLib" upperBound="-1" containment="true" resolveProxies="false" type="InterfaceClassLib_OrGroup"/>
															<ref name="roleClassLib" upperBound="-1" containment="true" resolveProxies="false" type="RoleClassLib_OrGroup"/>
															<ref name="systemUnitClassLib" upperBound="-1" containment="true" resolveProxies="false" type="SystemUnitClassLib_OrGroup"/>
															<ref name="attributeTypeLib" upperBound="-1" containment="true" resolveProxies="false" type="AttributeLib_OrGroup"/>
															<ref name="superiorStandardVersion_AttrEClass" upperBound="-1" containment="true" type="CAEXFile_superiorStandardVersion_AttrEClass"/>
															<ref name="fileName_AttrEClass" containment="true" type="CAEXFile_fileName_AttrEClass"/>
															<ref name="schemaVersion_AttrEClass" containment="true" type="CAEXFile_schemaVersion_AttrEClass"/>
														</class>
														<class name="CAEXObject">
															<EOperation name="validate" lowerBound="1" type="EBoolean">
																<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																	<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																	if(this.evaluationOperator != null){
																	EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																		for(int i=0; i<diagnosticList.size(); i++){
																		diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																		}
																		}
																		}
																		
																		return true;"/>
																	</EAnnotation>
																	<EParameter name="diagnostic" type="EDiagnosticChain"/>
																	<EParameter name="context" type="EMap"/>
																</EOperation>
																<ref name="iD_AttrEClass" containment="true" type="CAEXObject_iD_AttrEClass"/>
																<ref name="name_AttrEClass" containment="true" type="CAEXObject_name_AttrEClass"/>
															</class>
															<EEnum name="ChangeMode">
																<EEnumLiteral name="state"/>
																<EEnumLiteral name="create" value="1"/>
																<EEnumLiteral name="delete" value="2"/>
																<EEnumLiteral name="change" value="3"/>
															</EEnum>
															<type name="ChangeModeObject" instanceClassName="org.eclipse.emf.common.util.Enumerator"/>
															<class name="DocumentRoot">
																<EOperation name="validate" lowerBound="1" type="EBoolean">
																	<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																		<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																		if(this.evaluationOperator != null){
																		EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																			for(int i=0; i<diagnosticList.size(); i++){
																			diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																			}
																			}
																			}
																			
																			return true;"/>
																		</EAnnotation>
																		<EParameter name="diagnostic" type="EDiagnosticChain"/>
																		<EParameter name="context" type="EMap"/>
																	</EOperation>
																	<ref name="xMLNSPrefixMap" upperBound="-1" transient="true" containment="true" resolveProxies="false" type="EStringToStringMapEntry"/>
																	<ref name="xSISchemaLocation" upperBound="-1" transient="true" containment="true" resolveProxies="false" type="EStringToStringMapEntry"/>
																	<ref name="cAEXFile" upperBound="-1" volatile="true" transient="true" derived="true" containment="true" resolveProxies="false" type="CAEXFile_OrGroup"/>
																	<ref name="mixed_AttrEClass" upperBound="-1" containment="true" type="DocumentRoot_mixed_AttrEClass"/>
																</class>
																<class name="ExternalInterface">
																	<EOperation name="validate" lowerBound="1" type="EBoolean">
																		<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																			<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																			if(this.evaluationOperator != null){
																			EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																				for(int i=0; i<diagnosticList.size(); i++){
																				diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																				}
																				}
																				}
																				
																				final int externalInterface_upperBound = -1;
																				int nr_nonTransitive_externalInterface = 0;
																				if(this.externalInterface != null){
																				for(qmm.OrGroup og : this.externalInterface) if(!og.isTransitive()) nr_nonTransitive_externalInterface++;
																				}
																				if(nr_nonTransitive_externalInterface > externalInterface_upperBound && externalInterface_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_externalInterface + " non-transitive externalInterface. Only " + externalInterface_upperBound + " are allowed.",new Object[] { this }));
																					
																					return true;"/>
																				</EAnnotation>
																				<EParameter name="diagnostic" type="EDiagnosticChain"/>
																				<EParameter name="context" type="EMap"/>
																			</EOperation>
																			<ref name="externalInterface" upperBound="-1" containment="true" resolveProxies="false" type="InterfaceClass_OrGroup"/>
																		</class>
																		<class name="ExternalReferenceType">
																			<EOperation name="validate" lowerBound="1" type="EBoolean">
																				<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																					<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																					if(this.evaluationOperator != null){
																					EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																						for(int i=0; i<diagnosticList.size(); i++){
																						diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																						}
																						}
																						}
																						
																						return true;"/>
																					</EAnnotation>
																					<EParameter name="diagnostic" type="EDiagnosticChain"/>
																					<EParameter name="context" type="EMap"/>
																				</EOperation>
																				<ref name="alias_AttrEClass" containment="true" type="ExternalReferenceType_alias_AttrEClass"/>
																				<ref name="path_AttrEClass" containment="true" type="ExternalReferenceType_path_AttrEClass"/>
																			</class>
																			<class name="InstanceHierarchy">
																				<EOperation name="validate" lowerBound="1" type="EBoolean">
																					<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																						<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																						if(this.evaluationOperator != null){
																						EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																							for(int i=0; i<diagnosticList.size(); i++){
																							diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																							}
																							}
																							}
																							
																							final int internalElement_upperBound = -1;
																							int nr_nonTransitive_internalElement = 0;
																							if(this.internalElement != null){
																							for(qmm.OrGroup og : this.internalElement) if(!og.isTransitive()) nr_nonTransitive_internalElement++;
																							}
																							if(nr_nonTransitive_internalElement > internalElement_upperBound && internalElement_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_internalElement + " non-transitive internalElement. Only " + internalElement_upperBound + " are allowed.",new Object[] { this }));
																								
																								return true;"/>
																							</EAnnotation>
																							<EParameter name="diagnostic" type="EDiagnosticChain"/>
																							<EParameter name="context" type="EMap"/>
																						</EOperation>
																						<ref name="internalElement" upperBound="-1" containment="true" resolveProxies="false" type="InternalElement_OrGroup"/>
																					</class>
																					<class name="InterfaceClassLib">
																						<EOperation name="validate" lowerBound="1" type="EBoolean">
																							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																								<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																								if(this.evaluationOperator != null){
																								EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																									for(int i=0; i<diagnosticList.size(); i++){
																									diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																									}
																									}
																									}
																									
																									final int interfaceClass_upperBound = -1;
																									int nr_nonTransitive_interfaceClass = 0;
																									if(this.interfaceClass != null){
																									for(qmm.OrGroup og : this.interfaceClass) if(!og.isTransitive()) nr_nonTransitive_interfaceClass++;
																									}
																									if(nr_nonTransitive_interfaceClass > interfaceClass_upperBound && interfaceClass_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_interfaceClass + " non-transitive interfaceClass. Only " + interfaceClass_upperBound + " are allowed.",new Object[] { this }));
																										
																										return true;"/>
																									</EAnnotation>
																									<EParameter name="diagnostic" type="EDiagnosticChain"/>
																									<EParameter name="context" type="EMap"/>
																								</EOperation>
																								<ref name="interfaceClass" upperBound="-1" containment="true" resolveProxies="false" type="InterfaceClass_OrGroup"/>
																							</class>
																							<class name="InterfaceClass">
																								<EOperation name="validate" lowerBound="1" type="EBoolean">
																									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																										<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																										if(this.evaluationOperator != null){
																										EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																											for(int i=0; i<diagnosticList.size(); i++){
																											diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																											}
																											}
																											}
																											
																											final int attribute_upperBound = -1;
																											int nr_nonTransitive_attribute = 0;
																											if(this.attribute != null){
																											for(qmm.OrGroup og : this.attribute) if(!og.isTransitive()) nr_nonTransitive_attribute++;
																											}
																											if(nr_nonTransitive_attribute > attribute_upperBound && attribute_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_attribute + " non-transitive attribute. Only " + attribute_upperBound + " are allowed.",new Object[] { this }));
																												
																												final int baseClass_upperBound = 1;
																												int nr_nonTransitive_baseClass = 0;
																												if(this.baseClass != null){
																												for(qmm.OrGroup og : this.baseClass) if(!og.isTransitive()) nr_nonTransitive_baseClass++;
																												}
																												if(nr_nonTransitive_baseClass > baseClass_upperBound && baseClass_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_baseClass + " non-transitive baseClass. Only " + baseClass_upperBound + " are allowed.",new Object[] { this }));
																												
																												final int interfaceClass_upperBound = -1;
																												int nr_nonTransitive_interfaceClass = 0;
																												if(this.interfaceClass != null){
																												for(qmm.OrGroup og : this.interfaceClass) if(!og.isTransitive()) nr_nonTransitive_interfaceClass++;
																												}
																												if(nr_nonTransitive_interfaceClass > interfaceClass_upperBound && interfaceClass_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_interfaceClass + " non-transitive interfaceClass. Only " + interfaceClass_upperBound + " are allowed.",new Object[] { this }));
																												
																												return true;"/>
																											</EAnnotation>
																											<EParameter name="diagnostic" type="EDiagnosticChain"/>
																											<EParameter name="context" type="EMap"/>
																										</EOperation>
																										<ref name="attribute" upperBound="-1" containment="true" resolveProxies="false" type="Attribute_OrGroup"/>
																										<ref name="baseClass" upperBound="-1" containment="true" type="InterfaceClass_OrGroup"/>
																										<ref name="interfaceClass" upperBound="-1" containment="true" type="InterfaceClass_OrGroup"/>
																										<ref name="refBaseClassPath_AttrEClass" containment="true" type="InterfaceClass_refBaseClassPath_AttrEClass"/>
																									</class>
																									<class name="InterfaceFamily">
																										<EOperation name="validate" lowerBound="1" type="EBoolean">
																											<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																												<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																												if(this.evaluationOperator != null){
																												EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																													for(int i=0; i<diagnosticList.size(); i++){
																													diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																													}
																													}
																													}
																													
																													return true;"/>
																												</EAnnotation>
																												<EParameter name="diagnostic" type="EDiagnosticChain"/>
																												<EParameter name="context" type="EMap"/>
																											</EOperation>
																										</class>
																										<class name="InterfaceIDMapping">
																											<EOperation name="validate" lowerBound="1" type="EBoolean">
																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																													<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																													if(this.evaluationOperator != null){
																													EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																														for(int i=0; i<diagnosticList.size(); i++){
																														diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																														}
																														}
																														}
																														
																														final int roleInterface_upperBound = 1;
																														int nr_nonTransitive_roleInterface = 0;
																														if(this.roleInterface != null){
																														for(qmm.OrGroup og : this.roleInterface) if(!og.isTransitive()) nr_nonTransitive_roleInterface++;
																														}
																														if(nr_nonTransitive_roleInterface > roleInterface_upperBound && roleInterface_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_roleInterface + " non-transitive roleInterface. Only " + roleInterface_upperBound + " are allowed.",new Object[] { this }));
																															
																															final int systemUnitInterface_upperBound = 1;
																															int nr_nonTransitive_systemUnitInterface = 0;
																															if(this.systemUnitInterface != null){
																															for(qmm.OrGroup og : this.systemUnitInterface) if(!og.isTransitive()) nr_nonTransitive_systemUnitInterface++;
																															}
																															if(nr_nonTransitive_systemUnitInterface > systemUnitInterface_upperBound && systemUnitInterface_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_systemUnitInterface + " non-transitive systemUnitInterface. Only " + systemUnitInterface_upperBound + " are allowed.",new Object[] { this }));
																															
																															return true;"/>
																														</EAnnotation>
																														<EParameter name="diagnostic" type="EDiagnosticChain"/>
																														<EParameter name="context" type="EMap"/>
																													</EOperation>
																													<ref name="roleInterface" upperBound="-1" containment="true" type="ExternalInterface_OrGroup"/>
																													<ref name="systemUnitInterface" upperBound="-1" containment="true" type="ExternalInterface_OrGroup"/>
																													<ref name="roleInterfaceID_AttrEClass" containment="true" type="InterfaceIDMapping_roleInterfaceID_AttrEClass"/>
																													<ref name="systemUnitInterfaceID_AttrEClass" containment="true" type="InterfaceIDMapping_systemUnitInterfaceID_AttrEClass"/>
																												</class>
																												<class name="InternalElement">
																													<EOperation name="validate" lowerBound="1" type="EBoolean">
																														<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																															<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																															if(this.evaluationOperator != null){
																															EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																																for(int i=0; i<diagnosticList.size(); i++){
																																diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																																}
																																}
																																}
																																
																																final int roleRequirements_upperBound = -1;
																																int nr_nonTransitive_roleRequirements = 0;
																																if(this.roleRequirements != null){
																																for(qmm.OrGroup og : this.roleRequirements) if(!og.isTransitive()) nr_nonTransitive_roleRequirements++;
																																}
																																if(nr_nonTransitive_roleRequirements > roleRequirements_upperBound && roleRequirements_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_roleRequirements + " non-transitive roleRequirements. Only " + roleRequirements_upperBound + " are allowed.",new Object[] { this }));
																																	
																																	final int baseSystemUnit_upperBound = 1;
																																	int nr_nonTransitive_baseSystemUnit = 0;
																																	if(this.baseSystemUnit != null){
																																	for(qmm.OrGroup og : this.baseSystemUnit) if(!og.isTransitive()) nr_nonTransitive_baseSystemUnit++;
																																	}
																																	if(nr_nonTransitive_baseSystemUnit > baseSystemUnit_upperBound && baseSystemUnit_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_baseSystemUnit + " non-transitive baseSystemUnit. Only " + baseSystemUnit_upperBound + " are allowed.",new Object[] { this }));
																																	
																																	return true;"/>
																																</EAnnotation>
																																<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																<EParameter name="context" type="EMap"/>
																															</EOperation>
																															<ref name="roleRequirements" upperBound="-1" containment="true" resolveProxies="false" type="RoleRequirements_OrGroup"/>
																															<ref name="baseSystemUnit" upperBound="-1" containment="true" type="SystemUnitClass_OrGroup"/>
																															<ref name="refBaseSystemUnitPath_AttrEClass" containment="true" type="InternalElement_refBaseSystemUnitPath_AttrEClass"/>
																														</class>
																														<class name="InternalLink">
																															<EOperation name="validate" lowerBound="1" type="EBoolean">
																																<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																	<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																																	if(this.evaluationOperator != null){
																																	EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																																		for(int i=0; i<diagnosticList.size(); i++){
																																		diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																																		}
																																		}
																																		}
																																		
																																		final int partnerSideA_upperBound = 1;
																																		int nr_nonTransitive_partnerSideA = 0;
																																		if(this.partnerSideA != null){
																																		for(qmm.OrGroup og : this.partnerSideA) if(!og.isTransitive()) nr_nonTransitive_partnerSideA++;
																																		}
																																		if(nr_nonTransitive_partnerSideA > partnerSideA_upperBound && partnerSideA_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_partnerSideA + " non-transitive partnerSideA. Only " + partnerSideA_upperBound + " are allowed.",new Object[] { this }));
																																			
																																			final int partnerSideB_upperBound = 1;
																																			int nr_nonTransitive_partnerSideB = 0;
																																			if(this.partnerSideB != null){
																																			for(qmm.OrGroup og : this.partnerSideB) if(!og.isTransitive()) nr_nonTransitive_partnerSideB++;
																																			}
																																			if(nr_nonTransitive_partnerSideB > partnerSideB_upperBound && partnerSideB_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_partnerSideB + " non-transitive partnerSideB. Only " + partnerSideB_upperBound + " are allowed.",new Object[] { this }));
																																			
																																			return true;"/>
																																		</EAnnotation>
																																		<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																		<EParameter name="context" type="EMap"/>
																																	</EOperation>
																																	<ref name="partnerSideA" upperBound="-1" containment="true" type="ExternalInterface_OrGroup"/>
																																	<ref name="partnerSideB" upperBound="-1" containment="true" type="ExternalInterface_OrGroup"/>
																																	<ref name="refPartnerSideA_AttrEClass" containment="true" type="InternalLink_refPartnerSideA_AttrEClass"/>
																																	<ref name="refPartnerSideB_AttrEClass" containment="true" type="InternalLink_refPartnerSideB_AttrEClass"/>
																																</class>
																																<class name="Mapping">
																																	<EOperation name="validate" lowerBound="1" type="EBoolean">
																																		<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																			<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																																			if(this.evaluationOperator != null){
																																			EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																																				for(int i=0; i<diagnosticList.size(); i++){
																																				diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																																				}
																																				}
																																				}
																																				
																																				final int attributeNameMapping_upperBound = -1;
																																				int nr_nonTransitive_attributeNameMapping = 0;
																																				if(this.attributeNameMapping != null){
																																				for(qmm.OrGroup og : this.attributeNameMapping) if(!og.isTransitive()) nr_nonTransitive_attributeNameMapping++;
																																				}
																																				if(nr_nonTransitive_attributeNameMapping > attributeNameMapping_upperBound && attributeNameMapping_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_attributeNameMapping + " non-transitive attributeNameMapping. Only " + attributeNameMapping_upperBound + " are allowed.",new Object[] { this }));
																																					
																																					final int interfaceIDMapping_upperBound = -1;
																																					int nr_nonTransitive_interfaceIDMapping = 0;
																																					if(this.interfaceIDMapping != null){
																																					for(qmm.OrGroup og : this.interfaceIDMapping) if(!og.isTransitive()) nr_nonTransitive_interfaceIDMapping++;
																																					}
																																					if(nr_nonTransitive_interfaceIDMapping > interfaceIDMapping_upperBound && interfaceIDMapping_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_interfaceIDMapping + " non-transitive interfaceIDMapping. Only " + interfaceIDMapping_upperBound + " are allowed.",new Object[] { this }));
																																					
																																					return true;"/>
																																				</EAnnotation>
																																				<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																				<EParameter name="context" type="EMap"/>
																																			</EOperation>
																																			<ref name="attributeNameMapping" upperBound="-1" containment="true" resolveProxies="false" type="AttributeNameMapping_OrGroup"/>
																																			<ref name="interfaceIDMapping" upperBound="-1" containment="true" resolveProxies="false" type="InterfaceIDMapping_OrGroup"/>
																																		</class>
																																		<class name="NominalScaledType">
																																			<EOperation name="validate" lowerBound="1" type="EBoolean">
																																				<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																					<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																																					if(this.evaluationOperator != null){
																																					EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																																						for(int i=0; i<diagnosticList.size(); i++){
																																						diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																																						}
																																						}
																																						}
																																						
																																						return true;"/>
																																					</EAnnotation>
																																					<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																					<EParameter name="context" type="EMap"/>
																																				</EOperation>
																																				<ref name="requiredValue_AttrEClass" upperBound="-1" containment="true" type="NominalScaledType_requiredValue_AttrEClass"/>
																																			</class>
																																			<class name="OrdinalScaledType">
																																				<EOperation name="validate" lowerBound="1" type="EBoolean">
																																					<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																						<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																																						if(this.evaluationOperator != null){
																																						EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																																							for(int i=0; i<diagnosticList.size(); i++){
																																							diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																																							}
																																							}
																																							}
																																							
																																							return true;"/>
																																						</EAnnotation>
																																						<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																						<EParameter name="context" type="EMap"/>
																																					</EOperation>
																																					<ref name="requiredMaxValue_AttrEClass" containment="true" type="OrdinalScaledType_requiredMaxValue_AttrEClass"/>
																																					<ref name="requiredValue_AttrEClass" containment="true" type="OrdinalScaledType_requiredValue_AttrEClass"/>
																																					<ref name="requiredMinValue_AttrEClass" containment="true" type="OrdinalScaledType_requiredMinValue_AttrEClass"/>
																																				</class>
																																				<class name="RefSemantic">
																																					<EOperation name="validate" lowerBound="1" type="EBoolean">
																																						<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																							<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																																							if(this.evaluationOperator != null){
																																							EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																																								for(int i=0; i<diagnosticList.size(); i++){
																																								diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																																								}
																																								}
																																								}
																																								
																																								return true;"/>
																																							</EAnnotation>
																																							<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																							<EParameter name="context" type="EMap"/>
																																						</EOperation>
																																						<ref name="correspondingAttributePath_AttrEClass" containment="true" type="RefSemantic_correspondingAttributePath_AttrEClass"/>
																																					</class>
																																					<class name="RoleClassLib">
																																						<EOperation name="validate" lowerBound="1" type="EBoolean">
																																							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																								<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																																								if(this.evaluationOperator != null){
																																								EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																																									for(int i=0; i<diagnosticList.size(); i++){
																																									diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																																									}
																																									}
																																									}
																																									
																																									final int roleClass_upperBound = -1;
																																									int nr_nonTransitive_roleClass = 0;
																																									if(this.roleClass != null){
																																									for(qmm.OrGroup og : this.roleClass) if(!og.isTransitive()) nr_nonTransitive_roleClass++;
																																									}
																																									if(nr_nonTransitive_roleClass > roleClass_upperBound && roleClass_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_roleClass + " non-transitive roleClass. Only " + roleClass_upperBound + " are allowed.",new Object[] { this }));
																																										
																																										return true;"/>
																																									</EAnnotation>
																																									<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																									<EParameter name="context" type="EMap"/>
																																								</EOperation>
																																								<ref name="roleClass" upperBound="-1" containment="true" resolveProxies="false" type="RoleClass_OrGroup"/>
																																							</class>
																																							<class name="RoleClass">
																																								<EOperation name="validate" lowerBound="1" type="EBoolean">
																																									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																										<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																																										if(this.evaluationOperator != null){
																																										EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																																											for(int i=0; i<diagnosticList.size(); i++){
																																											diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																																											}
																																											}
																																											}
																																											
																																											final int attribute_upperBound = -1;
																																											int nr_nonTransitive_attribute = 0;
																																											if(this.attribute != null){
																																											for(qmm.OrGroup og : this.attribute) if(!og.isTransitive()) nr_nonTransitive_attribute++;
																																											}
																																											if(nr_nonTransitive_attribute > attribute_upperBound && attribute_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_attribute + " non-transitive attribute. Only " + attribute_upperBound + " are allowed.",new Object[] { this }));
																																												
																																												final int externalInterface_upperBound = -1;
																																												int nr_nonTransitive_externalInterface = 0;
																																												if(this.externalInterface != null){
																																												for(qmm.OrGroup og : this.externalInterface) if(!og.isTransitive()) nr_nonTransitive_externalInterface++;
																																												}
																																												if(nr_nonTransitive_externalInterface > externalInterface_upperBound && externalInterface_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_externalInterface + " non-transitive externalInterface. Only " + externalInterface_upperBound + " are allowed.",new Object[] { this }));
																																												
																																												final int baseClass_upperBound = 1;
																																												int nr_nonTransitive_baseClass = 0;
																																												if(this.baseClass != null){
																																												for(qmm.OrGroup og : this.baseClass) if(!og.isTransitive()) nr_nonTransitive_baseClass++;
																																												}
																																												if(nr_nonTransitive_baseClass > baseClass_upperBound && baseClass_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_baseClass + " non-transitive baseClass. Only " + baseClass_upperBound + " are allowed.",new Object[] { this }));
																																												
																																												final int roleClass_upperBound = -1;
																																												int nr_nonTransitive_roleClass = 0;
																																												if(this.roleClass != null){
																																												for(qmm.OrGroup og : this.roleClass) if(!og.isTransitive()) nr_nonTransitive_roleClass++;
																																												}
																																												if(nr_nonTransitive_roleClass > roleClass_upperBound && roleClass_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_roleClass + " non-transitive roleClass. Only " + roleClass_upperBound + " are allowed.",new Object[] { this }));
																																												
																																												return true;"/>
																																											</EAnnotation>
																																											<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																											<EParameter name="context" type="EMap"/>
																																										</EOperation>
																																										<ref name="attribute" upperBound="-1" containment="true" resolveProxies="false" type="Attribute_OrGroup"/>
																																										<ref name="externalInterface" upperBound="-1" containment="true" resolveProxies="false" type="ExternalInterface_OrGroup"/>
																																										<ref name="baseClass" upperBound="-1" containment="true" type="RoleClass_OrGroup"/>
																																										<ref name="roleClass" upperBound="-1" containment="true" resolveProxies="false" type="RoleClass_OrGroup"/>
																																										<ref name="refBaseClassPath_AttrEClass" containment="true" type="RoleClass_refBaseClassPath_AttrEClass"/>
																																									</class>
																																									<class name="RoleFamily">
																																										<EOperation name="validate" lowerBound="1" type="EBoolean">
																																											<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																												<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																																												if(this.evaluationOperator != null){
																																												EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																																													for(int i=0; i<diagnosticList.size(); i++){
																																													diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																																													}
																																													}
																																													}
																																													
																																													return true;"/>
																																												</EAnnotation>
																																												<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																												<EParameter name="context" type="EMap"/>
																																											</EOperation>
																																										</class>
																																										<class name="RoleRequirements">
																																											<EOperation name="validate" lowerBound="1" type="EBoolean">
																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																													<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																																													if(this.evaluationOperator != null){
																																													EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																																														for(int i=0; i<diagnosticList.size(); i++){
																																														diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																																														}
																																														}
																																														}
																																														
																																														final int attribute_upperBound = -1;
																																														int nr_nonTransitive_attribute = 0;
																																														if(this.attribute != null){
																																														for(qmm.OrGroup og : this.attribute) if(!og.isTransitive()) nr_nonTransitive_attribute++;
																																														}
																																														if(nr_nonTransitive_attribute > attribute_upperBound && attribute_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_attribute + " non-transitive attribute. Only " + attribute_upperBound + " are allowed.",new Object[] { this }));
																																															
																																															final int externalInterface_upperBound = -1;
																																															int nr_nonTransitive_externalInterface = 0;
																																															if(this.externalInterface != null){
																																															for(qmm.OrGroup og : this.externalInterface) if(!og.isTransitive()) nr_nonTransitive_externalInterface++;
																																															}
																																															if(nr_nonTransitive_externalInterface > externalInterface_upperBound && externalInterface_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_externalInterface + " non-transitive externalInterface. Only " + externalInterface_upperBound + " are allowed.",new Object[] { this }));
																																															
																																															final int mappingObject_upperBound = 1;
																																															int nr_nonTransitive_mappingObject = 0;
																																															if(this.mappingObject != null){
																																															for(qmm.OrGroup og : this.mappingObject) if(!og.isTransitive()) nr_nonTransitive_mappingObject++;
																																															}
																																															if(nr_nonTransitive_mappingObject > mappingObject_upperBound && mappingObject_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_mappingObject + " non-transitive mappingObject. Only " + mappingObject_upperBound + " are allowed.",new Object[] { this }));
																																															
																																															final int roleClass_upperBound = 1;
																																															int nr_nonTransitive_roleClass = 0;
																																															if(this.roleClass != null){
																																															for(qmm.OrGroup og : this.roleClass) if(!og.isTransitive()) nr_nonTransitive_roleClass++;
																																															}
																																															if(nr_nonTransitive_roleClass > roleClass_upperBound && roleClass_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_roleClass + " non-transitive roleClass. Only " + roleClass_upperBound + " are allowed.",new Object[] { this }));
																																															
																																															return true;"/>
																																														</EAnnotation>
																																														<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																														<EParameter name="context" type="EMap"/>
																																													</EOperation>
																																													<ref name="attribute" upperBound="-1" containment="true" resolveProxies="false" type="Attribute_OrGroup"/>
																																													<ref name="externalInterface" upperBound="-1" containment="true" resolveProxies="false" type="InterfaceClass_OrGroup"/>
																																													<ref name="mappingObject" upperBound="-1" containment="true" resolveProxies="false" type="Mapping_OrGroup"/>
																																													<ref name="roleClass" upperBound="-1" containment="true" type="RoleClass_OrGroup"/>
																																												</class>
																																												<class name="SourceDocumentInformation">
																																													<EOperation name="validate" lowerBound="1" type="EBoolean">
																																														<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																															<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																																															if(this.evaluationOperator != null){
																																															EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																																																for(int i=0; i<diagnosticList.size(); i++){
																																																diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																																																}
																																																}
																																																}
																																																
																																																return true;"/>
																																															</EAnnotation>
																																															<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																															<EParameter name="context" type="EMap"/>
																																														</EOperation>
																																														<ref name="lastWritingDateTime_AttrEClass" containment="true" type="SourceDocumentInformation_lastWritingDateTime_AttrEClass"/>
																																														<ref name="originID_AttrEClass" containment="true" type="SourceDocumentInformation_originID_AttrEClass"/>
																																														<ref name="originName_AttrEClass" containment="true" type="SourceDocumentInformation_originName_AttrEClass"/>
																																														<ref name="originProjectID_AttrEClass" containment="true" type="SourceDocumentInformation_originProjectID_AttrEClass"/>
																																														<ref name="originProjectTitle_AttrEClass" containment="true" type="SourceDocumentInformation_originProjectTitle_AttrEClass"/>
																																														<ref name="originRelease_AttrEClass" containment="true" type="SourceDocumentInformation_originRelease_AttrEClass"/>
																																														<ref name="originVendor_AttrEClass" containment="true" type="SourceDocumentInformation_originVendor_AttrEClass"/>
																																														<ref name="originVendorURL_AttrEClass" containment="true" type="SourceDocumentInformation_originVendorURL_AttrEClass"/>
																																														<ref name="originVersion_AttrEClass" containment="true" type="SourceDocumentInformation_originVersion_AttrEClass"/>
																																													</class>
																																													<class name="SupportedRoleClass">
																																														<EOperation name="validate" lowerBound="1" type="EBoolean">
																																															<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																																																if(this.evaluationOperator != null){
																																																EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																																																	for(int i=0; i<diagnosticList.size(); i++){
																																																	diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																																																	}
																																																	}
																																																	}
																																																	
																																																	final int mappingObject_upperBound = 1;
																																																	int nr_nonTransitive_mappingObject = 0;
																																																	if(this.mappingObject != null){
																																																	for(qmm.OrGroup og : this.mappingObject) if(!og.isTransitive()) nr_nonTransitive_mappingObject++;
																																																	}
																																																	if(nr_nonTransitive_mappingObject > mappingObject_upperBound && mappingObject_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_mappingObject + " non-transitive mappingObject. Only " + mappingObject_upperBound + " are allowed.",new Object[] { this }));
																																																		
																																																		final int roleClass_upperBound = 1;
																																																		int nr_nonTransitive_roleClass = 0;
																																																		if(this.roleClass != null){
																																																		for(qmm.OrGroup og : this.roleClass) if(!og.isTransitive()) nr_nonTransitive_roleClass++;
																																																		}
																																																		if(nr_nonTransitive_roleClass > roleClass_upperBound && roleClass_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_roleClass + " non-transitive roleClass. Only " + roleClass_upperBound + " are allowed.",new Object[] { this }));
																																																		
																																																		return true;"/>
																																																	</EAnnotation>
																																																	<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																	<EParameter name="context" type="EMap"/>
																																																</EOperation>
																																																<ref name="mappingObject" upperBound="-1" containment="true" resolveProxies="false" type="Mapping_OrGroup"/>
																																																<ref name="roleClass" upperBound="-1" containment="true" type="RoleClass_OrGroup"/>
																																																<ref name="refRoleClassPath_AttrEClass" containment="true" type="SupportedRoleClass_refRoleClassPath_AttrEClass"/>
																																															</class>
																																															<class name="SystemUnitClassLib">
																																																<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																	<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																		<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																																																		if(this.evaluationOperator != null){
																																																		EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																																																			for(int i=0; i<diagnosticList.size(); i++){
																																																			diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																																																			}
																																																			}
																																																			}
																																																			
																																																			final int systemUnitClass_upperBound = -1;
																																																			int nr_nonTransitive_systemUnitClass = 0;
																																																			if(this.systemUnitClass != null){
																																																			for(qmm.OrGroup og : this.systemUnitClass) if(!og.isTransitive()) nr_nonTransitive_systemUnitClass++;
																																																			}
																																																			if(nr_nonTransitive_systemUnitClass > systemUnitClass_upperBound && systemUnitClass_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_systemUnitClass + " non-transitive systemUnitClass. Only " + systemUnitClass_upperBound + " are allowed.",new Object[] { this }));
																																																				
																																																				return true;"/>
																																																			</EAnnotation>
																																																			<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																			<EParameter name="context" type="EMap"/>
																																																		</EOperation>
																																																		<ref name="systemUnitClass" upperBound="-1" containment="true" resolveProxies="false" type="SystemUnitClass_OrGroup"/>
																																																	</class>
																																																	<class name="SystemUnitClass">
																																																		<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																				<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																																																				if(this.evaluationOperator != null){
																																																				EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																																																					for(int i=0; i<diagnosticList.size(); i++){
																																																					diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																																																					}
																																																					}
																																																					}
																																																					
																																																					final int attribute_upperBound = -1;
																																																					int nr_nonTransitive_attribute = 0;
																																																					if(this.attribute != null){
																																																					for(qmm.OrGroup og : this.attribute) if(!og.isTransitive()) nr_nonTransitive_attribute++;
																																																					}
																																																					if(nr_nonTransitive_attribute > attribute_upperBound && attribute_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_attribute + " non-transitive attribute. Only " + attribute_upperBound + " are allowed.",new Object[] { this }));
																																																						
																																																						final int externalInterface_upperBound = -1;
																																																						int nr_nonTransitive_externalInterface = 0;
																																																						if(this.externalInterface != null){
																																																						for(qmm.OrGroup og : this.externalInterface) if(!og.isTransitive()) nr_nonTransitive_externalInterface++;
																																																						}
																																																						if(nr_nonTransitive_externalInterface > externalInterface_upperBound && externalInterface_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_externalInterface + " non-transitive externalInterface. Only " + externalInterface_upperBound + " are allowed.",new Object[] { this }));
																																																						
																																																						final int internalElement_upperBound = -1;
																																																						int nr_nonTransitive_internalElement = 0;
																																																						if(this.internalElement != null){
																																																						for(qmm.OrGroup og : this.internalElement) if(!og.isTransitive()) nr_nonTransitive_internalElement++;
																																																						}
																																																						if(nr_nonTransitive_internalElement > internalElement_upperBound && internalElement_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_internalElement + " non-transitive internalElement. Only " + internalElement_upperBound + " are allowed.",new Object[] { this }));
																																																						
																																																						final int supportedRoleClass_upperBound = -1;
																																																						int nr_nonTransitive_supportedRoleClass = 0;
																																																						if(this.supportedRoleClass != null){
																																																						for(qmm.OrGroup og : this.supportedRoleClass) if(!og.isTransitive()) nr_nonTransitive_supportedRoleClass++;
																																																						}
																																																						if(nr_nonTransitive_supportedRoleClass > supportedRoleClass_upperBound && supportedRoleClass_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_supportedRoleClass + " non-transitive supportedRoleClass. Only " + supportedRoleClass_upperBound + " are allowed.",new Object[] { this }));
																																																						
																																																						final int internalLink_upperBound = -1;
																																																						int nr_nonTransitive_internalLink = 0;
																																																						if(this.internalLink != null){
																																																						for(qmm.OrGroup og : this.internalLink) if(!og.isTransitive()) nr_nonTransitive_internalLink++;
																																																						}
																																																						if(nr_nonTransitive_internalLink > internalLink_upperBound && internalLink_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_internalLink + " non-transitive internalLink. Only " + internalLink_upperBound + " are allowed.",new Object[] { this }));
																																																						
																																																						final int baseClass_upperBound = 1;
																																																						int nr_nonTransitive_baseClass = 0;
																																																						if(this.baseClass != null){
																																																						for(qmm.OrGroup og : this.baseClass) if(!og.isTransitive()) nr_nonTransitive_baseClass++;
																																																						}
																																																						if(nr_nonTransitive_baseClass > baseClass_upperBound && baseClass_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_baseClass + " non-transitive baseClass. Only " + baseClass_upperBound + " are allowed.",new Object[] { this }));
																																																						
																																																						final int systemUnitClass_upperBound = -1;
																																																						int nr_nonTransitive_systemUnitClass = 0;
																																																						if(this.systemUnitClass != null){
																																																						for(qmm.OrGroup og : this.systemUnitClass) if(!og.isTransitive()) nr_nonTransitive_systemUnitClass++;
																																																						}
																																																						if(nr_nonTransitive_systemUnitClass > systemUnitClass_upperBound && systemUnitClass_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_systemUnitClass + " non-transitive systemUnitClass. Only " + systemUnitClass_upperBound + " are allowed.",new Object[] { this }));
																																																						
																																																						return true;"/>
																																																					</EAnnotation>
																																																					<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																					<EParameter name="context" type="EMap"/>
																																																				</EOperation>
																																																				<ref name="attribute" upperBound="-1" containment="true" resolveProxies="false" type="Attribute_OrGroup"/>
																																																				<ref name="externalInterface" upperBound="-1" containment="true" resolveProxies="false" type="InterfaceClass_OrGroup"/>
																																																				<ref name="internalElement" upperBound="-1" containment="true" resolveProxies="false" type="InternalElement_OrGroup"/>
																																																				<ref name="supportedRoleClass" upperBound="-1" containment="true" resolveProxies="false" type="SupportedRoleClass_OrGroup"/>
																																																				<ref name="internalLink" upperBound="-1" containment="true" resolveProxies="false" type="InternalLink_OrGroup"/>
																																																				<ref name="baseClass" upperBound="-1" containment="true" type="SystemUnitClass_OrGroup"/>
																																																				<ref name="systemUnitClass" upperBound="-1" containment="true" resolveProxies="false" type="SystemUnitClass_OrGroup"/>
																																																				<ref name="refBaseClassPath_AttrEClass" containment="true" type="SystemUnitClass_refBaseClassPath_AttrEClass"/>
																																																			</class>
																																																			<class name="SystemUnitFamily">
																																																				<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																					<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																						<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																																																						if(this.evaluationOperator != null){
																																																						EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																																																							for(int i=0; i<diagnosticList.size(); i++){
																																																							diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																																																							}
																																																							}
																																																							}
																																																							
																																																							return true;"/>
																																																						</EAnnotation>
																																																						<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																						<EParameter name="context" type="EMap"/>
																																																					</EOperation>
																																																				</class>
																																																				<class name="UnknownType">
																																																					<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																						<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																							<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																																																							if(this.evaluationOperator != null){
																																																							EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																																																								for(int i=0; i<diagnosticList.size(); i++){
																																																								diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																																																								}
																																																								}
																																																								}
																																																								
																																																								return true;"/>
																																																							</EAnnotation>
																																																							<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																							<EParameter name="context" type="EMap"/>
																																																						</EOperation>
																																																						<ref name="requirements_AttrEClass" containment="true" type="UnknownType_requirements_AttrEClass"/>
																																																					</class>
																																																					<class name="Copyright">
																																																						<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																								<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																																																								if(this.evaluationOperator != null){
																																																								EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																																																									for(int i=0; i<diagnosticList.size(); i++){
																																																									diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																																																									}
																																																									}
																																																									}
																																																									
																																																									return true;"/>
																																																								</EAnnotation>
																																																								<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																								<EParameter name="context" type="EMap"/>
																																																							</EOperation>
																																																							<ref name="value_AttrEClass" containment="true" type="Copyright_value_AttrEClass"/>
																																																							<ref name="changeMode_AttrEClass" containment="true" type="Copyright_changeMode_AttrEClass"/>
																																																						</class>
																																																						<class name="Description">
																																																							<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																									<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																																																									if(this.evaluationOperator != null){
																																																									EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																																																										for(int i=0; i<diagnosticList.size(); i++){
																																																										diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																																																										}
																																																										}
																																																										}
																																																										
																																																										return true;"/>
																																																									</EAnnotation>
																																																									<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																									<EParameter name="context" type="EMap"/>
																																																								</EOperation>
																																																								<ref name="value_AttrEClass" containment="true" type="Description_value_AttrEClass"/>
																																																								<ref name="changeMode_AttrEClass" containment="true" type="Description_changeMode_AttrEClass"/>
																																																							</class>
																																																							<class name="Revision">
																																																								<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																										<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																																																										if(this.evaluationOperator != null){
																																																										EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																																																											for(int i=0; i<diagnosticList.size(); i++){
																																																											diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																																																											}
																																																											}
																																																											}
																																																											
																																																											return true;"/>
																																																										</EAnnotation>
																																																										<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																										<EParameter name="context" type="EMap"/>
																																																									</EOperation>
																																																									<ref name="revisionDate_AttrEClass" containment="true" type="Revision_revisionDate_AttrEClass"/>
																																																									<ref name="oldVersion_AttrEClass" containment="true" type="Revision_oldVersion_AttrEClass"/>
																																																									<ref name="newVersion_AttrEClass" containment="true" type="Revision_newVersion_AttrEClass"/>
																																																									<ref name="authorName_AttrEClass" containment="true" type="Revision_authorName_AttrEClass"/>
																																																									<ref name="comment_AttrEClass" containment="true" type="Revision_comment_AttrEClass"/>
																																																								</class>
																																																								<class name="Version">
																																																									<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																										<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																											<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																																																											if(this.evaluationOperator != null){
																																																											EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																																																												for(int i=0; i<diagnosticList.size(); i++){
																																																												diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																																																												}
																																																												}
																																																												}
																																																												
																																																												return true;"/>
																																																											</EAnnotation>
																																																											<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																											<EParameter name="context" type="EMap"/>
																																																										</EOperation>
																																																										<ref name="value_AttrEClass" containment="true" type="Version_value_AttrEClass"/>
																																																										<ref name="changeMode_AttrEClass" containment="true" type="Version_changeMode_AttrEClass"/>
																																																									</class>
																																																									<class name="AdditionalInformation">
																																																										<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																											<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																												<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																																																												if(this.evaluationOperator != null){
																																																												EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																																																													for(int i=0; i<diagnosticList.size(); i++){
																																																													diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																																																													}
																																																													}
																																																													}
																																																													
																																																													return true;"/>
																																																												</EAnnotation>
																																																												<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																												<EParameter name="context" type="EMap"/>
																																																											</EOperation>
																																																										</class>
																																																										<class name="Element" abstract="true">
																																																											<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																													<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																																																													if(this.evaluationOperator != null){
																																																													EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																																																														for(int i=0; i<diagnosticList.size(); i++){
																																																														diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																																																														}
																																																														}
																																																														}
																																																														
																																																														return true;"/>
																																																													</EAnnotation>
																																																													<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																													<EParameter name="context" type="EMap"/>
																																																												</EOperation>
																																																												<ref name="name_AttrEClass" containment="true" type="Element_name_AttrEClass"/>
																																																												<ref name="value_AttrEClass" containment="true" type="Element_value_AttrEClass"/>
																																																											</class>
																																																											<class name="GenericElement">
																																																												<EAnnotation source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
																																																													<EStringToStringMapEntry key="kind" value="empty"/>
																																																												</EAnnotation>
																																																												<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																													<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																														<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																																																														if(this.evaluationOperator != null){
																																																														EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																																																															for(int i=0; i<diagnosticList.size(); i++){
																																																															diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																																																															}
																																																															}
																																																															}
																																																															
																																																															final int nestedElements_upperBound = -1;
																																																															int nr_nonTransitive_nestedElements = 0;
																																																															if(this.nestedElements != null){
																																																															for(qmm.OrGroup og : this.nestedElements) if(!og.isTransitive()) nr_nonTransitive_nestedElements++;
																																																															}
																																																															if(nr_nonTransitive_nestedElements > nestedElements_upperBound && nestedElements_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_nestedElements + " non-transitive nestedElements. Only " + nestedElements_upperBound + " are allowed.",new Object[] { this }));
																																																																
																																																																final int attributes_upperBound = -1;
																																																																int nr_nonTransitive_attributes = 0;
																																																																if(this.attributes != null){
																																																																for(qmm.OrGroup og : this.attributes) if(!og.isTransitive()) nr_nonTransitive_attributes++;
																																																																}
																																																																if(nr_nonTransitive_attributes > attributes_upperBound && attributes_upperBound > -1) diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "EClass contains " + nr_nonTransitive_attributes + " non-transitive attributes. Only " + attributes_upperBound + " are allowed.",new Object[] { this }));
																																																																
																																																																return true;"/>
																																																															</EAnnotation>
																																																															<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																															<EParameter name="context" type="EMap"/>
																																																														</EOperation>
																																																														<ref name="nestedElements" upperBound="-1" containment="true" type="GenericElement_OrGroup">
																																																															<EAnnotation source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
																																																																<EStringToStringMapEntry key="kind" value="empty"/>
																																																															</EAnnotation>
																																																														</ref>
																																																														<ref name="attributes" upperBound="-1" containment="true" type="GenericAttribute_OrGroup">
																																																															<EAnnotation source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
																																																																<EStringToStringMapEntry key="kind" value="empty"/>
																																																															</EAnnotation>
																																																														</ref>
																																																														<ref name="elementFeatureMap_AttrEClass" upperBound="-1" containment="true" type="GenericElement_elementFeatureMap_AttrEClass"/>
																																																														<ref name="attributeFeatureMap_AttrEClass" upperBound="-1" containment="true" type="GenericElement_attributeFeatureMap_AttrEClass"/>
																																																													</class>
																																																													<class name="GenericAttribute">
																																																														<EAnnotation source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
																																																															<EStringToStringMapEntry key="kind" value="empty"/>
																																																														</EAnnotation>
																																																														<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																															<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																																																																if(this.evaluationOperator != null){
																																																																EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateAllCheckExpressions(this.evaluationOperator);
																																																																	for(int i=0; i<diagnosticList.size(); i++){
																																																																	diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																																																																	}
																																																																	}
																																																																	}
																																																																	
																																																																	return true;"/>
																																																																</EAnnotation>
																																																																<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																<EParameter name="context" type="EMap"/>
																																																															</EOperation>
																																																														</class>
																																																														<class name="NamedElement" abstract="true">
																																																															<attr name="name" lowerBound="1" iD="true" type="//EString"/>
																																																														</class>
																																																														<class name="Countable" abstract="true"/>
																																																														<class name="NegatableElement" abstract="true">
																																																															<attr name="negated" lowerBound="1" defaultValueLiteral="false" type="//EBoolean"/>
																																																														</class>
																																																														<class name="OrGroup" abstract="true">
																																																															<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																	<EStringToStringMapEntry key="body" value="EClass containerEClass = this.eContainingFeature().getEContainingClass();org.eclipse.emf.ecore.EClassifier eType = this.eClass().getEStructuralFeature("containment").getEType();if(eType != null && eType instanceof EClass){	EClass typeEClass = (EClass)eType;	if(!containerEClass.isSuperTypeOf(typeEClass) && this.transitive){		String errorMessage = "Feature " + this.name + " can't be transitive! It is defined by the type " + containerEClass.getName() + ", but is itself not an instance of (a subtype of) this type.";		diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OR_GROUP__VALIDATE, errorMessage,new Object[] { this }));	}}return true;"/>
																																																																</EAnnotation>
																																																																<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																<EParameter name="context" type="EMap"/>
																																																															</EOperation>
																																																															<attr name="transitive" lowerBound="1" defaultValueLiteral="false" type="//EBoolean"/>
																																																														</class>
																																																														<class name="TypedElement" abstract="true">
																																																															<EOperation name="getType" lowerBound="1" type="EJavaObject">
																																																																<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																	<EStringToStringMapEntry key="body" value="EClass typeEClass = QmmPackage.eINSTANCE.getType();
																																																																	EClass type = null;
																																																																	for(EClass possibleTypeSubClass : this.eClass().getEAllSuperTypes()){
																																																																	if(typeEClass.isSuperTypeOf(possibleTypeSubClass) && !typeEClass.equals(possibleTypeSubClass)){
																																																																	type = possibleTypeSubClass;
																																																																	}
																																																																	}
																																																																	return type;"/>
																																																																</EAnnotation>
																																																															</EOperation>
																																																														</class>
																																																														<class name="RootClass" abstract="true">
																																																															<EOperation name="validateCheckExpression" lowerBound="1" type="EEList">
																																																																<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																	<EStringToStringMapEntry key="body" value="EClass booleanType = QmmPackage.eINSTANCE.getBoolean_Type();
																																																																	EClass functionalOperatorType = QmmPackage.eINSTANCE.getFunctionalOperator();
																																																																	EClass bitOperatorType = QmmPackage.eINSTANCE.getBitOperator();
																																																																	qmm.Operator operator = (qmm.Operator)o;
																																																																	EList diagnosticList = new org.eclipse.emf.common.util.BasicEList();
																																																																	
																																																																	if(functionalOperatorType.isSuperTypeOf(operator.eClass())){
																																																																	qmm.FunctionalOperator lastOperator = (qmm.FunctionalOperator)((qmm.FunctionalOperator)operator).getLastOperator();
																																																																	EClass lastOperatorType = (EClass)lastOperator.getType();
																																																																	if(!booleanType.isSuperTypeOf(lastOperatorType)){
																																																																	String errorMessage = "Operator " + lastOperator.eClass().getName() + " of attribute " + this.eClass().getName() + " is of type " + lastOperatorType.getName() + ", but must be (a subtype) of type " + booleanType.getName() + ".";
																																																																	diagnosticList.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage,new Object[] { this }));
																																																																	}
																																																																	}else if(bitOperatorType.isSuperTypeOf(operator.eClass())){
																																																																	for(qmm.Operator op : (EList<qmm.Operator>)operator.eGet(operator.eClass().getEStructuralFeature("connects"))){
																																																																		diagnosticList.addAll(validateCheckExpression(op));
																																																																		}
																																																																		}
																																																																		return diagnosticList;"/>
																																																																	</EAnnotation>
																																																																	<EParameter name="o" type="EJavaObject"/>
																																																																</EOperation>
																																																																<EOperation name="validateAllCheckExpressions" lowerBound="1" type="EEList">
																																																																	<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																		<EStringToStringMapEntry key="body" value="
																																																																		EList<qmm.Operator> operators = (EList<qmm.Operator>)o;
																																																																				EList diagnosticList = new org.eclipse.emf.common.util.BasicEList();
																																																																				if(operators != null){
																																																																				for(qmm.Operator operator:operators){
																																																																				diagnosticList.addAll(validateCheckExpression(operator));
																																																																				}
																																																																				}
																																																																				return diagnosticList;"/>
																																																																			</EAnnotation>
																																																																			<EParameter name="o" type="EJavaObject"/>
																																																																		</EOperation>
																																																																		<ref name="EvaluationOperator" upperBound="-1" containment="true" type="EvaluationOperator"/>
																																																																	</class>
																																																																	<class name="Query" abstract="true"/>
																																																																	<class name="FindQuery">
																																																																		<ref name="where" lowerBound="1" upperBound="-1" containment="true" type="RootClass"/>
																																																																	</class>
																																																																	<class name="Calculateable" abstract="true"/>
																																																																	<class name="CalculateableElement" abstract="true"/>
																																																																	<class name="AttributeEClass" abstract="true"/>
																																																																	<class name="RegularAttributeEClass" abstract="true">
																																																																		<EOperation name="validateCheckExpression" lowerBound="1" type="EEList">
																																																																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																				<EStringToStringMapEntry key="body" value="EClass booleanType = QmmPackage.eINSTANCE.getBoolean_Type();
																																																																				EClass functionalOperatorType = QmmPackage.eINSTANCE.getFunctionalOperator();
																																																																				EClass bitOperatorType = QmmPackage.eINSTANCE.getBitOperator();
																																																																				qmm.Operator operator = (qmm.Operator)o;
																																																																				EList diagnosticList = new org.eclipse.emf.common.util.BasicEList();
																																																																				
																																																																				if(functionalOperatorType.isSuperTypeOf(operator.eClass())){
																																																																				qmm.FunctionalOperator lastOperator = (qmm.FunctionalOperator)((qmm.FunctionalOperator)operator).getLastOperator();
																																																																				EClass lastOperatorType = (EClass)lastOperator.getType();
																																																																				if(!booleanType.isSuperTypeOf(lastOperatorType)){
																																																																				String errorMessage = "Operator " + lastOperator.eClass().getName() + " of attribute " + this.eClass().getName() + " is of type " + lastOperatorType.getName() + ", but must be (a subtype) of type " + booleanType.getName() + ".";
																																																																				diagnosticList.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage,new Object[] { this }));
																																																																				}
																																																																				}else if(bitOperatorType.isSuperTypeOf(operator.eClass())){
																																																																				for(qmm.Operator op : (EList<qmm.Operator>)operator.eGet(operator.eClass().getEStructuralFeature("connects"))){
																																																																					diagnosticList.addAll(validateCheckExpression(op));
																																																																					}
																																																																					}
																																																																					return diagnosticList;"/>
																																																																				</EAnnotation>
																																																																				<EParameter name="o" type="EJavaObject"/>
																																																																			</EOperation>
																																																																		</class>
																																																																		<class name="EnumerationAttributeEClass" abstract="true"/>
																																																																		<class name="Type" abstract="true"/>
																																																																		<class name="FunctionalType" abstract="true"/>
																																																																		<class name="Argument" abstract="true"/>
																																																																		<class name="ReferenceArgument" abstract="true"/>
																																																																		<class name="Countable_ReferenceArgument">
																																																																			<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																				<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																					<EStringToStringMapEntry key="body" value="qmm.RootClass containingRootClass = null;
																																																																					qmm.RootClass referencesRootClass = null;
																																																																					qmm.Countable containingCountable = null;
																																																																					
																																																																					if(this.eContainer() != null && this.reference != null){
																																																																					org.eclipse.emf.ecore.EObject eContainer = this.eContainer();
																																																																					while(eContainer != null && !(eContainer instanceof qmm.RootClass)){
																																																																					if(eContainer instanceof qmm.Countable){
																																																																					containingCountable = (qmm.Countable)eContainer;
																																																																					}
																																																																					eContainer = eContainer.eContainer();
																																																																					}
																																																																					containingRootClass = (qmm.RootClass)eContainer;
																																																																					
																																																																					eContainer = this.reference.eContainer();
																																																																					while(eContainer != null && !(eContainer instanceof qmm.RootClass)){
																																																																					eContainer = eContainer.eContainer();
																																																																					}
																																																																					
																																																																					referencesRootClass = (qmm.RootClass)eContainer;
																																																																					
																																																																					if(containingCountable != null && containingCountable == reference){  //self-reference in expression !
																																																																					String errorMessage = "Self-reference in expression of " + containingCountable + " detected. Self-references are not allowed!";
																																																																					diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage,new Object[] { this }));
																																																																					}
																																																																					
																																																																					if(containingRootClass != referencesRootClass){
																																																																					String errorMessage = "The referenced element " + this.reference + " is contained by a different parent-element than the expression's parent-element. Cross-references are not supported.";
																																																																					diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage,new Object[] { this }));
																																																																					}
																																																																					
																																																																					if(this.reference instanceof qmm.NegatableElement && ((qmm.NegatableElement)this.reference).isNegated())diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "Reference to a negated element in " + this + " has been detected. References to negated elements are not allowed.",new Object[] { this }));
																																																																					}
																																																																					
																																																																					return true;"/>
																																																																				</EAnnotation>
																																																																				<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																				<EParameter name="context" type="EMap"/>
																																																																			</EOperation>
																																																																			<ref name="reference" lowerBound="1" type="Countable"/>
																																																																		</class>
																																																																		<class name="Calculateable_Argument" abstract="true"/>
																																																																		<class name="CalculateableElement_ReferenceArgument" abstract="true"/>
																																																																		<class name="FunctionalArgument" abstract="true"/>
																																																																		<class name="EvaluationOperation_Argument" abstract="true"/>
																																																																		<class name="PrimitiveArgument" abstract="true"/>
																																																																		<class name="Parameter" abstract="true"/>
																																																																		<class name="CountableReferenceParameter">
																																																																			<ref name="argument" lowerBound="1" containment="true" type="Countable_ReferenceArgument"/>
																																																																		</class>
																																																																		<class name="CalculateableParameter" abstract="true">
																																																																			<ref name="argument" lowerBound="1" containment="true" type="Calculateable_Argument"/>
																																																																		</class>
																																																																		<class name="FunctionalParameter" abstract="true">
																																																																			<ref name="argument" lowerBound="1" containment="true" type="FunctionalArgument"/>
																																																																		</class>
																																																																		<class name="Integer_Calculateable" abstract="true"/>
																																																																		<class name="Integer_CalculateableElement" abstract="true"/>
																																																																		<class name="Operator" abstract="true"/>
																																																																		<class name="ExpressionOperator" abstract="true"/>
																																																																		<class name="EnumerationOperator" abstract="true"/>
																																																																		<class name="BitOperator" abstract="true"/>
																																																																		<class name="FunctionalOperator" abstract="true">
																																																																			<EOperation name="getLastOperator" lowerBound="1" type="EJavaObject">
																																																																				<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																					<EStringToStringMapEntry key="body" value="qmm.FunctionalOperator operator = this;
																																																																					while(operator.eGet(operator.eClass().getEStructuralFeature("operator")) != null){
																																																																					operator = (qmm.FunctionalOperator) operator.eGet(operator.eClass().getEStructuralFeature("operator"));
																																																																					}
																																																																					return operator;"/>
																																																																				</EAnnotation>
																																																																			</EOperation>
																																																																		</class>
																																																																		<class name="ClassOperator" abstract="true"/>
																																																																		<class name="EvaluationOperator" abstract="true"/>
																																																																		<class name="EvaluationFunctionalOperator" abstract="true"/>
																																																																		<class name="AggregationOperator" abstract="true"/>
																																																																		<class name="EvaluationBitOperator" abstract="true">
																																																																			<ref name="connects" lowerBound="2" upperBound="-1" containment="true" type="EvaluationOperator"/>
																																																																		</class>
																																																																		<class name="And_EvaluationBitOperator">
																																																																			<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																				<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																					<EStringToStringMapEntry key="body" value="return "&&";"/>
																																																																				</EAnnotation>
																																																																			</EOperation>
																																																																		</class>
																																																																		<class name="Or_EvaluationBitOperator">
																																																																			<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																				<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																					<EStringToStringMapEntry key="body" value="return "||";"/>
																																																																				</EAnnotation>
																																																																			</EOperation>
																																																																		</class>
																																																																		<class name="CountingAggregationOperator" abstract="true">
																																																																			<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																				<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																					<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																					parameterList.add(countable);
																																																																					return parameterList;"/>
																																																																				</EAnnotation>
																																																																			</EOperation>
																																																																			<ref name="countable" lowerBound="1" containment="true" type="CountableReferenceParameter"/>
																																																																		</class>
																																																																		<class name="CalculatingAggregationOperator" abstract="true"/>
																																																																		<class name="String_Calculateable" abstract="true"/>
																																																																		<class name="String_CalculateableElement" abstract="true"/>
																																																																		<class name="String_AttributeEClass" abstract="true">
																																																																			<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																				<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																					<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																																																																					if(this.operator != null){
																																																																					EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateCheckExpression(this.operator);
																																																																						for(int i=0; i<diagnosticList.size(); i++){
																																																																						diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																																																																						}
																																																																						}
																																																																						}
																																																																						return true;"/>
																																																																					</EAnnotation>
																																																																					<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																					<EParameter name="context" type="EMap"/>
																																																																				</EOperation>
																																																																				<ref name="operator" containment="true" type="String_ExpressionOperator"/>
																																																																			</class>
																																																																			<class name="String_Operator" abstract="true"/>
																																																																			<class name="String_Type" abstract="true">
																																																																				<EAnnotation source="information">
																																																																					<EStringToStringMapEntry key="type" value="String"/>
																																																																				</EAnnotation>
																																																																			</class>
																																																																			<class name="String_FunctionalType" abstract="true">
																																																																				<ref name="operator" containment="true" type="String_FunctionalOperator"/>
																																																																			</class>
																																																																			<class name="String_CalculateableParameter">
																																																																				<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																					<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																						<EStringToStringMapEntry key="body" value="if (diagnostic != null) {
																																																																						String errorMessage = "";
																																																																						EClass thisType = (EClass) this.getType();
																																																																						if(this.argument!=null){
																																																																						if (this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator")) != null) {
																																																																						qmm.FunctionalOperator lastFunctionalOperator = (qmm.FunctionalOperator) ((qmm.FunctionalOperator) this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator"))).getLastOperator();
																																																																						EClass lastFunctionalOperatorType = (EClass)lastFunctionalOperator.getType();
																																																																						if (!thisType.isSuperTypeOf(lastFunctionalOperatorType)) {
																																																																						errorMessage = "Parameter " + this.toString() + ": Argument of type " + lastFunctionalOperatorType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																						diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																						}
																																																																						} else {
																																																																						EClass argumentType = (EClass) this.argument.getType();
																																																																						if (!thisType.isSuperTypeOf(argumentType)) {
																																																																						errorMessage = "Parameter " + this.toString() + ": Argument of type " + argumentType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																						diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																						}
																																																																						}
																																																																						}
																																																																						}
																																																																						return true;"/>
																																																																					</EAnnotation>
																																																																					<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																					<EParameter name="context" type="EMap"/>
																																																																				</EOperation>
																																																																			</class>
																																																																			<class name="String_FunctionalParameter">
																																																																				<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																					<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																						<EStringToStringMapEntry key="body" value="if (diagnostic != null) {
																																																																						String errorMessage = "";
																																																																						EClass thisType = (EClass) this.getType();
																																																																						if(this.argument!=null){
																																																																						if (this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator")) != null) {
																																																																						qmm.FunctionalOperator lastFunctionalOperator = (qmm.FunctionalOperator) ((qmm.FunctionalOperator) this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator"))).getLastOperator();
																																																																						EClass lastFunctionalOperatorType = (EClass)lastFunctionalOperator.getType();
																																																																						if (!thisType.isSuperTypeOf(lastFunctionalOperatorType)) {
																																																																						errorMessage = "Parameter " + this.toString() + ": Argument of type " + lastFunctionalOperatorType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																						diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																						}
																																																																						} else {
																																																																						EClass argumentType = (EClass) this.argument.getType();
																																																																						if (!thisType.isSuperTypeOf(argumentType)) {
																																																																						errorMessage = "Parameter " + this.toString() + ": Argument of type " + argumentType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																						diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																						}
																																																																						}
																																																																						}
																																																																						}
																																																																						return true;"/>
																																																																					</EAnnotation>
																																																																					<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																					<EParameter name="context" type="EMap"/>
																																																																				</EOperation>
																																																																			</class>
																																																																			<class name="String_Argument" abstract="true"/>
																																																																			<class name="String_PrimitiveArgument">
																																																																				<attr name="value" lowerBound="1" type="//String"/>
																																																																			</class>
																																																																			<class name="String_EvaluationOperation_Argument" abstract="true">
																																																																				<EAnnotation source="information">
																																																																					<EStringToStringMapEntry key="functionalType" value="String"/>
																																																																				</EAnnotation>
																																																																			</class>
																																																																			<class name="String_CalculateableElementReferenceArgument">
																																																																				<EAnnotation source="information">
																																																																					<EStringToStringMapEntry key="functionalType" value="String"/>
																																																																				</EAnnotation>
																																																																				<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																					<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																						<EStringToStringMapEntry key="body" value="qmm.RootClass containingRootClass = null;
																																																																						qmm.RootClass referencesRootClass = null;
																																																																						qmm.AttributeEClass containingAttributeEClass = null;
																																																																						qmm.AttributeEClass referencesAttributeEClass = null;
																																																																						if(this.eContainer() != null && this.reference != null){
																																																																						org.eclipse.emf.ecore.EObject eContainer = this.eContainer();
																																																																						
																																																																						while(eContainer != null && !(eContainer instanceof qmm.RootClass)){
																																																																						if(eContainer instanceof qmm.AttributeEClass){
																																																																						containingAttributeEClass = (qmm.AttributeEClass)eContainer;
																																																																						}
																																																																						eContainer = eContainer.eContainer();
																																																																						}
																																																																						containingRootClass = (qmm.RootClass)eContainer;
																																																																						
																																																																						eContainer = this.reference.eContainer();
																																																																						while(eContainer != null && !(eContainer instanceof qmm.RootClass)){
																																																																						eContainer = eContainer.eContainer();
																																																																						}
																																																																						
																																																																						referencesRootClass = (qmm.RootClass)eContainer;
																																																																						if(this.reference instanceof qmm.AttributeEClass) referencesAttributeEClass = (qmm.AttributeEClass)this.reference;
																																																																						
																																																																						if(containingAttributeEClass != null && referencesAttributeEClass != null && containingAttributeEClass == referencesAttributeEClass){  //self-reference in expression !
																																																																						String errorMessage = "Self-reference in expression of attribute " + containingAttributeEClass.getName() + " detected. Self-references are not allowed!";
																																																																						diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage,new Object[] { this }));
																																																																						}
																																																																						
																																																																						if(containingRootClass != referencesRootClass){
																																																																						String errorMessage = "The referenced element " + this.reference + " is contained by a different parent-element than the expression's parent-element. Cross-references are not supported.";
																																																																						diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage,new Object[] { this }));
																																																																						}
																																																																						
																																																																						if(this.reference instanceof qmm.NegatableElement && ((qmm.NegatableElement)this.reference).isNegated())diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "Reference to a negated element in " + this + " has been detected. References to negated elements are not allowed.",new Object[] { this }));
																																																																						
																																																																						}
																																																																						return true;"/>
																																																																					</EAnnotation>
																																																																					<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																					<EParameter name="context" type="EMap"/>
																																																																				</EOperation>
																																																																				<ref name="reference" lowerBound="1" type="String_CalculateableElement"/>
																																																																			</class>
																																																																			<class name="String_ExpressionOperator" abstract="true">
																																																																				<EAnnotation source="information">
																																																																					<EStringToStringMapEntry key="type" value="String"/>
																																																																				</EAnnotation>
																																																																			</class>
																																																																			<class name="String_BitOperator" abstract="true">
																																																																				<EAnnotation source="information">
																																																																					<EStringToStringMapEntry key="type" value="String"/>
																																																																				</EAnnotation>
																																																																				<ref name="connects" lowerBound="2" upperBound="-1" containment="true" type="String_ExpressionOperator"/>
																																																																			</class>
																																																																			<class name="String_And_BitOperator">
																																																																				<EAnnotation source="information">
																																																																					<EStringToStringMapEntry key="type" value="String"/>
																																																																				</EAnnotation>
																																																																				<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																					<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																						<EStringToStringMapEntry key="body" value="return "&&";"/>
																																																																					</EAnnotation>
																																																																				</EOperation>
																																																																			</class>
																																																																			<class name="String_Or_BitOperator">
																																																																				<EAnnotation source="information">
																																																																					<EStringToStringMapEntry key="type" value="String"/>
																																																																				</EAnnotation>
																																																																				<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																					<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																						<EStringToStringMapEntry key="body" value="return "||";"/>
																																																																					</EAnnotation>
																																																																				</EOperation>
																																																																			</class>
																																																																			<class name="String_Original_FunctionalOperator" abstract="true">
																																																																				<EAnnotation source="information">
																																																																					<EStringToStringMapEntry key="type" value="String"/>
																																																																				</EAnnotation>
																																																																			</class>
																																																																			<class name="AttributeNameMapping_roleAttributeName_AttrEClass"/>
																																																																			<class name="AttributeNameMapping_systemUnitAttributeName_AttrEClass"/>
																																																																			<class name="Attribute_defaultValue_AttrEClass"/>
																																																																			<class name="Attribute_value_AttrEClass"/>
																																																																			<class name="AttributeDataType_Calculateable" abstract="true"/>
																																																																			<class name="AttributeDataType_CalculateableElement" abstract="true"/>
																																																																			<class name="AttributeDataType_AttributeEClass" abstract="true">
																																																																				<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																					<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																						<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																																																																						if(this.operator != null){
																																																																						EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateCheckExpression(this.operator);
																																																																							for(int i=0; i<diagnosticList.size(); i++){
																																																																							diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																																																																							}
																																																																							}
																																																																							}
																																																																							return true;"/>
																																																																						</EAnnotation>
																																																																						<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																						<EParameter name="context" type="EMap"/>
																																																																					</EOperation>
																																																																					<ref name="operator" containment="true" type="AttributeDataType_ExpressionOperator"/>
																																																																				</class>
																																																																				<class name="AttributeDataType_Operator" abstract="true"/>
																																																																				<class name="AttributeDataType_Type" abstract="true">
																																																																					<EAnnotation source="information">
																																																																						<EStringToStringMapEntry key="type" value="AttributeDataType"/>
																																																																					</EAnnotation>
																																																																				</class>
																																																																				<class name="AttributeDataType_FunctionalType" abstract="true">
																																																																					<ref name="operator" containment="true" type="AttributeDataType_FunctionalOperator"/>
																																																																				</class>
																																																																				<class name="AttributeDataType_CalculateableParameter">
																																																																					<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																						<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																							<EStringToStringMapEntry key="body" value="if (diagnostic != null) {
																																																																							String errorMessage = "";
																																																																							EClass thisType = (EClass) this.getType();
																																																																							if(this.argument!=null){
																																																																							if (this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator")) != null) {
																																																																							qmm.FunctionalOperator lastFunctionalOperator = (qmm.FunctionalOperator) ((qmm.FunctionalOperator) this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator"))).getLastOperator();
																																																																							EClass lastFunctionalOperatorType = (EClass)lastFunctionalOperator.getType();
																																																																							if (!thisType.isSuperTypeOf(lastFunctionalOperatorType)) {
																																																																							errorMessage = "Parameter " + this.toString() + ": Argument of type " + lastFunctionalOperatorType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																							diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																							}
																																																																							} else {
																																																																							EClass argumentType = (EClass) this.argument.getType();
																																																																							if (!thisType.isSuperTypeOf(argumentType)) {
																																																																							errorMessage = "Parameter " + this.toString() + ": Argument of type " + argumentType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																							diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																							}
																																																																							}
																																																																							}
																																																																							}
																																																																							return true;"/>
																																																																						</EAnnotation>
																																																																						<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																						<EParameter name="context" type="EMap"/>
																																																																					</EOperation>
																																																																				</class>
																																																																				<class name="AttributeDataType_FunctionalParameter">
																																																																					<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																						<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																							<EStringToStringMapEntry key="body" value="if (diagnostic != null) {
																																																																							String errorMessage = "";
																																																																							EClass thisType = (EClass) this.getType();
																																																																							if(this.argument!=null){
																																																																							if (this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator")) != null) {
																																																																							qmm.FunctionalOperator lastFunctionalOperator = (qmm.FunctionalOperator) ((qmm.FunctionalOperator) this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator"))).getLastOperator();
																																																																							EClass lastFunctionalOperatorType = (EClass)lastFunctionalOperator.getType();
																																																																							if (!thisType.isSuperTypeOf(lastFunctionalOperatorType)) {
																																																																							errorMessage = "Parameter " + this.toString() + ": Argument of type " + lastFunctionalOperatorType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																							diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																							}
																																																																							} else {
																																																																							EClass argumentType = (EClass) this.argument.getType();
																																																																							if (!thisType.isSuperTypeOf(argumentType)) {
																																																																							errorMessage = "Parameter " + this.toString() + ": Argument of type " + argumentType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																							diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																							}
																																																																							}
																																																																							}
																																																																							}
																																																																							return true;"/>
																																																																						</EAnnotation>
																																																																						<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																						<EParameter name="context" type="EMap"/>
																																																																					</EOperation>
																																																																				</class>
																																																																				<class name="AttributeDataType_Argument" abstract="true"/>
																																																																				<class name="AttributeDataType_PrimitiveArgument">
																																																																					<attr name="value" lowerBound="1" type="//AttributeDataType"/>
																																																																				</class>
																																																																				<class name="AttributeDataType_EvaluationOperation_Argument" abstract="true">
																																																																					<EAnnotation source="information">
																																																																						<EStringToStringMapEntry key="functionalType" value="AttributeDataType"/>
																																																																					</EAnnotation>
																																																																				</class>
																																																																				<class name="AttributeDataType_CalculateableElementReferenceArgument">
																																																																					<EAnnotation source="information">
																																																																						<EStringToStringMapEntry key="functionalType" value="AttributeDataType"/>
																																																																					</EAnnotation>
																																																																					<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																						<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																							<EStringToStringMapEntry key="body" value="qmm.RootClass containingRootClass = null;
																																																																							qmm.RootClass referencesRootClass = null;
																																																																							qmm.AttributeEClass containingAttributeEClass = null;
																																																																							qmm.AttributeEClass referencesAttributeEClass = null;
																																																																							if(this.eContainer() != null && this.reference != null){
																																																																							org.eclipse.emf.ecore.EObject eContainer = this.eContainer();
																																																																							
																																																																							while(eContainer != null && !(eContainer instanceof qmm.RootClass)){
																																																																							if(eContainer instanceof qmm.AttributeEClass){
																																																																							containingAttributeEClass = (qmm.AttributeEClass)eContainer;
																																																																							}
																																																																							eContainer = eContainer.eContainer();
																																																																							}
																																																																							containingRootClass = (qmm.RootClass)eContainer;
																																																																							
																																																																							eContainer = this.reference.eContainer();
																																																																							while(eContainer != null && !(eContainer instanceof qmm.RootClass)){
																																																																							eContainer = eContainer.eContainer();
																																																																							}
																																																																							
																																																																							referencesRootClass = (qmm.RootClass)eContainer;
																																																																							if(this.reference instanceof qmm.AttributeEClass) referencesAttributeEClass = (qmm.AttributeEClass)this.reference;
																																																																							
																																																																							if(containingAttributeEClass != null && referencesAttributeEClass != null && containingAttributeEClass == referencesAttributeEClass){  //self-reference in expression !
																																																																							String errorMessage = "Self-reference in expression of attribute " + containingAttributeEClass.getName() + " detected. Self-references are not allowed!";
																																																																							diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage,new Object[] { this }));
																																																																							}
																																																																							
																																																																							if(containingRootClass != referencesRootClass){
																																																																							String errorMessage = "The referenced element " + this.reference + " is contained by a different parent-element than the expression's parent-element. Cross-references are not supported.";
																																																																							diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage,new Object[] { this }));
																																																																							}
																																																																							
																																																																							if(this.reference instanceof qmm.NegatableElement && ((qmm.NegatableElement)this.reference).isNegated())diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "Reference to a negated element in " + this + " has been detected. References to negated elements are not allowed.",new Object[] { this }));
																																																																							
																																																																							}
																																																																							return true;"/>
																																																																						</EAnnotation>
																																																																						<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																						<EParameter name="context" type="EMap"/>
																																																																					</EOperation>
																																																																					<ref name="reference" lowerBound="1" type="AttributeDataType_CalculateableElement"/>
																																																																				</class>
																																																																				<class name="AttributeDataType_ExpressionOperator" abstract="true">
																																																																					<EAnnotation source="information">
																																																																						<EStringToStringMapEntry key="type" value="AttributeDataType"/>
																																																																					</EAnnotation>
																																																																				</class>
																																																																				<class name="AttributeDataType_BitOperator" abstract="true">
																																																																					<EAnnotation source="information">
																																																																						<EStringToStringMapEntry key="type" value="AttributeDataType"/>
																																																																					</EAnnotation>
																																																																					<ref name="connects" lowerBound="2" upperBound="-1" containment="true" type="AttributeDataType_ExpressionOperator"/>
																																																																				</class>
																																																																				<class name="AttributeDataType_And_BitOperator">
																																																																					<EAnnotation source="information">
																																																																						<EStringToStringMapEntry key="type" value="AttributeDataType"/>
																																																																					</EAnnotation>
																																																																					<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																						<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																							<EStringToStringMapEntry key="body" value="return "&&";"/>
																																																																						</EAnnotation>
																																																																					</EOperation>
																																																																				</class>
																																																																				<class name="AttributeDataType_Or_BitOperator">
																																																																					<EAnnotation source="information">
																																																																						<EStringToStringMapEntry key="type" value="AttributeDataType"/>
																																																																					</EAnnotation>
																																																																					<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																						<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																							<EStringToStringMapEntry key="body" value="return "||";"/>
																																																																						</EAnnotation>
																																																																					</EOperation>
																																																																				</class>
																																																																				<class name="AttributeDataType_FunctionalOperator" abstract="true">
																																																																					<EAnnotation source="information">
																																																																						<EStringToStringMapEntry key="type" value="AttributeDataType"/>
																																																																					</EAnnotation>
																																																																				</class>
																																																																				<class name="Attribute_attributeDataType_AttrEClass"/>
																																																																				<class name="Attribute_refAttributeType_AttrEClass"/>
																																																																				<class name="Attribute_unit_AttrEClass"/>
																																																																				<class name="AttributeValueRequirement_name_AttrEClass"/>
																																																																				<class name="ChangeMode_Calculateable" abstract="true"/>
																																																																				<class name="ChangeMode_CalculateableElement" abstract="true"/>
																																																																				<class name="ChangeMode_Operator" abstract="true"/>
																																																																				<class name="ChangeMode_EnumerationOperator">
																																																																					<attr name="argument" lowerBound="1" type="//ChangeMode"/>
																																																																					<ref name="or" containment="true" type="ChangeMode_EnumerationOperator"/>
																																																																				</class>
																																																																				<class name="ChangeMode_AttributeEClass" abstract="true">
																																																																					<ref name="operator" containment="true" type="ChangeMode_EnumerationOperator"/>
																																																																				</class>
																																																																				<class name="CAEXBasicObject_changeMode_AttrEClass"/>
																																																																				<class name="CAEXFile_superiorStandardVersion_AttrEClass"/>
																																																																				<class name="CAEXFile_fileName_AttrEClass"/>
																																																																				<class name="CAEXFile_schemaVersion_AttrEClass"/>
																																																																				<class name="CAEXObject_iD_AttrEClass"/>
																																																																				<class name="CAEXObject_name_AttrEClass"/>
																																																																				<class name="EFeatureMapEntry_Calculateable" abstract="true"/>
																																																																				<class name="EFeatureMapEntry_CalculateableElement" abstract="true"/>
																																																																				<class name="EFeatureMapEntry_AttributeEClass" abstract="true">
																																																																					<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																						<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																							<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																																																																							if(this.operator != null){
																																																																							EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateCheckExpression(this.operator);
																																																																								for(int i=0; i<diagnosticList.size(); i++){
																																																																								diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																																																																								}
																																																																								}
																																																																								}
																																																																								return true;"/>
																																																																							</EAnnotation>
																																																																							<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																							<EParameter name="context" type="EMap"/>
																																																																						</EOperation>
																																																																						<ref name="operator" containment="true" type="EFeatureMapEntry_ExpressionOperator"/>
																																																																					</class>
																																																																					<class name="EFeatureMapEntry_Operator" abstract="true"/>
																																																																					<class name="EFeatureMapEntry_Type" abstract="true">
																																																																						<EAnnotation source="information">
																																																																							<EStringToStringMapEntry key="type" value="EFeatureMapEntry"/>
																																																																						</EAnnotation>
																																																																					</class>
																																																																					<class name="EFeatureMapEntry_FunctionalType" abstract="true">
																																																																						<ref name="operator" containment="true" type="EFeatureMapEntry_FunctionalOperator"/>
																																																																					</class>
																																																																					<class name="EFeatureMapEntry_CalculateableParameter">
																																																																						<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																								<EStringToStringMapEntry key="body" value="if (diagnostic != null) {
																																																																								String errorMessage = "";
																																																																								EClass thisType = (EClass) this.getType();
																																																																								if(this.argument!=null){
																																																																								if (this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator")) != null) {
																																																																								qmm.FunctionalOperator lastFunctionalOperator = (qmm.FunctionalOperator) ((qmm.FunctionalOperator) this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator"))).getLastOperator();
																																																																								EClass lastFunctionalOperatorType = (EClass)lastFunctionalOperator.getType();
																																																																								if (!thisType.isSuperTypeOf(lastFunctionalOperatorType)) {
																																																																								errorMessage = "Parameter " + this.toString() + ": Argument of type " + lastFunctionalOperatorType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																								diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																								}
																																																																								} else {
																																																																								EClass argumentType = (EClass) this.argument.getType();
																																																																								if (!thisType.isSuperTypeOf(argumentType)) {
																																																																								errorMessage = "Parameter " + this.toString() + ": Argument of type " + argumentType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																								diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																								}
																																																																								}
																																																																								}
																																																																								}
																																																																								return true;"/>
																																																																							</EAnnotation>
																																																																							<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																							<EParameter name="context" type="EMap"/>
																																																																						</EOperation>
																																																																					</class>
																																																																					<class name="EFeatureMapEntry_FunctionalParameter">
																																																																						<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																								<EStringToStringMapEntry key="body" value="if (diagnostic != null) {
																																																																								String errorMessage = "";
																																																																								EClass thisType = (EClass) this.getType();
																																																																								if(this.argument!=null){
																																																																								if (this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator")) != null) {
																																																																								qmm.FunctionalOperator lastFunctionalOperator = (qmm.FunctionalOperator) ((qmm.FunctionalOperator) this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator"))).getLastOperator();
																																																																								EClass lastFunctionalOperatorType = (EClass)lastFunctionalOperator.getType();
																																																																								if (!thisType.isSuperTypeOf(lastFunctionalOperatorType)) {
																																																																								errorMessage = "Parameter " + this.toString() + ": Argument of type " + lastFunctionalOperatorType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																								diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																								}
																																																																								} else {
																																																																								EClass argumentType = (EClass) this.argument.getType();
																																																																								if (!thisType.isSuperTypeOf(argumentType)) {
																																																																								errorMessage = "Parameter " + this.toString() + ": Argument of type " + argumentType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																								diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																								}
																																																																								}
																																																																								}
																																																																								}
																																																																								return true;"/>
																																																																							</EAnnotation>
																																																																							<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																							<EParameter name="context" type="EMap"/>
																																																																						</EOperation>
																																																																					</class>
																																																																					<class name="EFeatureMapEntry_Argument" abstract="true"/>
																																																																					<class name="EFeatureMapEntry_PrimitiveArgument">
																																																																						<attr name="value" lowerBound="1" type="//EFeatureMapEntry"/>
																																																																					</class>
																																																																					<class name="EFeatureMapEntry_EvaluationOperation_Argument" abstract="true">
																																																																						<EAnnotation source="information">
																																																																							<EStringToStringMapEntry key="functionalType" value="EFeatureMapEntry"/>
																																																																						</EAnnotation>
																																																																					</class>
																																																																					<class name="EFeatureMapEntry_CalculateableElementReferenceArgument">
																																																																						<EAnnotation source="information">
																																																																							<EStringToStringMapEntry key="functionalType" value="EFeatureMapEntry"/>
																																																																						</EAnnotation>
																																																																						<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																								<EStringToStringMapEntry key="body" value="qmm.RootClass containingRootClass = null;
																																																																								qmm.RootClass referencesRootClass = null;
																																																																								qmm.AttributeEClass containingAttributeEClass = null;
																																																																								qmm.AttributeEClass referencesAttributeEClass = null;
																																																																								if(this.eContainer() != null && this.reference != null){
																																																																								org.eclipse.emf.ecore.EObject eContainer = this.eContainer();
																																																																								
																																																																								while(eContainer != null && !(eContainer instanceof qmm.RootClass)){
																																																																								if(eContainer instanceof qmm.AttributeEClass){
																																																																								containingAttributeEClass = (qmm.AttributeEClass)eContainer;
																																																																								}
																																																																								eContainer = eContainer.eContainer();
																																																																								}
																																																																								containingRootClass = (qmm.RootClass)eContainer;
																																																																								
																																																																								eContainer = this.reference.eContainer();
																																																																								while(eContainer != null && !(eContainer instanceof qmm.RootClass)){
																																																																								eContainer = eContainer.eContainer();
																																																																								}
																																																																								
																																																																								referencesRootClass = (qmm.RootClass)eContainer;
																																																																								if(this.reference instanceof qmm.AttributeEClass) referencesAttributeEClass = (qmm.AttributeEClass)this.reference;
																																																																								
																																																																								if(containingAttributeEClass != null && referencesAttributeEClass != null && containingAttributeEClass == referencesAttributeEClass){  //self-reference in expression !
																																																																								String errorMessage = "Self-reference in expression of attribute " + containingAttributeEClass.getName() + " detected. Self-references are not allowed!";
																																																																								diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage,new Object[] { this }));
																																																																								}
																																																																								
																																																																								if(containingRootClass != referencesRootClass){
																																																																								String errorMessage = "The referenced element " + this.reference + " is contained by a different parent-element than the expression's parent-element. Cross-references are not supported.";
																																																																								diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage,new Object[] { this }));
																																																																								}
																																																																								
																																																																								if(this.reference instanceof qmm.NegatableElement && ((qmm.NegatableElement)this.reference).isNegated())diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "Reference to a negated element in " + this + " has been detected. References to negated elements are not allowed.",new Object[] { this }));
																																																																								
																																																																								}
																																																																								return true;"/>
																																																																							</EAnnotation>
																																																																							<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																							<EParameter name="context" type="EMap"/>
																																																																						</EOperation>
																																																																						<ref name="reference" lowerBound="1" type="EFeatureMapEntry_CalculateableElement"/>
																																																																					</class>
																																																																					<class name="EFeatureMapEntry_ExpressionOperator" abstract="true">
																																																																						<EAnnotation source="information">
																																																																							<EStringToStringMapEntry key="type" value="EFeatureMapEntry"/>
																																																																						</EAnnotation>
																																																																					</class>
																																																																					<class name="EFeatureMapEntry_BitOperator" abstract="true">
																																																																						<EAnnotation source="information">
																																																																							<EStringToStringMapEntry key="type" value="EFeatureMapEntry"/>
																																																																						</EAnnotation>
																																																																						<ref name="connects" lowerBound="2" upperBound="-1" containment="true" type="EFeatureMapEntry_ExpressionOperator"/>
																																																																					</class>
																																																																					<class name="EFeatureMapEntry_And_BitOperator">
																																																																						<EAnnotation source="information">
																																																																							<EStringToStringMapEntry key="type" value="EFeatureMapEntry"/>
																																																																						</EAnnotation>
																																																																						<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																								<EStringToStringMapEntry key="body" value="return "&&";"/>
																																																																							</EAnnotation>
																																																																						</EOperation>
																																																																					</class>
																																																																					<class name="EFeatureMapEntry_Or_BitOperator">
																																																																						<EAnnotation source="information">
																																																																							<EStringToStringMapEntry key="type" value="EFeatureMapEntry"/>
																																																																						</EAnnotation>
																																																																						<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																								<EStringToStringMapEntry key="body" value="return "||";"/>
																																																																							</EAnnotation>
																																																																						</EOperation>
																																																																					</class>
																																																																					<class name="EFeatureMapEntry_FunctionalOperator" abstract="true">
																																																																						<EAnnotation source="information">
																																																																							<EStringToStringMapEntry key="type" value="EFeatureMapEntry"/>
																																																																						</EAnnotation>
																																																																					</class>
																																																																					<class name="DocumentRoot_mixed_AttrEClass"/>
																																																																					<class name="ExternalReferenceType_alias_AttrEClass"/>
																																																																					<class name="ExternalReferenceType_path_AttrEClass"/>
																																																																					<class name="InterfaceClass_refBaseClassPath_AttrEClass"/>
																																																																					<class name="InterfaceIDMapping_roleInterfaceID_AttrEClass"/>
																																																																					<class name="InterfaceIDMapping_systemUnitInterfaceID_AttrEClass"/>
																																																																					<class name="InternalElement_refBaseSystemUnitPath_AttrEClass"/>
																																																																					<class name="InternalLink_refPartnerSideA_AttrEClass"/>
																																																																					<class name="InternalLink_refPartnerSideB_AttrEClass"/>
																																																																					<class name="NominalScaledType_requiredValue_AttrEClass"/>
																																																																					<class name="OrdinalScaledType_requiredMaxValue_AttrEClass"/>
																																																																					<class name="OrdinalScaledType_requiredValue_AttrEClass"/>
																																																																					<class name="OrdinalScaledType_requiredMinValue_AttrEClass"/>
																																																																					<class name="RefSemantic_correspondingAttributePath_AttrEClass"/>
																																																																					<class name="RoleClass_refBaseClassPath_AttrEClass"/>
																																																																					<class name="DateTime_Calculateable" abstract="true"/>
																																																																					<class name="DateTime_CalculateableElement" abstract="true"/>
																																																																					<class name="DateTime_AttributeEClass" abstract="true">
																																																																						<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																								<EStringToStringMapEntry key="body" value="if(diagnostic!=null){
																																																																								if(this.operator != null){
																																																																								EList<org.eclipse.emf.common.util.BasicDiagnostic> diagnosticList = validateCheckExpression(this.operator);
																																																																									for(int i=0; i<diagnosticList.size(); i++){
																																																																									diagnostic.add((org.eclipse.emf.common.util.BasicDiagnostic)diagnosticList.get(i));
																																																																									}
																																																																									}
																																																																									}
																																																																									return true;"/>
																																																																								</EAnnotation>
																																																																								<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																								<EParameter name="context" type="EMap"/>
																																																																							</EOperation>
																																																																							<ref name="operator" containment="true" type="DateTime_ExpressionOperator"/>
																																																																						</class>
																																																																						<class name="DateTime_Operator" abstract="true"/>
																																																																						<class name="DateTime_Type" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="DateTime"/>
																																																																							</EAnnotation>
																																																																						</class>
																																																																						<class name="DateTime_FunctionalType" abstract="true">
																																																																							<ref name="operator" containment="true" type="DateTime_FunctionalOperator"/>
																																																																						</class>
																																																																						<class name="DateTime_CalculateableParameter">
																																																																							<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="if (diagnostic != null) {
																																																																									String errorMessage = "";
																																																																									EClass thisType = (EClass) this.getType();
																																																																									if(this.argument!=null){
																																																																									if (this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator")) != null) {
																																																																									qmm.FunctionalOperator lastFunctionalOperator = (qmm.FunctionalOperator) ((qmm.FunctionalOperator) this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator"))).getLastOperator();
																																																																									EClass lastFunctionalOperatorType = (EClass)lastFunctionalOperator.getType();
																																																																									if (!thisType.isSuperTypeOf(lastFunctionalOperatorType)) {
																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + lastFunctionalOperatorType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																									}
																																																																									} else {
																																																																									EClass argumentType = (EClass) this.argument.getType();
																																																																									if (!thisType.isSuperTypeOf(argumentType)) {
																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + argumentType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																									}
																																																																									}
																																																																									}
																																																																									}
																																																																									return true;"/>
																																																																								</EAnnotation>
																																																																								<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																								<EParameter name="context" type="EMap"/>
																																																																							</EOperation>
																																																																						</class>
																																																																						<class name="DateTime_FunctionalParameter">
																																																																							<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="if (diagnostic != null) {
																																																																									String errorMessage = "";
																																																																									EClass thisType = (EClass) this.getType();
																																																																									if(this.argument!=null){
																																																																									if (this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator")) != null) {
																																																																									qmm.FunctionalOperator lastFunctionalOperator = (qmm.FunctionalOperator) ((qmm.FunctionalOperator) this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator"))).getLastOperator();
																																																																									EClass lastFunctionalOperatorType = (EClass)lastFunctionalOperator.getType();
																																																																									if (!thisType.isSuperTypeOf(lastFunctionalOperatorType)) {
																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + lastFunctionalOperatorType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																									}
																																																																									} else {
																																																																									EClass argumentType = (EClass) this.argument.getType();
																																																																									if (!thisType.isSuperTypeOf(argumentType)) {
																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + argumentType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																									}
																																																																									}
																																																																									}
																																																																									}
																																																																									return true;"/>
																																																																								</EAnnotation>
																																																																								<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																								<EParameter name="context" type="EMap"/>
																																																																							</EOperation>
																																																																						</class>
																																																																						<class name="DateTime_Argument" abstract="true"/>
																																																																						<class name="DateTime_PrimitiveArgument">
																																																																							<attr name="value" lowerBound="1" type="//DateTime"/>
																																																																						</class>
																																																																						<class name="DateTime_EvaluationOperation_Argument" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="functionalType" value="DateTime"/>
																																																																							</EAnnotation>
																																																																						</class>
																																																																						<class name="DateTime_CalculateableElementReferenceArgument">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="functionalType" value="DateTime"/>
																																																																							</EAnnotation>
																																																																							<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="qmm.RootClass containingRootClass = null;
																																																																									qmm.RootClass referencesRootClass = null;
																																																																									qmm.AttributeEClass containingAttributeEClass = null;
																																																																									qmm.AttributeEClass referencesAttributeEClass = null;
																																																																									if(this.eContainer() != null && this.reference != null){
																																																																									org.eclipse.emf.ecore.EObject eContainer = this.eContainer();
																																																																									
																																																																									while(eContainer != null && !(eContainer instanceof qmm.RootClass)){
																																																																									if(eContainer instanceof qmm.AttributeEClass){
																																																																									containingAttributeEClass = (qmm.AttributeEClass)eContainer;
																																																																									}
																																																																									eContainer = eContainer.eContainer();
																																																																									}
																																																																									containingRootClass = (qmm.RootClass)eContainer;
																																																																									
																																																																									eContainer = this.reference.eContainer();
																																																																									while(eContainer != null && !(eContainer instanceof qmm.RootClass)){
																																																																									eContainer = eContainer.eContainer();
																																																																									}
																																																																									
																																																																									referencesRootClass = (qmm.RootClass)eContainer;
																																																																									if(this.reference instanceof qmm.AttributeEClass) referencesAttributeEClass = (qmm.AttributeEClass)this.reference;
																																																																									
																																																																									if(containingAttributeEClass != null && referencesAttributeEClass != null && containingAttributeEClass == referencesAttributeEClass){  //self-reference in expression !
																																																																									String errorMessage = "Self-reference in expression of attribute " + containingAttributeEClass.getName() + " detected. Self-references are not allowed!";
																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage,new Object[] { this }));
																																																																									}
																																																																									
																																																																									if(containingRootClass != referencesRootClass){
																																																																									String errorMessage = "The referenced element " + this.reference + " is contained by a different parent-element than the expression's parent-element. Cross-references are not supported.";
																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage,new Object[] { this }));
																																																																									}
																																																																									
																																																																									if(this.reference instanceof qmm.NegatableElement && ((qmm.NegatableElement)this.reference).isNegated())diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, "Reference to a negated element in " + this + " has been detected. References to negated elements are not allowed.",new Object[] { this }));
																																																																									
																																																																									}
																																																																									return true;"/>
																																																																								</EAnnotation>
																																																																								<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																								<EParameter name="context" type="EMap"/>
																																																																							</EOperation>
																																																																							<ref name="reference" lowerBound="1" type="DateTime_CalculateableElement"/>
																																																																						</class>
																																																																						<class name="DateTime_ExpressionOperator" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="DateTime"/>
																																																																							</EAnnotation>
																																																																						</class>
																																																																						<class name="DateTime_BitOperator" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="DateTime"/>
																																																																							</EAnnotation>
																																																																							<ref name="connects" lowerBound="2" upperBound="-1" containment="true" type="DateTime_ExpressionOperator"/>
																																																																						</class>
																																																																						<class name="DateTime_And_BitOperator">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="DateTime"/>
																																																																							</EAnnotation>
																																																																							<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="return "&&";"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																						</class>
																																																																						<class name="DateTime_Or_BitOperator">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="DateTime"/>
																																																																							</EAnnotation>
																																																																							<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="return "||";"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																						</class>
																																																																						<class name="DateTime_FunctionalOperator" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="DateTime"/>
																																																																							</EAnnotation>
																																																																						</class>
																																																																						<class name="SourceDocumentInformation_lastWritingDateTime_AttrEClass"/>
																																																																						<class name="SourceDocumentInformation_originID_AttrEClass"/>
																																																																						<class name="SourceDocumentInformation_originName_AttrEClass"/>
																																																																						<class name="SourceDocumentInformation_originProjectID_AttrEClass"/>
																																																																						<class name="SourceDocumentInformation_originProjectTitle_AttrEClass"/>
																																																																						<class name="SourceDocumentInformation_originRelease_AttrEClass"/>
																																																																						<class name="SourceDocumentInformation_originVendor_AttrEClass"/>
																																																																						<class name="SourceDocumentInformation_originVendorURL_AttrEClass"/>
																																																																						<class name="SourceDocumentInformation_originVersion_AttrEClass"/>
																																																																						<class name="SupportedRoleClass_refRoleClassPath_AttrEClass"/>
																																																																						<class name="SystemUnitClass_refBaseClassPath_AttrEClass"/>
																																																																						<class name="UnknownType_requirements_AttrEClass"/>
																																																																						<class name="Copyright_value_AttrEClass"/>
																																																																						<class name="Copyright_changeMode_AttrEClass"/>
																																																																						<class name="Description_value_AttrEClass"/>
																																																																						<class name="Description_changeMode_AttrEClass"/>
																																																																						<class name="Revision_revisionDate_AttrEClass"/>
																																																																						<class name="Revision_oldVersion_AttrEClass"/>
																																																																						<class name="Revision_newVersion_AttrEClass"/>
																																																																						<class name="Revision_authorName_AttrEClass"/>
																																																																						<class name="Revision_comment_AttrEClass"/>
																																																																						<class name="Version_value_AttrEClass"/>
																																																																						<class name="Version_changeMode_AttrEClass"/>
																																																																						<class name="Element_name_AttrEClass"/>
																																																																						<class name="Element_value_AttrEClass"/>
																																																																						<class name="GenericElement_elementFeatureMap_AttrEClass"/>
																																																																						<class name="GenericElement_attributeFeatureMap_AttrEClass"/>
																																																																						<class name="Attribute_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="Attribute"/>
																																																																						</class>
																																																																						<class name="RefSemantic_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="RefSemantic"/>
																																																																						</class>
																																																																						<class name="AttributeValueRequirement_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="AttributeValueRequirement"/>
																																																																						</class>
																																																																						<class name="OrdinalScaledType_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="OrdinalScaledType"/>
																																																																						</class>
																																																																						<class name="NominalScaledType_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="NominalScaledType"/>
																																																																						</class>
																																																																						<class name="UnknownType_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="UnknownType"/>
																																																																						</class>
																																																																						<class name="Description_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="Description"/>
																																																																						</class>
																																																																						<class name="Version_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="Version"/>
																																																																						</class>
																																																																						<class name="Revision_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="Revision"/>
																																																																						</class>
																																																																						<class name="Copyright_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="Copyright"/>
																																																																						</class>
																																																																						<class name="AdditionalInformation_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="AdditionalInformation"/>
																																																																						</class>
																																																																						<class name="SourceDocumentInformation_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="SourceDocumentInformation"/>
																																																																						</class>
																																																																						<class name="ExternalReferenceType_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="ExternalReferenceType"/>
																																																																						</class>
																																																																						<class name="InstanceHierarchy_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="InstanceHierarchy"/>
																																																																						</class>
																																																																						<class name="InterfaceClassLib_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="InterfaceClassLib"/>
																																																																						</class>
																																																																						<class name="RoleClassLib_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="RoleClassLib"/>
																																																																						</class>
																																																																						<class name="SystemUnitClassLib_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="SystemUnitClassLib"/>
																																																																						</class>
																																																																						<class name="AttributeLib_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="AttributeLib"/>
																																																																						</class>
																																																																						<class name="CAEXFile_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="CAEXFile"/>
																																																																						</class>
																																																																						<class name="InterfaceClass_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="InterfaceClass"/>
																																																																						</class>
																																																																						<class name="InternalElement_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="InternalElement"/>
																																																																						</class>
																																																																						<class name="ExternalInterface_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="ExternalInterface"/>
																																																																						</class>
																																																																						<class name="RoleRequirements_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="RoleRequirements"/>
																																																																						</class>
																																																																						<class name="SystemUnitClass_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="SystemUnitClass"/>
																																																																						</class>
																																																																						<class name="AttributeNameMapping_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="AttributeNameMapping"/>
																																																																						</class>
																																																																						<class name="InterfaceIDMapping_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="InterfaceIDMapping"/>
																																																																						</class>
																																																																						<class name="RoleClass_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="RoleClass"/>
																																																																						</class>
																																																																						<class name="Mapping_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="Mapping"/>
																																																																						</class>
																																																																						<class name="SupportedRoleClass_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="SupportedRoleClass"/>
																																																																						</class>
																																																																						<class name="InternalLink_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="InternalLink"/>
																																																																						</class>
																																																																						<class name="GenericElement_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="GenericElement"/>
																																																																						</class>
																																																																						<class name="GenericAttribute_OrGroup">
																																																																							<ref name="containment" upperBound="-1" containment="true" type="GenericAttribute"/>
																																																																						</class>
																																																																						<class name="Object_Operator" abstract="true"/>
																																																																						<class name="Object_Type" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="Object"/>
																																																																							</EAnnotation>
																																																																						</class>
																																																																						<class name="Object_FunctionalType" abstract="true">
																																																																							<ref name="operator" containment="true" type="Object_FunctionalOperator"/>
																																																																						</class>
																																																																						<class name="Object_CalculateableParameter">
																																																																							<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="if (diagnostic != null) {
																																																																									String errorMessage = "";
																																																																									EClass thisType = (EClass) this.getType();
																																																																									if(this.argument!=null){
																																																																									if (this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator")) != null) {
																																																																									qmm.FunctionalOperator lastFunctionalOperator = (qmm.FunctionalOperator) ((qmm.FunctionalOperator) this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator"))).getLastOperator();
																																																																									EClass lastFunctionalOperatorType = (EClass)lastFunctionalOperator.getType();
																																																																									if (!thisType.isSuperTypeOf(lastFunctionalOperatorType)) {
																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + lastFunctionalOperatorType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																									}
																																																																									} else {
																																																																									EClass argumentType = (EClass) this.argument.getType();
																																																																									if (!thisType.isSuperTypeOf(argumentType)) {
																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + argumentType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																									}
																																																																									}
																																																																									}
																																																																									}
																																																																									return true;"/>
																																																																								</EAnnotation>
																																																																								<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																								<EParameter name="context" type="EMap"/>
																																																																							</EOperation>
																																																																						</class>
																																																																						<class name="Object_FunctionalParameter">
																																																																							<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="if (diagnostic != null) {
																																																																									String errorMessage = "";
																																																																									EClass thisType = (EClass) this.getType();
																																																																									if(this.argument!=null){
																																																																									if (this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator")) != null) {
																																																																									qmm.FunctionalOperator lastFunctionalOperator = (qmm.FunctionalOperator) ((qmm.FunctionalOperator) this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator"))).getLastOperator();
																																																																									EClass lastFunctionalOperatorType = (EClass)lastFunctionalOperator.getType();
																																																																									if (!thisType.isSuperTypeOf(lastFunctionalOperatorType)) {
																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + lastFunctionalOperatorType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																									}
																																																																									} else {
																																																																									EClass argumentType = (EClass) this.argument.getType();
																																																																									if (!thisType.isSuperTypeOf(argumentType)) {
																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + argumentType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																									}
																																																																									}
																																																																									}
																																																																									}
																																																																									return true;"/>
																																																																								</EAnnotation>
																																																																								<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																								<EParameter name="context" type="EMap"/>
																																																																							</EOperation>
																																																																						</class>
																																																																						<class name="Object_Calculateable" abstract="true"/>
																																																																						<class name="Object_CalculateableElement" abstract="true"/>
																																																																						<type name="Object" instanceClassName="java.lang.Object"/>
																																																																						<class name="Object_Argument" abstract="true"/>
																																																																						<class name="Object_PrimitiveArgument">
																																																																							<attr name="value" lowerBound="1" type="//Object"/>
																																																																						</class>
																																																																						<class name="Object_EvaluationOperation_Argument" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="functionalType" value="Object"/>
																																																																							</EAnnotation>
																																																																						</class>
																																																																						<class name="Object_ExpressionOperator" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="Object"/>
																																																																							</EAnnotation>
																																																																						</class>
																																																																						<class name="Object_BitOperator" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="Object"/>
																																																																							</EAnnotation>
																																																																							<ref name="connects" lowerBound="2" upperBound="-1" containment="true" type="Object_ExpressionOperator"/>
																																																																						</class>
																																																																						<class name="Object_And_BitOperator">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="Object"/>
																																																																							</EAnnotation>
																																																																							<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="return "&&";"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																						</class>
																																																																						<class name="Object_Or_BitOperator">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="Object"/>
																																																																							</EAnnotation>
																																																																							<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="return "||";"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																						</class>
																																																																						<class name="Object_FunctionalOperator" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="Object"/>
																																																																							</EAnnotation>
																																																																						</class>
																																																																						<class name="Boolean_Operator" abstract="true"/>
																																																																						<class name="Boolean_Type" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="Boolean"/>
																																																																							</EAnnotation>
																																																																						</class>
																																																																						<class name="Boolean_FunctionalType" abstract="true">
																																																																							<ref name="operator" containment="true" type="Boolean_FunctionalOperator"/>
																																																																						</class>
																																																																						<class name="Boolean_CalculateableParameter">
																																																																							<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="if (diagnostic != null) {
																																																																									String errorMessage = "";
																																																																									EClass thisType = (EClass) this.getType();
																																																																									if(this.argument!=null){
																																																																									if (this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator")) != null) {
																																																																									qmm.FunctionalOperator lastFunctionalOperator = (qmm.FunctionalOperator) ((qmm.FunctionalOperator) this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator"))).getLastOperator();
																																																																									EClass lastFunctionalOperatorType = (EClass)lastFunctionalOperator.getType();
																																																																									if (!thisType.isSuperTypeOf(lastFunctionalOperatorType)) {
																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + lastFunctionalOperatorType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																									}
																																																																									} else {
																																																																									EClass argumentType = (EClass) this.argument.getType();
																																																																									if (!thisType.isSuperTypeOf(argumentType)) {
																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + argumentType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																									}
																																																																									}
																																																																									}
																																																																									}
																																																																									return true;"/>
																																																																								</EAnnotation>
																																																																								<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																								<EParameter name="context" type="EMap"/>
																																																																							</EOperation>
																																																																						</class>
																																																																						<class name="Boolean_FunctionalParameter">
																																																																							<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="if (diagnostic != null) {
																																																																									String errorMessage = "";
																																																																									EClass thisType = (EClass) this.getType();
																																																																									if(this.argument!=null){
																																																																									if (this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator")) != null) {
																																																																									qmm.FunctionalOperator lastFunctionalOperator = (qmm.FunctionalOperator) ((qmm.FunctionalOperator) this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator"))).getLastOperator();
																																																																									EClass lastFunctionalOperatorType = (EClass)lastFunctionalOperator.getType();
																																																																									if (!thisType.isSuperTypeOf(lastFunctionalOperatorType)) {
																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + lastFunctionalOperatorType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																									}
																																																																									} else {
																																																																									EClass argumentType = (EClass) this.argument.getType();
																																																																									if (!thisType.isSuperTypeOf(argumentType)) {
																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + argumentType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																									}
																																																																									}
																																																																									}
																																																																									}
																																																																									return true;"/>
																																																																								</EAnnotation>
																																																																								<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																								<EParameter name="context" type="EMap"/>
																																																																							</EOperation>
																																																																						</class>
																																																																						<class name="Boolean_Calculateable" abstract="true"/>
																																																																						<class name="Boolean_CalculateableElement" abstract="true"/>
																																																																						<type name="Boolean" instanceClassName="java.lang.Boolean"/>
																																																																						<class name="Boolean_Argument" abstract="true"/>
																																																																						<class name="Boolean_PrimitiveArgument">
																																																																							<attr name="value" lowerBound="1" type="//Boolean"/>
																																																																						</class>
																																																																						<class name="Boolean_EvaluationOperation_Argument" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="functionalType" value="Boolean"/>
																																																																							</EAnnotation>
																																																																						</class>
																																																																						<class name="Boolean_ExpressionOperator" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="Boolean"/>
																																																																							</EAnnotation>
																																																																						</class>
																																																																						<class name="Boolean_BitOperator" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="Boolean"/>
																																																																							</EAnnotation>
																																																																							<ref name="connects" lowerBound="2" upperBound="-1" containment="true" type="Boolean_ExpressionOperator"/>
																																																																						</class>
																																																																						<class name="Boolean_And_BitOperator">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="Boolean"/>
																																																																							</EAnnotation>
																																																																							<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="return "&&";"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																						</class>
																																																																						<class name="Boolean_Or_BitOperator">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="Boolean"/>
																																																																							</EAnnotation>
																																																																							<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="return "||";"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																						</class>
																																																																						<class name="Boolean_Original_FunctionalOperator" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="Boolean"/>
																																																																							</EAnnotation>
																																																																						</class>
																																																																						<class name="equals_FunctionalOperator">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="name" value="equals"/>
																																																																								<EStringToStringMapEntry key="literal" value=".equals"/>
																																																																								<EStringToStringMapEntry key="functionalOperatorType" value="Object"/>
																																																																								<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																							</EAnnotation>
																																																																							<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="return ".equals";"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																							<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																									parameterList.add(obj);
																																																																									return parameterList;"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																							<ref name="obj" lowerBound="1" containment="true" type="Object_FunctionalParameter"/>
																																																																						</class>
																																																																						<class name="toString_FunctionalOperator">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="name" value="toString"/>
																																																																								<EStringToStringMapEntry key="literal" value=".toString"/>
																																																																								<EStringToStringMapEntry key="functionalOperatorType" value="Object"/>
																																																																								<EStringToStringMapEntry key="functionalType" value="String_FunctionalType"/>
																																																																							</EAnnotation>
																																																																							<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="return ".toString";"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																							<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																									return parameterList;"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																						</class>
																																																																						<class name="CharSequence_Operator" abstract="true"/>
																																																																						<class name="CharSequence_Type" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="CharSequence"/>
																																																																							</EAnnotation>
																																																																						</class>
																																																																						<class name="CharSequence_FunctionalType" abstract="true">
																																																																							<ref name="operator" containment="true" type="CharSequence_FunctionalOperator"/>
																																																																						</class>
																																																																						<class name="CharSequence_CalculateableParameter">
																																																																							<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="if (diagnostic != null) {
																																																																									String errorMessage = "";
																																																																									EClass thisType = (EClass) this.getType();
																																																																									if(this.argument!=null){
																																																																									if (this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator")) != null) {
																																																																									qmm.FunctionalOperator lastFunctionalOperator = (qmm.FunctionalOperator) ((qmm.FunctionalOperator) this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator"))).getLastOperator();
																																																																									EClass lastFunctionalOperatorType = (EClass)lastFunctionalOperator.getType();
																																																																									if (!thisType.isSuperTypeOf(lastFunctionalOperatorType)) {
																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + lastFunctionalOperatorType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																									}
																																																																									} else {
																																																																									EClass argumentType = (EClass) this.argument.getType();
																																																																									if (!thisType.isSuperTypeOf(argumentType)) {
																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + argumentType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																									}
																																																																									}
																																																																									}
																																																																									}
																																																																									return true;"/>
																																																																								</EAnnotation>
																																																																								<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																								<EParameter name="context" type="EMap"/>
																																																																							</EOperation>
																																																																						</class>
																																																																						<class name="CharSequence_FunctionalParameter">
																																																																							<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="if (diagnostic != null) {
																																																																									String errorMessage = "";
																																																																									EClass thisType = (EClass) this.getType();
																																																																									if(this.argument!=null){
																																																																									if (this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator")) != null) {
																																																																									qmm.FunctionalOperator lastFunctionalOperator = (qmm.FunctionalOperator) ((qmm.FunctionalOperator) this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator"))).getLastOperator();
																																																																									EClass lastFunctionalOperatorType = (EClass)lastFunctionalOperator.getType();
																																																																									if (!thisType.isSuperTypeOf(lastFunctionalOperatorType)) {
																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + lastFunctionalOperatorType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																									}
																																																																									} else {
																																																																									EClass argumentType = (EClass) this.argument.getType();
																																																																									if (!thisType.isSuperTypeOf(argumentType)) {
																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + argumentType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																									}
																																																																									}
																																																																									}
																																																																									}
																																																																									return true;"/>
																																																																								</EAnnotation>
																																																																								<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																								<EParameter name="context" type="EMap"/>
																																																																							</EOperation>
																																																																						</class>
																																																																						<class name="CharSequence_Calculateable" abstract="true"/>
																																																																						<class name="CharSequence_CalculateableElement" abstract="true"/>
																																																																						<type name="CharSequence" instanceClassName="java.lang.CharSequence"/>
																																																																						<class name="CharSequence_Argument" abstract="true"/>
																																																																						<class name="CharSequence_PrimitiveArgument">
																																																																							<attr name="value" lowerBound="1" type="//CharSequence"/>
																																																																						</class>
																																																																						<class name="CharSequence_EvaluationOperation_Argument" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="functionalType" value="CharSequence"/>
																																																																							</EAnnotation>
																																																																						</class>
																																																																						<class name="CharSequence_ExpressionOperator" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="CharSequence"/>
																																																																							</EAnnotation>
																																																																						</class>
																																																																						<class name="CharSequence_BitOperator" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="CharSequence"/>
																																																																							</EAnnotation>
																																																																							<ref name="connects" lowerBound="2" upperBound="-1" containment="true" type="CharSequence_ExpressionOperator"/>
																																																																						</class>
																																																																						<class name="CharSequence_And_BitOperator">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="CharSequence"/>
																																																																							</EAnnotation>
																																																																							<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="return "&&";"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																						</class>
																																																																						<class name="CharSequence_Or_BitOperator">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="CharSequence"/>
																																																																							</EAnnotation>
																																																																							<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="return "||";"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																						</class>
																																																																						<class name="CharSequence_Original_FunctionalOperator" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="CharSequence"/>
																																																																							</EAnnotation>
																																																																						</class>
																																																																						<class name="Integer_Operator" abstract="true"/>
																																																																						<class name="Integer_Type" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="Integer"/>
																																																																							</EAnnotation>
																																																																						</class>
																																																																						<class name="Integer_FunctionalType" abstract="true">
																																																																							<ref name="operator" containment="true" type="Integer_FunctionalOperator"/>
																																																																						</class>
																																																																						<class name="Integer_CalculateableParameter">
																																																																							<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="if (diagnostic != null) {
																																																																									String errorMessage = "";
																																																																									EClass thisType = (EClass) this.getType();
																																																																									if(this.argument!=null){
																																																																									if (this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator")) != null) {
																																																																									qmm.FunctionalOperator lastFunctionalOperator = (qmm.FunctionalOperator) ((qmm.FunctionalOperator) this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator"))).getLastOperator();
																																																																									EClass lastFunctionalOperatorType = (EClass)lastFunctionalOperator.getType();
																																																																									if (!thisType.isSuperTypeOf(lastFunctionalOperatorType)) {
																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + lastFunctionalOperatorType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																									}
																																																																									} else {
																																																																									EClass argumentType = (EClass) this.argument.getType();
																																																																									if (!thisType.isSuperTypeOf(argumentType)) {
																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + argumentType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																									}
																																																																									}
																																																																									}
																																																																									}
																																																																									return true;"/>
																																																																								</EAnnotation>
																																																																								<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																								<EParameter name="context" type="EMap"/>
																																																																							</EOperation>
																																																																						</class>
																																																																						<class name="Integer_FunctionalParameter">
																																																																							<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="if (diagnostic != null) {
																																																																									String errorMessage = "";
																																																																									EClass thisType = (EClass) this.getType();
																																																																									if(this.argument!=null){
																																																																									if (this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator")) != null) {
																																																																									qmm.FunctionalOperator lastFunctionalOperator = (qmm.FunctionalOperator) ((qmm.FunctionalOperator) this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator"))).getLastOperator();
																																																																									EClass lastFunctionalOperatorType = (EClass)lastFunctionalOperator.getType();
																																																																									if (!thisType.isSuperTypeOf(lastFunctionalOperatorType)) {
																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + lastFunctionalOperatorType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																									}
																																																																									} else {
																																																																									EClass argumentType = (EClass) this.argument.getType();
																																																																									if (!thisType.isSuperTypeOf(argumentType)) {
																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + argumentType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																									}
																																																																									}
																																																																									}
																																																																									}
																																																																									return true;"/>
																																																																								</EAnnotation>
																																																																								<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																								<EParameter name="context" type="EMap"/>
																																																																							</EOperation>
																																																																						</class>
																																																																						<type name="Integer" instanceClassName="java.lang.Integer"/>
																																																																						<class name="Integer_Argument" abstract="true"/>
																																																																						<class name="Integer_PrimitiveArgument">
																																																																							<attr name="value" lowerBound="1" type="//Integer"/>
																																																																						</class>
																																																																						<class name="Integer_EvaluationOperation_Argument" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="functionalType" value="Integer"/>
																																																																							</EAnnotation>
																																																																						</class>
																																																																						<class name="Integer_ExpressionOperator" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="Integer"/>
																																																																							</EAnnotation>
																																																																						</class>
																																																																						<class name="Integer_BitOperator" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="Integer"/>
																																																																							</EAnnotation>
																																																																							<ref name="connects" lowerBound="2" upperBound="-1" containment="true" type="Integer_ExpressionOperator"/>
																																																																						</class>
																																																																						<class name="Integer_And_BitOperator">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="Integer"/>
																																																																							</EAnnotation>
																																																																							<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="return "&&";"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																						</class>
																																																																						<class name="Integer_Or_BitOperator">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="Integer"/>
																																																																							</EAnnotation>
																																																																							<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="return "||";"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																						</class>
																																																																						<class name="Integer_Original_FunctionalOperator" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="Integer"/>
																																																																							</EAnnotation>
																																																																						</class>
																																																																						<class name="length_FunctionalOperator">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="name" value="length"/>
																																																																								<EStringToStringMapEntry key="literal" value=".length"/>
																																																																								<EStringToStringMapEntry key="functionalOperatorType" value="CharSequence"/>
																																																																								<EStringToStringMapEntry key="functionalType" value="Integer_FunctionalType"/>
																																																																							</EAnnotation>
																																																																							<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="return ".length";"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																							<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																									return parameterList;"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																						</class>
																																																																						<class name="Character_Operator" abstract="true"/>
																																																																						<class name="Character_Type" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="Character"/>
																																																																							</EAnnotation>
																																																																						</class>
																																																																						<class name="Character_FunctionalType" abstract="true">
																																																																							<ref name="operator" containment="true" type="Character_FunctionalOperator"/>
																																																																						</class>
																																																																						<class name="Character_CalculateableParameter">
																																																																							<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="if (diagnostic != null) {
																																																																									String errorMessage = "";
																																																																									EClass thisType = (EClass) this.getType();
																																																																									if(this.argument!=null){
																																																																									if (this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator")) != null) {
																																																																									qmm.FunctionalOperator lastFunctionalOperator = (qmm.FunctionalOperator) ((qmm.FunctionalOperator) this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator"))).getLastOperator();
																																																																									EClass lastFunctionalOperatorType = (EClass)lastFunctionalOperator.getType();
																																																																									if (!thisType.isSuperTypeOf(lastFunctionalOperatorType)) {
																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + lastFunctionalOperatorType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																									}
																																																																									} else {
																																																																									EClass argumentType = (EClass) this.argument.getType();
																																																																									if (!thisType.isSuperTypeOf(argumentType)) {
																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + argumentType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																									}
																																																																									}
																																																																									}
																																																																									}
																																																																									return true;"/>
																																																																								</EAnnotation>
																																																																								<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																								<EParameter name="context" type="EMap"/>
																																																																							</EOperation>
																																																																						</class>
																																																																						<class name="Character_FunctionalParameter">
																																																																							<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="if (diagnostic != null) {
																																																																									String errorMessage = "";
																																																																									EClass thisType = (EClass) this.getType();
																																																																									if(this.argument!=null){
																																																																									if (this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator")) != null) {
																																																																									qmm.FunctionalOperator lastFunctionalOperator = (qmm.FunctionalOperator) ((qmm.FunctionalOperator) this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator"))).getLastOperator();
																																																																									EClass lastFunctionalOperatorType = (EClass)lastFunctionalOperator.getType();
																																																																									if (!thisType.isSuperTypeOf(lastFunctionalOperatorType)) {
																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + lastFunctionalOperatorType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																									}
																																																																									} else {
																																																																									EClass argumentType = (EClass) this.argument.getType();
																																																																									if (!thisType.isSuperTypeOf(argumentType)) {
																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + argumentType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																									}
																																																																									}
																																																																									}
																																																																									}
																																																																									return true;"/>
																																																																								</EAnnotation>
																																																																								<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																								<EParameter name="context" type="EMap"/>
																																																																							</EOperation>
																																																																						</class>
																																																																						<class name="Character_Calculateable" abstract="true"/>
																																																																						<class name="Character_CalculateableElement" abstract="true"/>
																																																																						<type name="Character" instanceClassName="java.lang.Character"/>
																																																																						<class name="Character_Argument" abstract="true"/>
																																																																						<class name="Character_PrimitiveArgument">
																																																																							<attr name="value" lowerBound="1" type="//Character"/>
																																																																						</class>
																																																																						<class name="Character_EvaluationOperation_Argument" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="functionalType" value="Character"/>
																																																																							</EAnnotation>
																																																																						</class>
																																																																						<class name="Character_ExpressionOperator" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="Character"/>
																																																																							</EAnnotation>
																																																																						</class>
																																																																						<class name="Character_BitOperator" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="Character"/>
																																																																							</EAnnotation>
																																																																							<ref name="connects" lowerBound="2" upperBound="-1" containment="true" type="Character_ExpressionOperator"/>
																																																																						</class>
																																																																						<class name="Character_And_BitOperator">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="Character"/>
																																																																							</EAnnotation>
																																																																							<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="return "&&";"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																						</class>
																																																																						<class name="Character_Or_BitOperator">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="Character"/>
																																																																							</EAnnotation>
																																																																							<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="return "||";"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																						</class>
																																																																						<class name="Character_Original_FunctionalOperator" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="Character"/>
																																																																							</EAnnotation>
																																																																						</class>
																																																																						<class name="charAt_FunctionalOperator">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="name" value="charAt"/>
																																																																								<EStringToStringMapEntry key="literal" value=".charAt"/>
																																																																								<EStringToStringMapEntry key="functionalOperatorType" value="Character"/>
																																																																								<EStringToStringMapEntry key="functionalType" value="Character_FunctionalType"/>
																																																																							</EAnnotation>
																																																																							<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="return ".charAt";"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																							<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																									parameterList.add(i);
																																																																									return parameterList;"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																							<ref name="i" lowerBound="1" containment="true" type="Integer_FunctionalParameter"/>
																																																																						</class>
																																																																						<class name="contains_FunctionalOperator">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="name" value="contains"/>
																																																																								<EStringToStringMapEntry key="literal" value=".contains"/>
																																																																								<EStringToStringMapEntry key="functionalOperatorType" value="String"/>
																																																																								<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																							</EAnnotation>
																																																																							<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="return ".contains";"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																							<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																									parameterList.add(charSequence);
																																																																									return parameterList;"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																							<ref name="charSequence" lowerBound="1" containment="true" type="CharSequence_FunctionalParameter"/>
																																																																						</class>
																																																																						<class name="substring_FunctionalOperator">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="name" value="substring"/>
																																																																								<EStringToStringMapEntry key="literal" value=".substring"/>
																																																																								<EStringToStringMapEntry key="functionalOperatorType" value="String"/>
																																																																								<EStringToStringMapEntry key="functionalType" value="String_FunctionalType"/>
																																																																							</EAnnotation>
																																																																							<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="return ".substring";"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																							<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																									parameterList.add(startIndex);
																																																																									parameterList.add(endIndex);
																																																																									return parameterList;"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																							<ref name="startIndex" lowerBound="1" containment="true" type="Integer_FunctionalParameter"/>
																																																																							<ref name="endIndex" lowerBound="1" containment="true" type="Integer_FunctionalParameter"/>
																																																																						</class>
																																																																						<class name="concat_FunctionalOperator">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="name" value="concat"/>
																																																																								<EStringToStringMapEntry key="literal" value=".concat"/>
																																																																								<EStringToStringMapEntry key="functionalOperatorType" value="String"/>
																																																																								<EStringToStringMapEntry key="functionalType" value="String_FunctionalType"/>
																																																																							</EAnnotation>
																																																																							<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="return ".concat";"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																							<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																									parameterList.add(str);
																																																																									return parameterList;"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																							<ref name="str" lowerBound="1" containment="true" type="String_FunctionalParameter"/>
																																																																						</class>
																																																																						<class name="endsWith_FunctionalOperator">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="name" value="endsWith"/>
																																																																								<EStringToStringMapEntry key="literal" value=".endsWith"/>
																																																																								<EStringToStringMapEntry key="functionalOperatorType" value="String"/>
																																																																								<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																							</EAnnotation>
																																																																							<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="return ".endsWith";"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																							<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																									parameterList.add(suffix);
																																																																									return parameterList;"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																							<ref name="suffix" lowerBound="1" containment="true" type="String_FunctionalParameter"/>
																																																																						</class>
																																																																						<class name="equalsIgnoreCase_FunctionalOperator">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="name" value="equalsIgnoreCase"/>
																																																																								<EStringToStringMapEntry key="literal" value=".equalsIgnoreCase"/>
																																																																								<EStringToStringMapEntry key="functionalOperatorType" value="String"/>
																																																																								<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																							</EAnnotation>
																																																																							<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="return ".equalsIgnoreCase";"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																							<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																									parameterList.add(anotherString);
																																																																									return parameterList;"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																							<ref name="anotherString" lowerBound="1" containment="true" type="String_FunctionalParameter"/>
																																																																						</class>
																																																																						<class name="indexOfString_FunctionalOperator">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="name" value="indexOfString"/>
																																																																								<EStringToStringMapEntry key="literal" value=".indexOf"/>
																																																																								<EStringToStringMapEntry key="functionalOperatorType" value="String"/>
																																																																								<EStringToStringMapEntry key="functionalType" value="Integer_FunctionalType"/>
																																																																							</EAnnotation>
																																																																							<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="return ".indexOf";"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																							<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																									parameterList.add(str);
																																																																									return parameterList;"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																							<ref name="str" lowerBound="1" containment="true" type="String_FunctionalParameter"/>
																																																																						</class>
																																																																						<class name="isEmpty_FunctionalOperator">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="name" value="isEmpty"/>
																																																																								<EStringToStringMapEntry key="literal" value=".isEmpty"/>
																																																																								<EStringToStringMapEntry key="functionalOperatorType" value="String"/>
																																																																								<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																							</EAnnotation>
																																																																							<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="return ".isEmpty";"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																							<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																									return parameterList;"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																						</class>
																																																																						<class name="Number_Operator" abstract="true"/>
																																																																						<class name="Number_Type" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="Number"/>
																																																																							</EAnnotation>
																																																																						</class>
																																																																						<class name="Number_FunctionalType" abstract="true">
																																																																							<ref name="operator" containment="true" type="Number_FunctionalOperator"/>
																																																																						</class>
																																																																						<class name="Number_CalculateableParameter">
																																																																							<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="if (diagnostic != null) {
																																																																									String errorMessage = "";
																																																																									EClass thisType = (EClass) this.getType();
																																																																									if(this.argument!=null){
																																																																									if (this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator")) != null) {
																																																																									qmm.FunctionalOperator lastFunctionalOperator = (qmm.FunctionalOperator) ((qmm.FunctionalOperator) this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator"))).getLastOperator();
																																																																									EClass lastFunctionalOperatorType = (EClass)lastFunctionalOperator.getType();
																																																																									if (!thisType.isSuperTypeOf(lastFunctionalOperatorType)) {
																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + lastFunctionalOperatorType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																									}
																																																																									} else {
																																																																									EClass argumentType = (EClass) this.argument.getType();
																																																																									if (!thisType.isSuperTypeOf(argumentType)) {
																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + argumentType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																									}
																																																																									}
																																																																									}
																																																																									}
																																																																									return true;"/>
																																																																								</EAnnotation>
																																																																								<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																								<EParameter name="context" type="EMap"/>
																																																																							</EOperation>
																																																																						</class>
																																																																						<class name="Number_FunctionalParameter">
																																																																							<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="if (diagnostic != null) {
																																																																									String errorMessage = "";
																																																																									EClass thisType = (EClass) this.getType();
																																																																									if(this.argument!=null){
																																																																									if (this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator")) != null) {
																																																																									qmm.FunctionalOperator lastFunctionalOperator = (qmm.FunctionalOperator) ((qmm.FunctionalOperator) this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator"))).getLastOperator();
																																																																									EClass lastFunctionalOperatorType = (EClass)lastFunctionalOperator.getType();
																																																																									if (!thisType.isSuperTypeOf(lastFunctionalOperatorType)) {
																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + lastFunctionalOperatorType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																									}
																																																																									} else {
																																																																									EClass argumentType = (EClass) this.argument.getType();
																																																																									if (!thisType.isSuperTypeOf(argumentType)) {
																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + argumentType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																									}
																																																																									}
																																																																									}
																																																																									}
																																																																									return true;"/>
																																																																								</EAnnotation>
																																																																								<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																								<EParameter name="context" type="EMap"/>
																																																																							</EOperation>
																																																																						</class>
																																																																						<class name="Number_Calculateable" abstract="true"/>
																																																																						<class name="Number_CalculateableElement" abstract="true"/>
																																																																						<type name="Number" instanceClassName="java.lang.Number"/>
																																																																						<class name="Number_Argument" abstract="true"/>
																																																																						<class name="Number_PrimitiveArgument">
																																																																							<attr name="value" lowerBound="1" type="//Number"/>
																																																																						</class>
																																																																						<class name="Number_EvaluationOperation_Argument" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="functionalType" value="Number"/>
																																																																							</EAnnotation>
																																																																						</class>
																																																																						<class name="Number_ExpressionOperator" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="Number"/>
																																																																							</EAnnotation>
																																																																						</class>
																																																																						<class name="Number_BitOperator" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="Number"/>
																																																																							</EAnnotation>
																																																																							<ref name="connects" lowerBound="2" upperBound="-1" containment="true" type="Number_ExpressionOperator"/>
																																																																						</class>
																																																																						<class name="Number_And_BitOperator">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="Number"/>
																																																																							</EAnnotation>
																																																																							<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="return "&&";"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																						</class>
																																																																						<class name="Number_Or_BitOperator">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="Number"/>
																																																																							</EAnnotation>
																																																																							<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																									<EStringToStringMapEntry key="body" value="return "||";"/>
																																																																								</EAnnotation>
																																																																							</EOperation>
																																																																						</class>
																																																																						<class name="Number_Original_FunctionalOperator" abstract="true">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="type" value="Number"/>
																																																																							</EAnnotation>
																																																																						</class>
																																																																						<class name="greaterThan_FunctionalOperator">
																																																																							<EAnnotation source="information">
																																																																								<EStringToStringMapEntry key="name" value="greaterThan"/>
																																																																								<EStringToStringMapEntry key="literal" value=">"/>
																																																																									<EStringToStringMapEntry key="functionalOperatorType" value="Number"/>
																																																																									<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																								</EAnnotation>
																																																																								<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																										<EStringToStringMapEntry key="body" value="return ">";"/>
																																																																										</EAnnotation>
																																																																									</EOperation>
																																																																									<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																										<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																											<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																											parameterList.add(i);
																																																																											return parameterList;"/>
																																																																										</EAnnotation>
																																																																									</EOperation>
																																																																									<ref name="i" lowerBound="1" containment="true" type="Number_FunctionalParameter"/>
																																																																								</class>
																																																																								<class name="greaterEquals_FunctionalOperator">
																																																																									<EAnnotation source="information">
																																																																										<EStringToStringMapEntry key="name" value="greaterEquals"/>
																																																																										<EStringToStringMapEntry key="literal" value=">="/>
																																																																											<EStringToStringMapEntry key="functionalOperatorType" value="Number"/>
																																																																											<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																										</EAnnotation>
																																																																										<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																											<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																												<EStringToStringMapEntry key="body" value="return ">=";"/>
																																																																												</EAnnotation>
																																																																											</EOperation>
																																																																											<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																													<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																													parameterList.add(i);
																																																																													return parameterList;"/>
																																																																												</EAnnotation>
																																																																											</EOperation>
																																																																											<ref name="i" lowerBound="1" containment="true" type="Number_FunctionalParameter"/>
																																																																										</class>
																																																																										<class name="smallerThan_FunctionalOperator">
																																																																											<EAnnotation source="information">
																																																																												<EStringToStringMapEntry key="name" value="smallerThan"/>
																																																																												<EStringToStringMapEntry key="literal" value="<"/>
																																																																												<EStringToStringMapEntry key="functionalOperatorType" value="Number"/>
																																																																												<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																											</EAnnotation>
																																																																											<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																													<EStringToStringMapEntry key="body" value="return "<";"/>
																																																																												</EAnnotation>
																																																																											</EOperation>
																																																																											<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																													<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																													parameterList.add(i);
																																																																													return parameterList;"/>
																																																																												</EAnnotation>
																																																																											</EOperation>
																																																																											<ref name="i" lowerBound="1" containment="true" type="Number_FunctionalParameter"/>
																																																																										</class>
																																																																										<class name="smallerEquals_FunctionalOperator">
																																																																											<EAnnotation source="information">
																																																																												<EStringToStringMapEntry key="name" value="smallerEquals"/>
																																																																												<EStringToStringMapEntry key="literal" value="<="/>
																																																																												<EStringToStringMapEntry key="functionalOperatorType" value="Number"/>
																																																																												<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																											</EAnnotation>
																																																																											<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																													<EStringToStringMapEntry key="body" value="return "<=";"/>
																																																																												</EAnnotation>
																																																																											</EOperation>
																																																																											<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																													<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																													parameterList.add(i);
																																																																													return parameterList;"/>
																																																																												</EAnnotation>
																																																																											</EOperation>
																																																																											<ref name="i" lowerBound="1" containment="true" type="Number_FunctionalParameter"/>
																																																																										</class>
																																																																										<class name="parseBoolean_FunctionalOperator">
																																																																											<EAnnotation source="information">
																																																																												<EStringToStringMapEntry key="name" value="parseBoolean"/>
																																																																												<EStringToStringMapEntry key="literal" value=".parseBoolean"/>
																																																																												<EStringToStringMapEntry key="functionalOperatorType" value="Boolean"/>
																																																																												<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																											</EAnnotation>
																																																																											<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																													<EStringToStringMapEntry key="body" value="return ".parseBoolean";"/>
																																																																												</EAnnotation>
																																																																											</EOperation>
																																																																											<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																													<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																													parameterList.add(s);
																																																																													return parameterList;"/>
																																																																												</EAnnotation>
																																																																											</EOperation>
																																																																											<ref name="s" lowerBound="1" containment="true" type="String_FunctionalParameter"/>
																																																																										</class>
																																																																										<class name="compareTo_FunctionalOperator">
																																																																											<EAnnotation source="information">
																																																																												<EStringToStringMapEntry key="name" value="compareTo"/>
																																																																												<EStringToStringMapEntry key="literal" value=".compareTo"/>
																																																																												<EStringToStringMapEntry key="functionalOperatorType" value="Boolean"/>
																																																																												<EStringToStringMapEntry key="functionalType" value="Integer_FunctionalType"/>
																																																																											</EAnnotation>
																																																																											<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																													<EStringToStringMapEntry key="body" value="return ".compareTo";"/>
																																																																												</EAnnotation>
																																																																											</EOperation>
																																																																											<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																													<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																													parameterList.add(b);
																																																																													return parameterList;"/>
																																																																												</EAnnotation>
																																																																											</EOperation>
																																																																											<ref name="b" lowerBound="1" containment="true" type="Boolean_FunctionalParameter"/>
																																																																										</class>
																																																																										<class name="Object_Number_equals_FunctionalOperator">
																																																																											<EAnnotation source="information">
																																																																												<EStringToStringMapEntry key="name" value="equals"/>
																																																																												<EStringToStringMapEntry key="literal" value=".equals"/>
																																																																												<EStringToStringMapEntry key="functionalOperatorType" value="Object"/>
																																																																												<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																											</EAnnotation>
																																																																											<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																													<EStringToStringMapEntry key="body" value="return ".equals";"/>
																																																																												</EAnnotation>
																																																																											</EOperation>
																																																																											<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																													<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																													parameterList.add(obj);
																																																																													return parameterList;"/>
																																																																												</EAnnotation>
																																																																											</EOperation>
																																																																											<ref name="obj" lowerBound="1" containment="true" type="Object_FunctionalParameter"/>
																																																																										</class>
																																																																										<class name="Object_Number_toString_FunctionalOperator">
																																																																											<EAnnotation source="information">
																																																																												<EStringToStringMapEntry key="name" value="toString"/>
																																																																												<EStringToStringMapEntry key="literal" value=".toString"/>
																																																																												<EStringToStringMapEntry key="functionalOperatorType" value="Object"/>
																																																																												<EStringToStringMapEntry key="functionalType" value="String_FunctionalType"/>
																																																																											</EAnnotation>
																																																																											<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																													<EStringToStringMapEntry key="body" value="return ".toString";"/>
																																																																												</EAnnotation>
																																																																											</EOperation>
																																																																											<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																													<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																													return parameterList;"/>
																																																																												</EAnnotation>
																																																																											</EOperation>
																																																																										</class>
																																																																										<class name="Number_FunctionalOperator" abstract="true"/>
																																																																										<class name="InheritedFrom_Object_to_Number_FunctionalOperator" abstract="true">
																																																																											<EAnnotation source="information">
																																																																												<EStringToStringMapEntry key="type" value="Object"/>
																																																																											</EAnnotation>
																																																																										</class>
																																																																										<class name="Number_Integer_greaterThan_FunctionalOperator">
																																																																											<EAnnotation source="information">
																																																																												<EStringToStringMapEntry key="name" value="greaterThan"/>
																																																																												<EStringToStringMapEntry key="literal" value=">"/>
																																																																													<EStringToStringMapEntry key="functionalOperatorType" value="Number"/>
																																																																													<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																												</EAnnotation>
																																																																												<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																													<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																														<EStringToStringMapEntry key="body" value="return ">";"/>
																																																																														</EAnnotation>
																																																																													</EOperation>
																																																																													<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																														<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																															<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																															parameterList.add(i);
																																																																															return parameterList;"/>
																																																																														</EAnnotation>
																																																																													</EOperation>
																																																																													<ref name="i" lowerBound="1" containment="true" type="Number_FunctionalParameter"/>
																																																																												</class>
																																																																												<class name="Number_Integer_greaterEquals_FunctionalOperator">
																																																																													<EAnnotation source="information">
																																																																														<EStringToStringMapEntry key="name" value="greaterEquals"/>
																																																																														<EStringToStringMapEntry key="literal" value=">="/>
																																																																															<EStringToStringMapEntry key="functionalOperatorType" value="Number"/>
																																																																															<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																														</EAnnotation>
																																																																														<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																															<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																<EStringToStringMapEntry key="body" value="return ">=";"/>
																																																																																</EAnnotation>
																																																																															</EOperation>
																																																																															<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																	<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																	parameterList.add(i);
																																																																																	return parameterList;"/>
																																																																																</EAnnotation>
																																																																															</EOperation>
																																																																															<ref name="i" lowerBound="1" containment="true" type="Number_FunctionalParameter"/>
																																																																														</class>
																																																																														<class name="Number_Integer_smallerThan_FunctionalOperator">
																																																																															<EAnnotation source="information">
																																																																																<EStringToStringMapEntry key="name" value="smallerThan"/>
																																																																																<EStringToStringMapEntry key="literal" value="<"/>
																																																																																<EStringToStringMapEntry key="functionalOperatorType" value="Number"/>
																																																																																<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																															</EAnnotation>
																																																																															<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																	<EStringToStringMapEntry key="body" value="return "<";"/>
																																																																																</EAnnotation>
																																																																															</EOperation>
																																																																															<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																	<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																	parameterList.add(i);
																																																																																	return parameterList;"/>
																																																																																</EAnnotation>
																																																																															</EOperation>
																																																																															<ref name="i" lowerBound="1" containment="true" type="Number_FunctionalParameter"/>
																																																																														</class>
																																																																														<class name="Number_Integer_smallerEquals_FunctionalOperator">
																																																																															<EAnnotation source="information">
																																																																																<EStringToStringMapEntry key="name" value="smallerEquals"/>
																																																																																<EStringToStringMapEntry key="literal" value="<="/>
																																																																																<EStringToStringMapEntry key="functionalOperatorType" value="Number"/>
																																																																																<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																															</EAnnotation>
																																																																															<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																	<EStringToStringMapEntry key="body" value="return "<=";"/>
																																																																																</EAnnotation>
																																																																															</EOperation>
																																																																															<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																	<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																	parameterList.add(i);
																																																																																	return parameterList;"/>
																																																																																</EAnnotation>
																																																																															</EOperation>
																																																																															<ref name="i" lowerBound="1" containment="true" type="Number_FunctionalParameter"/>
																																																																														</class>
																																																																														<class name="Number_Integer_Object_Number_equals_FunctionalOperator">
																																																																															<EAnnotation source="information">
																																																																																<EStringToStringMapEntry key="name" value="equals"/>
																																																																																<EStringToStringMapEntry key="literal" value=".equals"/>
																																																																																<EStringToStringMapEntry key="functionalOperatorType" value="Object"/>
																																																																																<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																															</EAnnotation>
																																																																															<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																	<EStringToStringMapEntry key="body" value="return ".equals";"/>
																																																																																</EAnnotation>
																																																																															</EOperation>
																																																																															<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																	<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																	parameterList.add(obj);
																																																																																	return parameterList;"/>
																																																																																</EAnnotation>
																																																																															</EOperation>
																																																																															<ref name="obj" lowerBound="1" containment="true" type="Object_FunctionalParameter"/>
																																																																														</class>
																																																																														<class name="Number_Integer_Object_Number_toString_FunctionalOperator">
																																																																															<EAnnotation source="information">
																																																																																<EStringToStringMapEntry key="name" value="toString"/>
																																																																																<EStringToStringMapEntry key="literal" value=".toString"/>
																																																																																<EStringToStringMapEntry key="functionalOperatorType" value="Object"/>
																																																																																<EStringToStringMapEntry key="functionalType" value="String_FunctionalType"/>
																																																																															</EAnnotation>
																																																																															<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																	<EStringToStringMapEntry key="body" value="return ".toString";"/>
																																																																																</EAnnotation>
																																																																															</EOperation>
																																																																															<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																	<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																	return parameterList;"/>
																																																																																</EAnnotation>
																																																																															</EOperation>
																																																																														</class>
																																																																														<class name="Integer_FunctionalOperator" abstract="true"/>
																																																																														<class name="InheritedFrom_Number_to_Integer_FunctionalOperator" abstract="true">
																																																																															<EAnnotation source="information">
																																																																																<EStringToStringMapEntry key="type" value="Number"/>
																																																																															</EAnnotation>
																																																																														</class>
																																																																														<class name="Long_Calculateable" abstract="true"/>
																																																																														<class name="Long_CalculateableElement" abstract="true"/>
																																																																														<class name="Long_Operator" abstract="true"/>
																																																																														<class name="Long_Type" abstract="true">
																																																																															<EAnnotation source="information">
																																																																																<EStringToStringMapEntry key="type" value="Long"/>
																																																																															</EAnnotation>
																																																																														</class>
																																																																														<class name="Long_FunctionalType" abstract="true">
																																																																															<ref name="operator" containment="true" type="Long_FunctionalOperator"/>
																																																																														</class>
																																																																														<class name="Long_CalculateableParameter">
																																																																															<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																																<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																	<EStringToStringMapEntry key="body" value="if (diagnostic != null) {
																																																																																	String errorMessage = "";
																																																																																	EClass thisType = (EClass) this.getType();
																																																																																	if(this.argument!=null){
																																																																																	if (this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator")) != null) {
																																																																																	qmm.FunctionalOperator lastFunctionalOperator = (qmm.FunctionalOperator) ((qmm.FunctionalOperator) this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator"))).getLastOperator();
																																																																																	EClass lastFunctionalOperatorType = (EClass)lastFunctionalOperator.getType();
																																																																																	if (!thisType.isSuperTypeOf(lastFunctionalOperatorType)) {
																																																																																	errorMessage = "Parameter " + this.toString() + ": Argument of type " + lastFunctionalOperatorType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																																	diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																																	}
																																																																																	} else {
																																																																																	EClass argumentType = (EClass) this.argument.getType();
																																																																																	if (!thisType.isSuperTypeOf(argumentType)) {
																																																																																	errorMessage = "Parameter " + this.toString() + ": Argument of type " + argumentType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																																	diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																																	}
																																																																																	}
																																																																																	}
																																																																																	}
																																																																																	return true;"/>
																																																																																</EAnnotation>
																																																																																<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																																<EParameter name="context" type="EMap"/>
																																																																															</EOperation>
																																																																														</class>
																																																																														<class name="Long_FunctionalParameter">
																																																																															<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																																<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																	<EStringToStringMapEntry key="body" value="if (diagnostic != null) {
																																																																																	String errorMessage = "";
																																																																																	EClass thisType = (EClass) this.getType();
																																																																																	if(this.argument!=null){
																																																																																	if (this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator")) != null) {
																																																																																	qmm.FunctionalOperator lastFunctionalOperator = (qmm.FunctionalOperator) ((qmm.FunctionalOperator) this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator"))).getLastOperator();
																																																																																	EClass lastFunctionalOperatorType = (EClass)lastFunctionalOperator.getType();
																																																																																	if (!thisType.isSuperTypeOf(lastFunctionalOperatorType)) {
																																																																																	errorMessage = "Parameter " + this.toString() + ": Argument of type " + lastFunctionalOperatorType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																																	diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																																	}
																																																																																	} else {
																																																																																	EClass argumentType = (EClass) this.argument.getType();
																																																																																	if (!thisType.isSuperTypeOf(argumentType)) {
																																																																																	errorMessage = "Parameter " + this.toString() + ": Argument of type " + argumentType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																																	diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																																	}
																																																																																	}
																																																																																	}
																																																																																	}
																																																																																	return true;"/>
																																																																																</EAnnotation>
																																																																																<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																																<EParameter name="context" type="EMap"/>
																																																																															</EOperation>
																																																																														</class>
																																																																														<type name="Long" instanceClassName="java.lang.Long"/>
																																																																														<class name="Long_Argument" abstract="true"/>
																																																																														<class name="Long_PrimitiveArgument">
																																																																															<attr name="value" lowerBound="1" type="//Long"/>
																																																																														</class>
																																																																														<class name="Long_EvaluationOperation_Argument" abstract="true">
																																																																															<EAnnotation source="information">
																																																																																<EStringToStringMapEntry key="functionalType" value="Long"/>
																																																																															</EAnnotation>
																																																																														</class>
																																																																														<class name="Long_ExpressionOperator" abstract="true">
																																																																															<EAnnotation source="information">
																																																																																<EStringToStringMapEntry key="type" value="Long"/>
																																																																															</EAnnotation>
																																																																														</class>
																																																																														<class name="Long_BitOperator" abstract="true">
																																																																															<EAnnotation source="information">
																																																																																<EStringToStringMapEntry key="type" value="Long"/>
																																																																															</EAnnotation>
																																																																															<ref name="connects" lowerBound="2" upperBound="-1" containment="true" type="Long_ExpressionOperator"/>
																																																																														</class>
																																																																														<class name="Long_And_BitOperator">
																																																																															<EAnnotation source="information">
																																																																																<EStringToStringMapEntry key="type" value="Long"/>
																																																																															</EAnnotation>
																																																																															<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																	<EStringToStringMapEntry key="body" value="return "&&";"/>
																																																																																</EAnnotation>
																																																																															</EOperation>
																																																																														</class>
																																																																														<class name="Long_Or_BitOperator">
																																																																															<EAnnotation source="information">
																																																																																<EStringToStringMapEntry key="type" value="Long"/>
																																																																															</EAnnotation>
																																																																															<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																	<EStringToStringMapEntry key="body" value="return "||";"/>
																																																																																</EAnnotation>
																																																																															</EOperation>
																																																																														</class>
																																																																														<class name="Long_Original_FunctionalOperator" abstract="true">
																																																																															<EAnnotation source="information">
																																																																																<EStringToStringMapEntry key="type" value="Long"/>
																																																																															</EAnnotation>
																																																																														</class>
																																																																														<class name="Number_Long_greaterThan_FunctionalOperator">
																																																																															<EAnnotation source="information">
																																																																																<EStringToStringMapEntry key="name" value="greaterThan"/>
																																																																																<EStringToStringMapEntry key="literal" value=">"/>
																																																																																	<EStringToStringMapEntry key="functionalOperatorType" value="Number"/>
																																																																																	<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																																</EAnnotation>
																																																																																<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																	<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																		<EStringToStringMapEntry key="body" value="return ">";"/>
																																																																																		</EAnnotation>
																																																																																	</EOperation>
																																																																																	<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																		<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																			<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																			parameterList.add(i);
																																																																																			return parameterList;"/>
																																																																																		</EAnnotation>
																																																																																	</EOperation>
																																																																																	<ref name="i" lowerBound="1" containment="true" type="Number_FunctionalParameter"/>
																																																																																</class>
																																																																																<class name="Number_Long_greaterEquals_FunctionalOperator">
																																																																																	<EAnnotation source="information">
																																																																																		<EStringToStringMapEntry key="name" value="greaterEquals"/>
																																																																																		<EStringToStringMapEntry key="literal" value=">="/>
																																																																																			<EStringToStringMapEntry key="functionalOperatorType" value="Number"/>
																																																																																			<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																																		</EAnnotation>
																																																																																		<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																			<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																				<EStringToStringMapEntry key="body" value="return ">=";"/>
																																																																																				</EAnnotation>
																																																																																			</EOperation>
																																																																																			<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																				<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																					<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																					parameterList.add(i);
																																																																																					return parameterList;"/>
																																																																																				</EAnnotation>
																																																																																			</EOperation>
																																																																																			<ref name="i" lowerBound="1" containment="true" type="Number_FunctionalParameter"/>
																																																																																		</class>
																																																																																		<class name="Number_Long_smallerThan_FunctionalOperator">
																																																																																			<EAnnotation source="information">
																																																																																				<EStringToStringMapEntry key="name" value="smallerThan"/>
																																																																																				<EStringToStringMapEntry key="literal" value="<"/>
																																																																																				<EStringToStringMapEntry key="functionalOperatorType" value="Number"/>
																																																																																				<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																																			</EAnnotation>
																																																																																			<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																				<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																					<EStringToStringMapEntry key="body" value="return "<";"/>
																																																																																				</EAnnotation>
																																																																																			</EOperation>
																																																																																			<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																				<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																					<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																					parameterList.add(i);
																																																																																					return parameterList;"/>
																																																																																				</EAnnotation>
																																																																																			</EOperation>
																																																																																			<ref name="i" lowerBound="1" containment="true" type="Number_FunctionalParameter"/>
																																																																																		</class>
																																																																																		<class name="Number_Long_smallerEquals_FunctionalOperator">
																																																																																			<EAnnotation source="information">
																																																																																				<EStringToStringMapEntry key="name" value="smallerEquals"/>
																																																																																				<EStringToStringMapEntry key="literal" value="<="/>
																																																																																				<EStringToStringMapEntry key="functionalOperatorType" value="Number"/>
																																																																																				<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																																			</EAnnotation>
																																																																																			<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																				<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																					<EStringToStringMapEntry key="body" value="return "<=";"/>
																																																																																				</EAnnotation>
																																																																																			</EOperation>
																																																																																			<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																				<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																					<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																					parameterList.add(i);
																																																																																					return parameterList;"/>
																																																																																				</EAnnotation>
																																																																																			</EOperation>
																																																																																			<ref name="i" lowerBound="1" containment="true" type="Number_FunctionalParameter"/>
																																																																																		</class>
																																																																																		<class name="Number_Long_Object_Number_equals_FunctionalOperator">
																																																																																			<EAnnotation source="information">
																																																																																				<EStringToStringMapEntry key="name" value="equals"/>
																																																																																				<EStringToStringMapEntry key="literal" value=".equals"/>
																																																																																				<EStringToStringMapEntry key="functionalOperatorType" value="Object"/>
																																																																																				<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																																			</EAnnotation>
																																																																																			<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																				<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																					<EStringToStringMapEntry key="body" value="return ".equals";"/>
																																																																																				</EAnnotation>
																																																																																			</EOperation>
																																																																																			<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																				<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																					<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																					parameterList.add(obj);
																																																																																					return parameterList;"/>
																																																																																				</EAnnotation>
																																																																																			</EOperation>
																																																																																			<ref name="obj" lowerBound="1" containment="true" type="Object_FunctionalParameter"/>
																																																																																		</class>
																																																																																		<class name="Number_Long_Object_Number_toString_FunctionalOperator">
																																																																																			<EAnnotation source="information">
																																																																																				<EStringToStringMapEntry key="name" value="toString"/>
																																																																																				<EStringToStringMapEntry key="literal" value=".toString"/>
																																																																																				<EStringToStringMapEntry key="functionalOperatorType" value="Object"/>
																																																																																				<EStringToStringMapEntry key="functionalType" value="String_FunctionalType"/>
																																																																																			</EAnnotation>
																																																																																			<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																				<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																					<EStringToStringMapEntry key="body" value="return ".toString";"/>
																																																																																				</EAnnotation>
																																																																																			</EOperation>
																																																																																			<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																				<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																					<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																					return parameterList;"/>
																																																																																				</EAnnotation>
																																																																																			</EOperation>
																																																																																		</class>
																																																																																		<class name="Long_FunctionalOperator" abstract="true"/>
																																																																																		<class name="InheritedFrom_Number_to_Long_FunctionalOperator" abstract="true">
																																																																																			<EAnnotation source="information">
																																																																																				<EStringToStringMapEntry key="type" value="Number"/>
																																																																																			</EAnnotation>
																																																																																		</class>
																																																																																		<class name="Double_Calculateable" abstract="true"/>
																																																																																		<class name="Double_CalculateableElement" abstract="true"/>
																																																																																		<class name="Double_Operator" abstract="true"/>
																																																																																		<class name="Double_Type" abstract="true">
																																																																																			<EAnnotation source="information">
																																																																																				<EStringToStringMapEntry key="type" value="Double"/>
																																																																																			</EAnnotation>
																																																																																		</class>
																																																																																		<class name="Double_FunctionalType" abstract="true">
																																																																																			<ref name="operator" containment="true" type="Double_FunctionalOperator"/>
																																																																																		</class>
																																																																																		<class name="Double_CalculateableParameter">
																																																																																			<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																																				<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																					<EStringToStringMapEntry key="body" value="if (diagnostic != null) {
																																																																																					String errorMessage = "";
																																																																																					EClass thisType = (EClass) this.getType();
																																																																																					if(this.argument!=null){
																																																																																					if (this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator")) != null) {
																																																																																					qmm.FunctionalOperator lastFunctionalOperator = (qmm.FunctionalOperator) ((qmm.FunctionalOperator) this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator"))).getLastOperator();
																																																																																					EClass lastFunctionalOperatorType = (EClass)lastFunctionalOperator.getType();
																																																																																					if (!thisType.isSuperTypeOf(lastFunctionalOperatorType)) {
																																																																																					errorMessage = "Parameter " + this.toString() + ": Argument of type " + lastFunctionalOperatorType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																																					diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																																					}
																																																																																					} else {
																																																																																					EClass argumentType = (EClass) this.argument.getType();
																																																																																					if (!thisType.isSuperTypeOf(argumentType)) {
																																																																																					errorMessage = "Parameter " + this.toString() + ": Argument of type " + argumentType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																																					diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																																					}
																																																																																					}
																																																																																					}
																																																																																					}
																																																																																					return true;"/>
																																																																																				</EAnnotation>
																																																																																				<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																																				<EParameter name="context" type="EMap"/>
																																																																																			</EOperation>
																																																																																		</class>
																																																																																		<class name="Double_FunctionalParameter">
																																																																																			<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																																				<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																					<EStringToStringMapEntry key="body" value="if (diagnostic != null) {
																																																																																					String errorMessage = "";
																																																																																					EClass thisType = (EClass) this.getType();
																																																																																					if(this.argument!=null){
																																																																																					if (this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator")) != null) {
																																																																																					qmm.FunctionalOperator lastFunctionalOperator = (qmm.FunctionalOperator) ((qmm.FunctionalOperator) this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator"))).getLastOperator();
																																																																																					EClass lastFunctionalOperatorType = (EClass)lastFunctionalOperator.getType();
																																																																																					if (!thisType.isSuperTypeOf(lastFunctionalOperatorType)) {
																																																																																					errorMessage = "Parameter " + this.toString() + ": Argument of type " + lastFunctionalOperatorType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																																					diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																																					}
																																																																																					} else {
																																																																																					EClass argumentType = (EClass) this.argument.getType();
																																																																																					if (!thisType.isSuperTypeOf(argumentType)) {
																																																																																					errorMessage = "Parameter " + this.toString() + ": Argument of type " + argumentType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																																					diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																																					}
																																																																																					}
																																																																																					}
																																																																																					}
																																																																																					return true;"/>
																																																																																				</EAnnotation>
																																																																																				<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																																				<EParameter name="context" type="EMap"/>
																																																																																			</EOperation>
																																																																																		</class>
																																																																																		<type name="Double" instanceClassName="java.lang.Double"/>
																																																																																		<class name="Double_Argument" abstract="true"/>
																																																																																		<class name="Double_PrimitiveArgument">
																																																																																			<attr name="value" lowerBound="1" type="//Double"/>
																																																																																		</class>
																																																																																		<class name="Double_EvaluationOperation_Argument" abstract="true">
																																																																																			<EAnnotation source="information">
																																																																																				<EStringToStringMapEntry key="functionalType" value="Double"/>
																																																																																			</EAnnotation>
																																																																																		</class>
																																																																																		<class name="Double_ExpressionOperator" abstract="true">
																																																																																			<EAnnotation source="information">
																																																																																				<EStringToStringMapEntry key="type" value="Double"/>
																																																																																			</EAnnotation>
																																																																																		</class>
																																																																																		<class name="Double_BitOperator" abstract="true">
																																																																																			<EAnnotation source="information">
																																																																																				<EStringToStringMapEntry key="type" value="Double"/>
																																																																																			</EAnnotation>
																																																																																			<ref name="connects" lowerBound="2" upperBound="-1" containment="true" type="Double_ExpressionOperator"/>
																																																																																		</class>
																																																																																		<class name="Double_And_BitOperator">
																																																																																			<EAnnotation source="information">
																																																																																				<EStringToStringMapEntry key="type" value="Double"/>
																																																																																			</EAnnotation>
																																																																																			<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																				<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																					<EStringToStringMapEntry key="body" value="return "&&";"/>
																																																																																				</EAnnotation>
																																																																																			</EOperation>
																																																																																		</class>
																																																																																		<class name="Double_Or_BitOperator">
																																																																																			<EAnnotation source="information">
																																																																																				<EStringToStringMapEntry key="type" value="Double"/>
																																																																																			</EAnnotation>
																																																																																			<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																				<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																					<EStringToStringMapEntry key="body" value="return "||";"/>
																																																																																				</EAnnotation>
																																																																																			</EOperation>
																																																																																		</class>
																																																																																		<class name="Double_Original_FunctionalOperator" abstract="true">
																																																																																			<EAnnotation source="information">
																																																																																				<EStringToStringMapEntry key="type" value="Double"/>
																																																																																			</EAnnotation>
																																																																																		</class>
																																																																																		<class name="Number_Double_greaterThan_FunctionalOperator">
																																																																																			<EAnnotation source="information">
																																																																																				<EStringToStringMapEntry key="name" value="greaterThan"/>
																																																																																				<EStringToStringMapEntry key="literal" value=">"/>
																																																																																					<EStringToStringMapEntry key="functionalOperatorType" value="Number"/>
																																																																																					<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																																				</EAnnotation>
																																																																																				<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																					<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																						<EStringToStringMapEntry key="body" value="return ">";"/>
																																																																																						</EAnnotation>
																																																																																					</EOperation>
																																																																																					<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																						<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																							<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																							parameterList.add(i);
																																																																																							return parameterList;"/>
																																																																																						</EAnnotation>
																																																																																					</EOperation>
																																																																																					<ref name="i" lowerBound="1" containment="true" type="Number_FunctionalParameter"/>
																																																																																				</class>
																																																																																				<class name="Number_Double_greaterEquals_FunctionalOperator">
																																																																																					<EAnnotation source="information">
																																																																																						<EStringToStringMapEntry key="name" value="greaterEquals"/>
																																																																																						<EStringToStringMapEntry key="literal" value=">="/>
																																																																																							<EStringToStringMapEntry key="functionalOperatorType" value="Number"/>
																																																																																							<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																																						</EAnnotation>
																																																																																						<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																							<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																								<EStringToStringMapEntry key="body" value="return ">=";"/>
																																																																																								</EAnnotation>
																																																																																							</EOperation>
																																																																																							<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																									<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																									parameterList.add(i);
																																																																																									return parameterList;"/>
																																																																																								</EAnnotation>
																																																																																							</EOperation>
																																																																																							<ref name="i" lowerBound="1" containment="true" type="Number_FunctionalParameter"/>
																																																																																						</class>
																																																																																						<class name="Number_Double_smallerThan_FunctionalOperator">
																																																																																							<EAnnotation source="information">
																																																																																								<EStringToStringMapEntry key="name" value="smallerThan"/>
																																																																																								<EStringToStringMapEntry key="literal" value="<"/>
																																																																																								<EStringToStringMapEntry key="functionalOperatorType" value="Number"/>
																																																																																								<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																																							</EAnnotation>
																																																																																							<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																									<EStringToStringMapEntry key="body" value="return "<";"/>
																																																																																								</EAnnotation>
																																																																																							</EOperation>
																																																																																							<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																									<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																									parameterList.add(i);
																																																																																									return parameterList;"/>
																																																																																								</EAnnotation>
																																																																																							</EOperation>
																																																																																							<ref name="i" lowerBound="1" containment="true" type="Number_FunctionalParameter"/>
																																																																																						</class>
																																																																																						<class name="Number_Double_smallerEquals_FunctionalOperator">
																																																																																							<EAnnotation source="information">
																																																																																								<EStringToStringMapEntry key="name" value="smallerEquals"/>
																																																																																								<EStringToStringMapEntry key="literal" value="<="/>
																																																																																								<EStringToStringMapEntry key="functionalOperatorType" value="Number"/>
																																																																																								<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																																							</EAnnotation>
																																																																																							<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																									<EStringToStringMapEntry key="body" value="return "<=";"/>
																																																																																								</EAnnotation>
																																																																																							</EOperation>
																																																																																							<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																									<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																									parameterList.add(i);
																																																																																									return parameterList;"/>
																																																																																								</EAnnotation>
																																																																																							</EOperation>
																																																																																							<ref name="i" lowerBound="1" containment="true" type="Number_FunctionalParameter"/>
																																																																																						</class>
																																																																																						<class name="Number_Double_Object_Number_equals_FunctionalOperator">
																																																																																							<EAnnotation source="information">
																																																																																								<EStringToStringMapEntry key="name" value="equals"/>
																																																																																								<EStringToStringMapEntry key="literal" value=".equals"/>
																																																																																								<EStringToStringMapEntry key="functionalOperatorType" value="Object"/>
																																																																																								<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																																							</EAnnotation>
																																																																																							<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																									<EStringToStringMapEntry key="body" value="return ".equals";"/>
																																																																																								</EAnnotation>
																																																																																							</EOperation>
																																																																																							<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																									<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																									parameterList.add(obj);
																																																																																									return parameterList;"/>
																																																																																								</EAnnotation>
																																																																																							</EOperation>
																																																																																							<ref name="obj" lowerBound="1" containment="true" type="Object_FunctionalParameter"/>
																																																																																						</class>
																																																																																						<class name="Number_Double_Object_Number_toString_FunctionalOperator">
																																																																																							<EAnnotation source="information">
																																																																																								<EStringToStringMapEntry key="name" value="toString"/>
																																																																																								<EStringToStringMapEntry key="literal" value=".toString"/>
																																																																																								<EStringToStringMapEntry key="functionalOperatorType" value="Object"/>
																																																																																								<EStringToStringMapEntry key="functionalType" value="String_FunctionalType"/>
																																																																																							</EAnnotation>
																																																																																							<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																									<EStringToStringMapEntry key="body" value="return ".toString";"/>
																																																																																								</EAnnotation>
																																																																																							</EOperation>
																																																																																							<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																									<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																									return parameterList;"/>
																																																																																								</EAnnotation>
																																																																																							</EOperation>
																																																																																						</class>
																																																																																						<class name="Double_FunctionalOperator" abstract="true"/>
																																																																																						<class name="InheritedFrom_Number_to_Double_FunctionalOperator" abstract="true">
																																																																																							<EAnnotation source="information">
																																																																																								<EStringToStringMapEntry key="type" value="Number"/>
																																																																																							</EAnnotation>
																																																																																						</class>
																																																																																						<class name="Float_Calculateable" abstract="true"/>
																																																																																						<class name="Float_CalculateableElement" abstract="true"/>
																																																																																						<class name="Float_Operator" abstract="true"/>
																																																																																						<class name="Float_Type" abstract="true">
																																																																																							<EAnnotation source="information">
																																																																																								<EStringToStringMapEntry key="type" value="Float"/>
																																																																																							</EAnnotation>
																																																																																						</class>
																																																																																						<class name="Float_FunctionalType" abstract="true">
																																																																																							<ref name="operator" containment="true" type="Float_FunctionalOperator"/>
																																																																																						</class>
																																																																																						<class name="Float_CalculateableParameter">
																																																																																							<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																									<EStringToStringMapEntry key="body" value="if (diagnostic != null) {
																																																																																									String errorMessage = "";
																																																																																									EClass thisType = (EClass) this.getType();
																																																																																									if(this.argument!=null){
																																																																																									if (this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator")) != null) {
																																																																																									qmm.FunctionalOperator lastFunctionalOperator = (qmm.FunctionalOperator) ((qmm.FunctionalOperator) this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator"))).getLastOperator();
																																																																																									EClass lastFunctionalOperatorType = (EClass)lastFunctionalOperator.getType();
																																																																																									if (!thisType.isSuperTypeOf(lastFunctionalOperatorType)) {
																																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + lastFunctionalOperatorType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																																									}
																																																																																									} else {
																																																																																									EClass argumentType = (EClass) this.argument.getType();
																																																																																									if (!thisType.isSuperTypeOf(argumentType)) {
																																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + argumentType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																																									}
																																																																																									}
																																																																																									}
																																																																																									}
																																																																																									return true;"/>
																																																																																								</EAnnotation>
																																																																																								<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																																								<EParameter name="context" type="EMap"/>
																																																																																							</EOperation>
																																																																																						</class>
																																																																																						<class name="Float_FunctionalParameter">
																																																																																							<EOperation name="validate" lowerBound="1" type="EBoolean">
																																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																									<EStringToStringMapEntry key="body" value="if (diagnostic != null) {
																																																																																									String errorMessage = "";
																																																																																									EClass thisType = (EClass) this.getType();
																																																																																									if(this.argument!=null){
																																																																																									if (this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator")) != null) {
																																																																																									qmm.FunctionalOperator lastFunctionalOperator = (qmm.FunctionalOperator) ((qmm.FunctionalOperator) this.argument.eGet(this.argument.eClass().getEStructuralFeature("operator"))).getLastOperator();
																																																																																									EClass lastFunctionalOperatorType = (EClass)lastFunctionalOperator.getType();
																																																																																									if (!thisType.isSuperTypeOf(lastFunctionalOperatorType)) {
																																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + lastFunctionalOperatorType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																																									}
																																																																																									} else {
																																																																																									EClass argumentType = (EClass) this.argument.getType();
																																																																																									if (!thisType.isSuperTypeOf(argumentType)) {
																																																																																									errorMessage = "Parameter " + this.toString() + ": Argument of type " + argumentType.getName() + " is not compatible with parametertype " + thisType.getName() + ".";
																																																																																									diagnostic.add(new org.eclipse.emf.common.util.BasicDiagnostic(org.eclipse.emf.common.util.Diagnostic.ERROR, qmm.util.QmmValidator.DIAGNOSTIC_SOURCE,qmm.util.QmmValidator.OBJECT_FUNCTIONAL_PARAMETER__VALIDATE, errorMessage, new Object[] { this }));
																																																																																									}
																																																																																									}
																																																																																									}
																																																																																									}
																																																																																									return true;"/>
																																																																																								</EAnnotation>
																																																																																								<EParameter name="diagnostic" type="EDiagnosticChain"/>
																																																																																								<EParameter name="context" type="EMap"/>
																																																																																							</EOperation>
																																																																																						</class>
																																																																																						<type name="Float" instanceClassName="java.lang.Float"/>
																																																																																						<class name="Float_Argument" abstract="true"/>
																																																																																						<class name="Float_PrimitiveArgument">
																																																																																							<attr name="value" lowerBound="1" type="//Float"/>
																																																																																						</class>
																																																																																						<class name="Float_EvaluationOperation_Argument" abstract="true">
																																																																																							<EAnnotation source="information">
																																																																																								<EStringToStringMapEntry key="functionalType" value="Float"/>
																																																																																							</EAnnotation>
																																																																																						</class>
																																																																																						<class name="Float_ExpressionOperator" abstract="true">
																																																																																							<EAnnotation source="information">
																																																																																								<EStringToStringMapEntry key="type" value="Float"/>
																																																																																							</EAnnotation>
																																																																																						</class>
																																																																																						<class name="Float_BitOperator" abstract="true">
																																																																																							<EAnnotation source="information">
																																																																																								<EStringToStringMapEntry key="type" value="Float"/>
																																																																																							</EAnnotation>
																																																																																							<ref name="connects" lowerBound="2" upperBound="-1" containment="true" type="Float_ExpressionOperator"/>
																																																																																						</class>
																																																																																						<class name="Float_And_BitOperator">
																																																																																							<EAnnotation source="information">
																																																																																								<EStringToStringMapEntry key="type" value="Float"/>
																																																																																							</EAnnotation>
																																																																																							<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																									<EStringToStringMapEntry key="body" value="return "&&";"/>
																																																																																								</EAnnotation>
																																																																																							</EOperation>
																																																																																						</class>
																																																																																						<class name="Float_Or_BitOperator">
																																																																																							<EAnnotation source="information">
																																																																																								<EStringToStringMapEntry key="type" value="Float"/>
																																																																																							</EAnnotation>
																																																																																							<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																								<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																									<EStringToStringMapEntry key="body" value="return "||";"/>
																																																																																								</EAnnotation>
																																																																																							</EOperation>
																																																																																						</class>
																																																																																						<class name="Float_Original_FunctionalOperator" abstract="true">
																																																																																							<EAnnotation source="information">
																																																																																								<EStringToStringMapEntry key="type" value="Float"/>
																																																																																							</EAnnotation>
																																																																																						</class>
																																																																																						<class name="Number_Float_greaterThan_FunctionalOperator">
																																																																																							<EAnnotation source="information">
																																																																																								<EStringToStringMapEntry key="name" value="greaterThan"/>
																																																																																								<EStringToStringMapEntry key="literal" value=">"/>
																																																																																									<EStringToStringMapEntry key="functionalOperatorType" value="Number"/>
																																																																																									<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																																								</EAnnotation>
																																																																																								<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																									<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																										<EStringToStringMapEntry key="body" value="return ">";"/>
																																																																																										</EAnnotation>
																																																																																									</EOperation>
																																																																																									<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																										<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																											<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																											parameterList.add(i);
																																																																																											return parameterList;"/>
																																																																																										</EAnnotation>
																																																																																									</EOperation>
																																																																																									<ref name="i" lowerBound="1" containment="true" type="Number_FunctionalParameter"/>
																																																																																								</class>
																																																																																								<class name="Number_Float_greaterEquals_FunctionalOperator">
																																																																																									<EAnnotation source="information">
																																																																																										<EStringToStringMapEntry key="name" value="greaterEquals"/>
																																																																																										<EStringToStringMapEntry key="literal" value=">="/>
																																																																																											<EStringToStringMapEntry key="functionalOperatorType" value="Number"/>
																																																																																											<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																																										</EAnnotation>
																																																																																										<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																											<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																												<EStringToStringMapEntry key="body" value="return ">=";"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																											<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																													parameterList.add(i);
																																																																																													return parameterList;"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																											<ref name="i" lowerBound="1" containment="true" type="Number_FunctionalParameter"/>
																																																																																										</class>
																																																																																										<class name="Number_Float_smallerThan_FunctionalOperator">
																																																																																											<EAnnotation source="information">
																																																																																												<EStringToStringMapEntry key="name" value="smallerThan"/>
																																																																																												<EStringToStringMapEntry key="literal" value="<"/>
																																																																																												<EStringToStringMapEntry key="functionalOperatorType" value="Number"/>
																																																																																												<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																																											</EAnnotation>
																																																																																											<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="return "<";"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																											<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																													parameterList.add(i);
																																																																																													return parameterList;"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																											<ref name="i" lowerBound="1" containment="true" type="Number_FunctionalParameter"/>
																																																																																										</class>
																																																																																										<class name="Number_Float_smallerEquals_FunctionalOperator">
																																																																																											<EAnnotation source="information">
																																																																																												<EStringToStringMapEntry key="name" value="smallerEquals"/>
																																																																																												<EStringToStringMapEntry key="literal" value="<="/>
																																																																																												<EStringToStringMapEntry key="functionalOperatorType" value="Number"/>
																																																																																												<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																																											</EAnnotation>
																																																																																											<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="return "<=";"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																											<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																													parameterList.add(i);
																																																																																													return parameterList;"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																											<ref name="i" lowerBound="1" containment="true" type="Number_FunctionalParameter"/>
																																																																																										</class>
																																																																																										<class name="Number_Float_Object_Number_equals_FunctionalOperator">
																																																																																											<EAnnotation source="information">
																																																																																												<EStringToStringMapEntry key="name" value="equals"/>
																																																																																												<EStringToStringMapEntry key="literal" value=".equals"/>
																																																																																												<EStringToStringMapEntry key="functionalOperatorType" value="Object"/>
																																																																																												<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																																											</EAnnotation>
																																																																																											<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="return ".equals";"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																											<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																													parameterList.add(obj);
																																																																																													return parameterList;"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																											<ref name="obj" lowerBound="1" containment="true" type="Object_FunctionalParameter"/>
																																																																																										</class>
																																																																																										<class name="Number_Float_Object_Number_toString_FunctionalOperator">
																																																																																											<EAnnotation source="information">
																																																																																												<EStringToStringMapEntry key="name" value="toString"/>
																																																																																												<EStringToStringMapEntry key="literal" value=".toString"/>
																																																																																												<EStringToStringMapEntry key="functionalOperatorType" value="Object"/>
																																																																																												<EStringToStringMapEntry key="functionalType" value="String_FunctionalType"/>
																																																																																											</EAnnotation>
																																																																																											<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="return ".toString";"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																											<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																													return parameterList;"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																										</class>
																																																																																										<class name="Float_FunctionalOperator" abstract="true"/>
																																																																																										<class name="InheritedFrom_Number_to_Float_FunctionalOperator" abstract="true">
																																																																																											<EAnnotation source="information">
																																																																																												<EStringToStringMapEntry key="type" value="Number"/>
																																																																																											</EAnnotation>
																																																																																										</class>
																																																																																										<class name="Object_CharSequence_equals_FunctionalOperator">
																																																																																											<EAnnotation source="information">
																																																																																												<EStringToStringMapEntry key="name" value="equals"/>
																																																																																												<EStringToStringMapEntry key="literal" value=".equals"/>
																																																																																												<EStringToStringMapEntry key="functionalOperatorType" value="Object"/>
																																																																																												<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																																											</EAnnotation>
																																																																																											<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="return ".equals";"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																											<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																													parameterList.add(obj);
																																																																																													return parameterList;"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																											<ref name="obj" lowerBound="1" containment="true" type="Object_FunctionalParameter"/>
																																																																																										</class>
																																																																																										<class name="Object_CharSequence_toString_FunctionalOperator">
																																																																																											<EAnnotation source="information">
																																																																																												<EStringToStringMapEntry key="name" value="toString"/>
																																																																																												<EStringToStringMapEntry key="literal" value=".toString"/>
																																																																																												<EStringToStringMapEntry key="functionalOperatorType" value="Object"/>
																																																																																												<EStringToStringMapEntry key="functionalType" value="String_FunctionalType"/>
																																																																																											</EAnnotation>
																																																																																											<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="return ".toString";"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																											<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																													return parameterList;"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																										</class>
																																																																																										<class name="CharSequence_FunctionalOperator" abstract="true"/>
																																																																																										<class name="InheritedFrom_Object_to_CharSequence_FunctionalOperator" abstract="true">
																																																																																											<EAnnotation source="information">
																																																																																												<EStringToStringMapEntry key="type" value="Object"/>
																																																																																											</EAnnotation>
																																																																																										</class>
																																																																																										<class name="Object_Character_equals_FunctionalOperator">
																																																																																											<EAnnotation source="information">
																																																																																												<EStringToStringMapEntry key="name" value="equals"/>
																																																																																												<EStringToStringMapEntry key="literal" value=".equals"/>
																																																																																												<EStringToStringMapEntry key="functionalOperatorType" value="Object"/>
																																																																																												<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																																											</EAnnotation>
																																																																																											<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="return ".equals";"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																											<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																													parameterList.add(obj);
																																																																																													return parameterList;"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																											<ref name="obj" lowerBound="1" containment="true" type="Object_FunctionalParameter"/>
																																																																																										</class>
																																																																																										<class name="Object_Character_toString_FunctionalOperator">
																																																																																											<EAnnotation source="information">
																																																																																												<EStringToStringMapEntry key="name" value="toString"/>
																																																																																												<EStringToStringMapEntry key="literal" value=".toString"/>
																																																																																												<EStringToStringMapEntry key="functionalOperatorType" value="Object"/>
																																																																																												<EStringToStringMapEntry key="functionalType" value="String_FunctionalType"/>
																																																																																											</EAnnotation>
																																																																																											<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="return ".toString";"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																											<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																													return parameterList;"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																										</class>
																																																																																										<class name="Character_FunctionalOperator" abstract="true"/>
																																																																																										<class name="InheritedFrom_Object_to_Character_FunctionalOperator" abstract="true">
																																																																																											<EAnnotation source="information">
																																																																																												<EStringToStringMapEntry key="type" value="Object"/>
																																																																																											</EAnnotation>
																																																																																										</class>
																																																																																										<class name="Object_Boolean_equals_FunctionalOperator">
																																																																																											<EAnnotation source="information">
																																																																																												<EStringToStringMapEntry key="name" value="equals"/>
																																																																																												<EStringToStringMapEntry key="literal" value=".equals"/>
																																																																																												<EStringToStringMapEntry key="functionalOperatorType" value="Object"/>
																																																																																												<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																																											</EAnnotation>
																																																																																											<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="return ".equals";"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																											<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																													parameterList.add(obj);
																																																																																													return parameterList;"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																											<ref name="obj" lowerBound="1" containment="true" type="Object_FunctionalParameter"/>
																																																																																										</class>
																																																																																										<class name="Object_Boolean_toString_FunctionalOperator">
																																																																																											<EAnnotation source="information">
																																																																																												<EStringToStringMapEntry key="name" value="toString"/>
																																																																																												<EStringToStringMapEntry key="literal" value=".toString"/>
																																																																																												<EStringToStringMapEntry key="functionalOperatorType" value="Object"/>
																																																																																												<EStringToStringMapEntry key="functionalType" value="String_FunctionalType"/>
																																																																																											</EAnnotation>
																																																																																											<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="return ".toString";"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																											<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																													return parameterList;"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																										</class>
																																																																																										<class name="Boolean_FunctionalOperator" abstract="true"/>
																																																																																										<class name="InheritedFrom_Object_to_Boolean_FunctionalOperator" abstract="true">
																																																																																											<EAnnotation source="information">
																																																																																												<EStringToStringMapEntry key="type" value="Object"/>
																																																																																											</EAnnotation>
																																																																																										</class>
																																																																																										<class name="CharSequence_String_length_FunctionalOperator">
																																																																																											<EAnnotation source="information">
																																																																																												<EStringToStringMapEntry key="name" value="length"/>
																																																																																												<EStringToStringMapEntry key="literal" value=".length"/>
																																																																																												<EStringToStringMapEntry key="functionalOperatorType" value="CharSequence"/>
																																																																																												<EStringToStringMapEntry key="functionalType" value="Integer_FunctionalType"/>
																																																																																											</EAnnotation>
																																																																																											<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="return ".length";"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																											<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																													return parameterList;"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																										</class>
																																																																																										<class name="CharSequence_String_Object_CharSequence_equals_FunctionalOperator">
																																																																																											<EAnnotation source="information">
																																																																																												<EStringToStringMapEntry key="name" value="equals"/>
																																																																																												<EStringToStringMapEntry key="literal" value=".equals"/>
																																																																																												<EStringToStringMapEntry key="functionalOperatorType" value="Object"/>
																																																																																												<EStringToStringMapEntry key="functionalType" value="Boolean_FunctionalType"/>
																																																																																											</EAnnotation>
																																																																																											<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="return ".equals";"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																											<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																													parameterList.add(obj);
																																																																																													return parameterList;"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																											<ref name="obj" lowerBound="1" containment="true" type="Object_FunctionalParameter"/>
																																																																																										</class>
																																																																																										<class name="CharSequence_String_Object_CharSequence_toString_FunctionalOperator">
																																																																																											<EAnnotation source="information">
																																																																																												<EStringToStringMapEntry key="name" value="toString"/>
																																																																																												<EStringToStringMapEntry key="literal" value=".toString"/>
																																																																																												<EStringToStringMapEntry key="functionalOperatorType" value="Object"/>
																																																																																												<EStringToStringMapEntry key="functionalType" value="String_FunctionalType"/>
																																																																																											</EAnnotation>
																																																																																											<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="return ".toString";"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																											<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																													return parameterList;"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																										</class>
																																																																																										<class name="String_FunctionalOperator" abstract="true"/>
																																																																																										<class name="InheritedFrom_CharSequence_to_String_FunctionalOperator" abstract="true">
																																																																																											<EAnnotation source="information">
																																																																																												<EStringToStringMapEntry key="type" value="CharSequence"/>
																																																																																											</EAnnotation>
																																																																																										</class>
																																																																																										<class name="Count_AggregationOperator">
																																																																																											<EAnnotation source="information">
																																																																																												<EStringToStringMapEntry key="functionalType" value="Integer"/>
																																																																																												<EStringToStringMapEntry key="literal" value="count"/>
																																																																																											</EAnnotation>
																																																																																											<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="return "count";"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																										</class>
																																																																																										<class name="Sum_AggregationOperator">
																																																																																											<EAnnotation source="information">
																																																																																												<EStringToStringMapEntry key="functionalType" value="Integer"/>
																																																																																												<EStringToStringMapEntry key="literal" value="sum"/>
																																																																																											</EAnnotation>
																																																																																											<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="return "sum";"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																											<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																													parameterList.add(calculateable);
																																																																																													return parameterList;"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																											<ref name="calculateable" lowerBound="1" containment="true" type="Integer_CalculateableParameter"/>
																																																																																										</class>
																																																																																										<class name="Min_AggregationOperator">
																																																																																											<EAnnotation source="information">
																																																																																												<EStringToStringMapEntry key="functionalType" value="Integer"/>
																																																																																												<EStringToStringMapEntry key="literal" value="min"/>
																																																																																											</EAnnotation>
																																																																																											<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="return "min";"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																											<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																													parameterList.add(calculateable);
																																																																																													return parameterList;"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																											<ref name="calculateable" lowerBound="1" containment="true" type="Integer_CalculateableParameter"/>
																																																																																										</class>
																																																																																										<class name="Max_AggregationOperator">
																																																																																											<EAnnotation source="information">
																																																																																												<EStringToStringMapEntry key="functionalType" value="Integer"/>
																																																																																												<EStringToStringMapEntry key="literal" value="max"/>
																																																																																											</EAnnotation>
																																																																																											<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="return "max";"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																											<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																													parameterList.add(calculateable);
																																																																																													return parameterList;"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																											<ref name="calculateable" lowerBound="1" containment="true" type="Integer_CalculateableParameter"/>
																																																																																										</class>
																																																																																										<class name="IntegerParseInt_ClassOperator">
																																																																																											<EAnnotation source="information">
																																																																																												<EStringToStringMapEntry key="functonalType" value="Integer"/>
																																																																																												<EStringToStringMapEntry key="literal" value="Integer.parseInt"/>
																																																																																											</EAnnotation>
																																																																																											<EOperation name="getLiteral" lowerBound="1" type="EString">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="return "Integer.parseInt";"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																											<EOperation name="getAllParameters" lowerBound="1" type="EEList">
																																																																																												<EAnnotation source="http://www.eclipse.org/emf/2002/GenModel">
																																																																																													<EStringToStringMapEntry key="body" value="EList parameterList = new org.eclipse.emf.common.util.BasicEList();
																																																																																													parameterList.add(calculateable);
																																																																																													return parameterList;"/>
																																																																																												</EAnnotation>
																																																																																											</EOperation>
																																																																																											<ref name="calculateable" lowerBound="1" containment="true" type="String_FunctionalParameter"/>
																																																																																										</class>
																																																																																									</package>
