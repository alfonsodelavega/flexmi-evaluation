@namespace(uri="http://www.eclipse.org/MoDisco/Javaee/ejb-jar_3_0.xsd", prefix="EjbJar30")
package EjbJar30;

import "http://www.eclipse.org/emf/2003/XMLType";
import "http://www.w3.org/XML/1998/namespace";

@ExtendedMetaData(name="activation-config-propertyType", kind="elementOnly")
class ActivationConfigPropertyType {

	@ExtendedMetaData(kind="element", name="activation-config-property-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val XsdStringType[1] activationConfigPropertyName;

	@ExtendedMetaData(kind="element", name="activation-config-property-value", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val XsdStringType[1] activationConfigPropertyValue;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="activation-configType", kind="elementOnly")
class ActivationConfigType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="activation-config-property", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val ActivationConfigPropertyType[+] activationConfigProperty;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="application-exceptionType", kind="elementOnly")
class ApplicationExceptionType {

	@ExtendedMetaData(kind="element", name="exception-class", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val FullyQualifiedClassType[1] exceptionClass;

	@ExtendedMetaData(kind="element", name="rollback", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val TrueFalseType rollback;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="around-invokeType", kind="elementOnly")
class AroundInvokeType {

	@ExtendedMetaData(kind="element", name="class", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val FullyQualifiedClassType ~class;

	@ExtendedMetaData(kind="element", name="method-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val JavaIdentifierType[1] methodName;
}

@ExtendedMetaData(name="assembly-descriptorType", kind="elementOnly")
class AssemblyDescriptorType {

	@ExtendedMetaData(kind="element", name="security-role", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val SecurityRoleType[*] securityRole;

	@ExtendedMetaData(kind="element", name="method-permission", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val MethodPermissionType[*] methodPermission;

	@ExtendedMetaData(kind="element", name="container-transaction", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val ContainerTransactionType[*] containerTransaction;

	@ExtendedMetaData(kind="element", name="interceptor-binding", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val InterceptorBindingType[*] interceptorBinding;

	@ExtendedMetaData(kind="element", name="message-destination", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val MessageDestinationType[*] messageDestination;

	@ExtendedMetaData(kind="element", name="exclude-list", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val ExcludeListType excludeList;

	@ExtendedMetaData(kind="element", name="application-exception", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val ApplicationExceptionType[*] applicationException;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="cmp-fieldType", kind="elementOnly")
class CmpFieldType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="field-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val JavaIdentifierType[1] fieldName;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="cmp-versionType", kind="simple")
class CmpVersionType extends String {
}

@ExtendedMetaData(name="cmp-versionType_._base")
enum CmpVersionTypeBase {
	_1X = 0;
	_2X = 1;
}

@ExtendedMetaData(name="cmp-versionType_._base:Object", baseType="cmp-versionType_._base")
datatype CmpVersionTypeBaseObject : org.eclipse.emf.common.util.Enumerator;

@ExtendedMetaData(name="cmr-fieldType", kind="elementOnly")
class CmrFieldType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="cmr-field-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val String[1] cmrFieldName;

	@ExtendedMetaData(kind="element", name="cmr-field-type", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val CmrFieldTypeType cmrFieldType;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="cmr-field-typeType", kind="simple")
class CmrFieldTypeType extends String {
}

@ExtendedMetaData(name="cmr-field-typeType_._base")
enum CmrFieldTypeTypeBase {
	javaUtilCollection = 0;
	javaUtilSet = 1;
}

@ExtendedMetaData(name="cmr-field-typeType_._base:Object", baseType="cmr-field-typeType_._base")
datatype CmrFieldTypeTypeBaseObject : org.eclipse.emf.common.util.Enumerator;

@ExtendedMetaData(name="container-transactionType", kind="elementOnly")
class ContainerTransactionType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="method", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val MethodType[+] method;

	@ExtendedMetaData(kind="element", name="trans-attribute", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val TransAttributeType[1] transAttribute;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="descriptionType", kind="simple")
class DescriptionType extends XsdStringType {

	@ExtendedMetaData(kind="attribute", name="lang", namespace="http://www.w3.org/XML/1998/namespace")
	attr namespace.LangType lang;
}

@ExtendedMetaData(name="dewey-versionType", baseType="http://www.eclipse.org/emf/2003/XMLType#token", pattern="\.?[0-9]+(\.[0-9]+)*")
datatype DeweyVersionType : java.lang.String;

@ExtendedMetaData(name="display-nameType", kind="simple")
class DisplayNameType extends String {

	@ExtendedMetaData(kind="attribute", name="lang", namespace="http://www.w3.org/XML/1998/namespace")
	attr namespace.LangType lang;
}

@ExtendedMetaData(name="", kind="mixed")
class DocumentRoot {

	@ExtendedMetaData(kind="elementWildcard", name=":mixed")
	!unique attr ecore.EFeatureMapEntry[*] mixed;

	@ExtendedMetaData(kind="attribute", name="xmlns:prefix")
	transient !resolve val ecore.EStringToStringMapEntry[*] xMLNSPrefixMap;

	@ExtendedMetaData(kind="attribute", name="xsi:schemaLocation")
	transient !resolve val ecore.EStringToStringMapEntry[*] xSISchemaLocation;

	@ExtendedMetaData(kind="element", name="ejb-jar", namespace="http://java.sun.com/xml/ns/javaee")
	volatile transient derived !resolve val EjbJarType[0..?] ejbJar;
}

@ExtendedMetaData(name="ejb-classType", kind="simple")
class EjbClassType extends FullyQualifiedClassType {
}

@ExtendedMetaData(name="ejb-classType_._base")
datatype EjbClassTypeBase : java.lang.String;

@ExtendedMetaData(name="ejb-jarType", kind="elementOnly")
class EjbJarType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="display-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DisplayNameType[*] displayName;

	@ExtendedMetaData(kind="element", name="icon", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val IconType[*] icon;

	@ExtendedMetaData(kind="element", name="enterprise-beans", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EnterpriseBeansType enterpriseBeans;

	@ExtendedMetaData(kind="element", name="interceptors", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val InterceptorsType interceptors;

	@ExtendedMetaData(kind="element", name="relationships", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val RelationshipsType relationships;

	@ExtendedMetaData(kind="element", name="assembly-descriptor", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val AssemblyDescriptorType assemblyDescriptor;

	@ExtendedMetaData(kind="element", name="ejb-client-jar", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val PathType ejbClientJar;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;

	@ExtendedMetaData(kind="attribute", name="metadata-complete")
	unsettable attr type.Boolean metadataComplete;

	@ExtendedMetaData(kind="attribute", name="version")
	unsettable attr DeweyVersionType[1] version = "3.0";
}

@ExtendedMetaData(name="ejb-linkType", kind="simple")
class EjbLinkType extends String {
}

@ExtendedMetaData(name="ejb-linkType_._base", baseType="http://www.eclipse.org/emf/2003/XMLType#token")
datatype EjbLinkTypeBase : java.lang.String;

@ExtendedMetaData(name="ejb-local-refType", kind="elementOnly")
class EjbLocalRefType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="ejb-ref-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EjbRefNameType[1] ejbRefName;

	@ExtendedMetaData(kind="element", name="ejb-ref-type", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EjbRefTypeType ejbRefType;

	@ExtendedMetaData(kind="element", name="local-home", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val LocalHomeType localHome;

	@ExtendedMetaData(kind="element", name="local", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val LocalType local;

	@ExtendedMetaData(kind="element", name="ejb-link", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EjbLinkType ejbLink;

	@ExtendedMetaData(kind="element", name="mapped-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val XsdStringType mappedName;

	@ExtendedMetaData(kind="element", name="injection-target", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val InjectionTargetType[*] injectionTarget;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="ejb-nameType", kind="simple")
class EjbNameType extends XsdNMTOKENType {
}

@ExtendedMetaData(name="ejb-nameType_._base", baseType="http://www.eclipse.org/emf/2003/XMLType#NMTOKEN")
datatype EjbNameTypeBase : java.lang.String;

@ExtendedMetaData(name="ejb-ref-nameType", kind="simple")
class EjbRefNameType extends JndiNameType {
}

@ExtendedMetaData(name="ejb-ref-nameType_._base")
datatype EjbRefNameTypeBase : java.lang.String;

@ExtendedMetaData(name="ejb-refType", kind="elementOnly")
class EjbRefType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="ejb-ref-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EjbRefNameType[1] ejbRefName;

	@ExtendedMetaData(kind="element", name="ejb-ref-type", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EjbRefTypeType ejbRefType;

	@ExtendedMetaData(kind="element", name="home", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val HomeType home;

	@ExtendedMetaData(kind="element", name="remote", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val RemoteType remote;

	@ExtendedMetaData(kind="element", name="ejb-link", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EjbLinkType ejbLink;

	@ExtendedMetaData(kind="element", name="mapped-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val XsdStringType mappedName;

	@ExtendedMetaData(kind="element", name="injection-target", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val InjectionTargetType[*] injectionTarget;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="ejb-ref-typeType", kind="simple")
class EjbRefTypeType extends String {
}

@ExtendedMetaData(name="ejb-ref-typeType_._base")
enum EjbRefTypeTypeBase {
	Entity = 0;
	Session = 1;
}

@ExtendedMetaData(name="ejb-ref-typeType_._base:Object", baseType="ejb-ref-typeType_._base")
datatype EjbRefTypeTypeBaseObject : org.eclipse.emf.common.util.Enumerator;

@ExtendedMetaData(name="ejb-relationship-roleType", kind="elementOnly")
class EjbRelationshipRoleType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="ejb-relationship-role-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val String ejbRelationshipRoleName;

	@ExtendedMetaData(kind="element", name="multiplicity", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val MultiplicityType[1] multiplicity;

	@ExtendedMetaData(kind="element", name="cascade-delete", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EmptyType cascadeDelete;

	@ExtendedMetaData(kind="element", name="relationship-role-source", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val RelationshipRoleSourceType[1] relationshipRoleSource;

	@ExtendedMetaData(kind="element", name="cmr-field", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val CmrFieldType cmrField;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="ejb-relationType", kind="elementOnly")
class EjbRelationType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="ejb-relation-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val String ejbRelationName;

	@ExtendedMetaData(kind="element", name="ejb-relationship-role", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EjbRelationshipRoleType[1] ejbRelationshipRole;

	@ExtendedMetaData(kind="element", name="ejb-relationship-role", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EjbRelationshipRoleType[1] ejbRelationshipRole1;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="emptyType", kind="empty")
class EmptyType {

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="enterprise-beansType", kind="elementOnly")
class EnterpriseBeansType {

	@ExtendedMetaData(kind="group", name="group:0")
	!unique attr ecore.EFeatureMapEntry[*] group;

	@ExtendedMetaData(kind="element", name="session", namespace="http://java.sun.com/xml/ns/javaee", group="#group:0")
	volatile transient derived !resolve val SessionBeanType[*] session;

	@ExtendedMetaData(kind="element", name="entity", namespace="http://java.sun.com/xml/ns/javaee", group="#group:0")
	volatile transient derived !resolve val EntityBeanType[*] entity;

	@ExtendedMetaData(kind="element", name="message-driven", namespace="http://java.sun.com/xml/ns/javaee", group="#group:0")
	volatile transient derived !resolve val MessageDrivenBeanType[*] messageDriven;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="entity-beanType", kind="elementOnly")
class EntityBeanType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="display-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DisplayNameType[*] displayName;

	@ExtendedMetaData(kind="element", name="icon", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val IconType[*] icon;

	@ExtendedMetaData(kind="element", name="ejb-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EjbNameType[1] ejbName;

	@ExtendedMetaData(kind="element", name="mapped-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val XsdStringType mappedName;

	@ExtendedMetaData(kind="element", name="home", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val HomeType home;

	@ExtendedMetaData(kind="element", name="remote", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val RemoteType remote;

	@ExtendedMetaData(kind="element", name="local-home", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val LocalHomeType localHome;

	@ExtendedMetaData(kind="element", name="local", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val LocalType local;

	@ExtendedMetaData(kind="element", name="ejb-class", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EjbClassType[1] ejbClass;

	@ExtendedMetaData(kind="element", name="persistence-type", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val PersistenceTypeType[1] persistenceType;

	@ExtendedMetaData(kind="element", name="prim-key-class", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val FullyQualifiedClassType[1] primKeyClass;

	@ExtendedMetaData(kind="element", name="reentrant", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val TrueFalseType[1] reentrant;

	@ExtendedMetaData(kind="element", name="cmp-version", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val CmpVersionType cmpVersion;

	@ExtendedMetaData(kind="element", name="abstract-schema-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val JavaIdentifierType abstractSchemaName;

	@ExtendedMetaData(kind="element", name="cmp-field", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val CmpFieldType[*] cmpField;

	@ExtendedMetaData(kind="element", name="primkey-field", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val String primkeyField;

	@ExtendedMetaData(kind="element", name="env-entry", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EnvEntryType[*] envEntry;

	@ExtendedMetaData(kind="element", name="ejb-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EjbRefType[*] ejbRef;

	@ExtendedMetaData(kind="element", name="ejb-local-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EjbLocalRefType[*] ejbLocalRef;

	@ExtendedMetaData(kind="element", name="service-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val ServiceRefType[*] serviceRef;

	@ExtendedMetaData(kind="element", name="resource-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val ResourceRefType[*] resourceRef;

	@ExtendedMetaData(kind="element", name="resource-env-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val ResourceEnvRefType[*] resourceEnvRef;

	@ExtendedMetaData(kind="element", name="message-destination-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val MessageDestinationRefType[*] messageDestinationRef;

	@ExtendedMetaData(kind="element", name="persistence-context-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val PersistenceContextRefType[*] persistenceContextRef;

	@ExtendedMetaData(kind="element", name="persistence-unit-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val PersistenceUnitRefType[*] persistenceUnitRef;

	@ExtendedMetaData(kind="element", name="post-construct", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val LifecycleCallbackType[*] postConstruct;

	@ExtendedMetaData(kind="element", name="pre-destroy", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val LifecycleCallbackType[*] preDestroy;

	@ExtendedMetaData(kind="element", name="security-role-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val SecurityRoleRefType[*] securityRoleRef;

	@ExtendedMetaData(kind="element", name="security-identity", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val SecurityIdentityType securityIdentity;

	@ExtendedMetaData(kind="element", name="query", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val QueryType[*] query;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="env-entryType", kind="elementOnly")
class EnvEntryType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="env-entry-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val JndiNameType[1] envEntryName;

	@ExtendedMetaData(kind="element", name="env-entry-type", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EnvEntryTypeValuesType envEntryType;

	@ExtendedMetaData(kind="element", name="env-entry-value", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val XsdStringType envEntryValue;

	@ExtendedMetaData(kind="element", name="mapped-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val XsdStringType mappedName;

	@ExtendedMetaData(kind="element", name="injection-target", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val InjectionTargetType[*] injectionTarget;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="env-entry-type-valuesType", kind="simple")
class EnvEntryTypeValuesType extends String {
}

@ExtendedMetaData(name="env-entry-type-valuesType_._base")
enum EnvEntryTypeValuesTypeBase {
	javaLangBoolean = 0;
	javaLangByte = 1;
	javaLangCharacter = 2;
	javaLangString = 3;
	javaLangShort = 4;
	javaLangInteger = 5;
	javaLangLong = 6;
	javaLangFloat = 7;
	javaLangDouble = 8;
}

@ExtendedMetaData(name="env-entry-type-valuesType_._base:Object", baseType="env-entry-type-valuesType_._base")
datatype EnvEntryTypeValuesTypeBaseObject : org.eclipse.emf.common.util.Enumerator;

@ExtendedMetaData(name="exclude-listType", kind="elementOnly")
class ExcludeListType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="method", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val MethodType[+] method;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="fully-qualified-classType", kind="simple")
class FullyQualifiedClassType extends String {
}

@ExtendedMetaData(name="fully-qualified-classType_._base", baseType="http://www.eclipse.org/emf/2003/XMLType#token")
datatype FullyQualifiedClassTypeBase : java.lang.String;

@ExtendedMetaData(name="generic-booleanType", kind="simple")
class GenericBooleanType extends String {
}

@ExtendedMetaData(name="generic-booleanType_._base")
enum GenericBooleanTypeBase {
	~true = 0;
	~false = 1;
	yes = 2;
	no = 3;
}

@ExtendedMetaData(name="generic-booleanType_._base:Object", baseType="generic-booleanType_._base")
datatype GenericBooleanTypeBaseObject : org.eclipse.emf.common.util.Enumerator;

@ExtendedMetaData(name="homeType", kind="simple")
class HomeType extends FullyQualifiedClassType {
}

@ExtendedMetaData(name="homeType_._base")
datatype HomeTypeBase : java.lang.String;

@ExtendedMetaData(name="iconType", kind="elementOnly")
class IconType {

	@ExtendedMetaData(kind="element", name="small-icon", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val PathType smallIcon;

	@ExtendedMetaData(kind="element", name="large-icon", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val PathType largeIcon;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;

	@ExtendedMetaData(kind="attribute", name="lang", namespace="http://www.w3.org/XML/1998/namespace")
	attr namespace.LangType lang;
}

@ExtendedMetaData(name="init-methodType", kind="elementOnly")
class InitMethodType {

	@ExtendedMetaData(kind="element", name="create-method", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val NamedMethodType[1] createMethod;

	@ExtendedMetaData(kind="element", name="bean-method", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val NamedMethodType[1] beanMethod;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="injection-targetType", kind="elementOnly")
class InjectionTargetType {

	@ExtendedMetaData(kind="element", name="injection-target-class", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val FullyQualifiedClassType[1] injectionTargetClass;

	@ExtendedMetaData(kind="element", name="injection-target-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val JavaIdentifierType[1] injectionTargetName;
}

@ExtendedMetaData(name="interceptor-bindingType", kind="elementOnly")
class InterceptorBindingType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="ejb-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val String[1] ejbName;

	@ExtendedMetaData(kind="element", name="interceptor-class", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val FullyQualifiedClassType[*] interceptorClass;

	@ExtendedMetaData(kind="element", name="interceptor-order", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val InterceptorOrderType interceptorOrder;

	@ExtendedMetaData(kind="element", name="exclude-default-interceptors", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val TrueFalseType excludeDefaultInterceptors;

	@ExtendedMetaData(kind="element", name="exclude-class-interceptors", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val TrueFalseType excludeClassInterceptors;

	@ExtendedMetaData(kind="element", name="method", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val NamedMethodType method;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="interceptor-orderType", kind="elementOnly")
class InterceptorOrderType {

	@ExtendedMetaData(kind="element", name="interceptor-class", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val FullyQualifiedClassType[+] interceptorClass;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="interceptorsType", kind="elementOnly")
class InterceptorsType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="interceptor", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val InterceptorType[+] interceptor;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="interceptorType", kind="elementOnly")
class InterceptorType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="interceptor-class", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val FullyQualifiedClassType[1] interceptorClass;

	@ExtendedMetaData(kind="element", name="around-invoke", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val AroundInvokeType[*] aroundInvoke;

	@ExtendedMetaData(kind="element", name="env-entry", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EnvEntryType[*] envEntry;

	@ExtendedMetaData(kind="element", name="ejb-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EjbRefType[*] ejbRef;

	@ExtendedMetaData(kind="element", name="ejb-local-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EjbLocalRefType[*] ejbLocalRef;

	@ExtendedMetaData(kind="element", name="service-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val ServiceRefType[*] serviceRef;

	@ExtendedMetaData(kind="element", name="resource-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val ResourceRefType[*] resourceRef;

	@ExtendedMetaData(kind="element", name="resource-env-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val ResourceEnvRefType[*] resourceEnvRef;

	@ExtendedMetaData(kind="element", name="message-destination-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val MessageDestinationRefType[*] messageDestinationRef;

	@ExtendedMetaData(kind="element", name="persistence-context-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val PersistenceContextRefType[*] persistenceContextRef;

	@ExtendedMetaData(kind="element", name="persistence-unit-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val PersistenceUnitRefType[*] persistenceUnitRef;

	@ExtendedMetaData(kind="element", name="post-construct", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val LifecycleCallbackType[*] postConstruct;

	@ExtendedMetaData(kind="element", name="pre-destroy", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val LifecycleCallbackType[*] preDestroy;

	@ExtendedMetaData(kind="element", name="post-activate", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val LifecycleCallbackType[*] postActivate;

	@ExtendedMetaData(kind="element", name="pre-passivate", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val LifecycleCallbackType[*] prePassivate;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="java-identifierType", kind="simple")
class JavaIdentifierType extends String {
}

@ExtendedMetaData(name="java-identifierType_._base", baseType="http://www.eclipse.org/emf/2003/XMLType#token", pattern="($|_|\p{L})(\p{L}|\p{Nd}|_|$)*")
datatype JavaIdentifierTypeBase : java.lang.String;

@ExtendedMetaData(name="java-typeType", kind="simple")
class JavaTypeType extends String {
}

@ExtendedMetaData(name="java-typeType_._base", baseType="http://www.eclipse.org/emf/2003/XMLType#token", pattern="[^\p{Z}]*")
datatype JavaTypeTypeBase : java.lang.String;

@ExtendedMetaData(name="jndi-nameType", kind="simple")
class JndiNameType extends String {
}

@ExtendedMetaData(name="jndi-nameType_._base", baseType="http://www.eclipse.org/emf/2003/XMLType#token")
datatype JndiNameTypeBase : java.lang.String;

@ExtendedMetaData(name="lifecycle-callbackType", kind="elementOnly")
class LifecycleCallbackType {

	@ExtendedMetaData(kind="element", name="lifecycle-callback-class", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val FullyQualifiedClassType lifecycleCallbackClass;

	@ExtendedMetaData(kind="element", name="lifecycle-callback-method", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val JavaIdentifierType[1] lifecycleCallbackMethod;
}

@ExtendedMetaData(name="listenerType", kind="elementOnly")
class ListenerType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="display-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DisplayNameType[*] displayName;

	@ExtendedMetaData(kind="element", name="icon", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val IconType[*] icon;

	@ExtendedMetaData(kind="element", name="listener-class", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val FullyQualifiedClassType[1] listenerClass;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="local-homeType", kind="simple")
class LocalHomeType extends FullyQualifiedClassType {
}

@ExtendedMetaData(name="local-homeType_._base")
datatype LocalHomeTypeBase : java.lang.String;

@ExtendedMetaData(name="localType", kind="simple")
class LocalType extends FullyQualifiedClassType {
}

@ExtendedMetaData(name="localType_._base")
datatype LocalTypeBase : java.lang.String;

@ExtendedMetaData(name="message-destination-linkType", kind="simple")
class MessageDestinationLinkType extends String {
}

@ExtendedMetaData(name="message-destination-linkType_._base", baseType="http://www.eclipse.org/emf/2003/XMLType#token")
datatype MessageDestinationLinkTypeBase : java.lang.String;

@ExtendedMetaData(name="message-destination-refType", kind="elementOnly")
class MessageDestinationRefType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="message-destination-ref-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val JndiNameType[1] messageDestinationRefName;

	@ExtendedMetaData(kind="element", name="message-destination-type", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val MessageDestinationTypeType messageDestinationType;

	@ExtendedMetaData(kind="element", name="message-destination-usage", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val MessageDestinationUsageType messageDestinationUsage;

	@ExtendedMetaData(kind="element", name="message-destination-link", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val MessageDestinationLinkType messageDestinationLink;

	@ExtendedMetaData(kind="element", name="mapped-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val XsdStringType mappedName;

	@ExtendedMetaData(kind="element", name="injection-target", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val InjectionTargetType[*] injectionTarget;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="message-destinationType", kind="elementOnly")
class MessageDestinationType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="display-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DisplayNameType[*] displayName;

	@ExtendedMetaData(kind="element", name="icon", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val IconType[*] icon;

	@ExtendedMetaData(kind="element", name="message-destination-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val String[1] messageDestinationName;

	@ExtendedMetaData(kind="element", name="mapped-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val XsdStringType mappedName;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="message-destination-typeType", kind="simple")
class MessageDestinationTypeType extends FullyQualifiedClassType {
}

@ExtendedMetaData(name="message-destination-typeType_._base")
datatype MessageDestinationTypeTypeBase : java.lang.String;

@ExtendedMetaData(name="message-destination-usageType", kind="simple")
class MessageDestinationUsageType extends String {
}

@ExtendedMetaData(name="message-destination-usageType_._base")
enum MessageDestinationUsageTypeBase {
	Consumes = 0;
	Produces = 1;
	ConsumesProduces = 2;
}

@ExtendedMetaData(name="message-destination-usageType_._base:Object", baseType="message-destination-usageType_._base")
datatype MessageDestinationUsageTypeBaseObject : org.eclipse.emf.common.util.Enumerator;

@ExtendedMetaData(name="message-driven-beanType", kind="elementOnly")
class MessageDrivenBeanType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="display-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DisplayNameType[*] displayName;

	@ExtendedMetaData(kind="element", name="icon", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val IconType[*] icon;

	@ExtendedMetaData(kind="element", name="ejb-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EjbNameType[1] ejbName;

	@ExtendedMetaData(kind="element", name="mapped-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val XsdStringType mappedName;

	@ExtendedMetaData(kind="element", name="ejb-class", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EjbClassType ejbClass;

	@ExtendedMetaData(kind="element", name="messaging-type", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val FullyQualifiedClassType messagingType;

	@ExtendedMetaData(kind="element", name="timeout-method", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val NamedMethodType timeoutMethod;

	@ExtendedMetaData(kind="element", name="transaction-type", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val TransactionTypeType transactionType;

	@ExtendedMetaData(kind="element", name="message-destination-type", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val MessageDestinationTypeType messageDestinationType;

	@ExtendedMetaData(kind="element", name="message-destination-link", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val MessageDestinationLinkType messageDestinationLink;

	@ExtendedMetaData(kind="element", name="activation-config", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val ActivationConfigType activationConfig;

	@ExtendedMetaData(kind="element", name="around-invoke", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val AroundInvokeType[*] aroundInvoke;

	@ExtendedMetaData(kind="element", name="env-entry", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EnvEntryType[*] envEntry;

	@ExtendedMetaData(kind="element", name="ejb-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EjbRefType[*] ejbRef;

	@ExtendedMetaData(kind="element", name="ejb-local-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EjbLocalRefType[*] ejbLocalRef;

	@ExtendedMetaData(kind="element", name="service-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val ServiceRefType[*] serviceRef;

	@ExtendedMetaData(kind="element", name="resource-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val ResourceRefType[*] resourceRef;

	@ExtendedMetaData(kind="element", name="resource-env-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val ResourceEnvRefType[*] resourceEnvRef;

	@ExtendedMetaData(kind="element", name="message-destination-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val MessageDestinationRefType[*] messageDestinationRef;

	@ExtendedMetaData(kind="element", name="persistence-context-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val PersistenceContextRefType[*] persistenceContextRef;

	@ExtendedMetaData(kind="element", name="persistence-unit-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val PersistenceUnitRefType[*] persistenceUnitRef;

	@ExtendedMetaData(kind="element", name="post-construct", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val LifecycleCallbackType[*] postConstruct;

	@ExtendedMetaData(kind="element", name="pre-destroy", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val LifecycleCallbackType[*] preDestroy;

	@ExtendedMetaData(kind="element", name="security-identity", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val SecurityIdentityType securityIdentity;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="method-intfType", kind="simple")
class MethodIntfType extends String {
}

@ExtendedMetaData(name="method-intfType_._base")
enum MethodIntfTypeBase {
	Home = 0;
	Remote = 1;
	LocalHome = 2;
	Local = 3;
	ServiceEndpoint = 4;
}

@ExtendedMetaData(name="method-intfType_._base:Object", baseType="method-intfType_._base")
datatype MethodIntfTypeBaseObject : org.eclipse.emf.common.util.Enumerator;

@ExtendedMetaData(name="method-nameType", kind="simple")
class MethodNameType extends String {
}

@ExtendedMetaData(name="method-nameType_._base", baseType="http://www.eclipse.org/emf/2003/XMLType#token")
datatype MethodNameTypeBase : java.lang.String;

@ExtendedMetaData(name="method-paramsType", kind="elementOnly")
class MethodParamsType {

	@ExtendedMetaData(kind="element", name="method-param", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val JavaTypeType[*] methodParam;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="method-permissionType", kind="elementOnly")
class MethodPermissionType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="role-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val RoleNameType[*] roleName;

	@ExtendedMetaData(kind="element", name="unchecked", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EmptyType unchecked;

	@ExtendedMetaData(kind="element", name="method", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val MethodType[+] method;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="methodType", kind="elementOnly")
class MethodType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="ejb-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EjbNameType[1] ejbName;

	@ExtendedMetaData(kind="element", name="method-intf", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val MethodIntfType methodIntf;

	@ExtendedMetaData(kind="element", name="method-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val MethodNameType[1] methodName;

	@ExtendedMetaData(kind="element", name="method-params", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val MethodParamsType methodParams;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="multiplicityType", kind="simple")
class MultiplicityType extends String {
}

@ExtendedMetaData(name="multiplicityType_._base")
enum MultiplicityTypeBase {
	One = 0;
	Many = 1;
}

@ExtendedMetaData(name="multiplicityType_._base:Object", baseType="multiplicityType_._base")
datatype MultiplicityTypeBaseObject : org.eclipse.emf.common.util.Enumerator;

@ExtendedMetaData(name="named-methodType", kind="elementOnly")
class NamedMethodType {

	@ExtendedMetaData(kind="element", name="method-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val String[1] methodName;

	@ExtendedMetaData(kind="element", name="method-params", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val MethodParamsType methodParams;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="param-valueType", kind="elementOnly")
class ParamValueType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="param-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val String[1] paramName;

	@ExtendedMetaData(kind="element", name="param-value", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val XsdStringType[1] paramValue;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="pathType", kind="simple")
class PathType extends String {
}

@ExtendedMetaData(name="pathType_._base", baseType="http://www.eclipse.org/emf/2003/XMLType#token")
datatype PathTypeBase : java.lang.String;

@ExtendedMetaData(name="persistence-context-refType", kind="elementOnly")
class PersistenceContextRefType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="persistence-context-ref-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val JndiNameType[1] persistenceContextRefName;

	@ExtendedMetaData(kind="element", name="persistence-unit-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val String persistenceUnitName;

	@ExtendedMetaData(kind="element", name="persistence-context-type", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val PersistenceContextTypeType persistenceContextType;

	@ExtendedMetaData(kind="element", name="persistence-property", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val PropertyType[*] persistenceProperty;

	@ExtendedMetaData(kind="element", name="mapped-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val XsdStringType mappedName;

	@ExtendedMetaData(kind="element", name="injection-target", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val InjectionTargetType[*] injectionTarget;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="persistence-context-typeType", kind="simple")
class PersistenceContextTypeType extends String {
}

@ExtendedMetaData(name="persistence-context-typeType_._base")
enum PersistenceContextTypeTypeBase {
	Transaction = 0;
	Extended = 1;
}

@ExtendedMetaData(name="persistence-context-typeType_._base:Object", baseType="persistence-context-typeType_._base")
datatype PersistenceContextTypeTypeBaseObject : org.eclipse.emf.common.util.Enumerator;

@ExtendedMetaData(name="persistence-typeType", kind="simple")
class PersistenceTypeType extends String {
}

@ExtendedMetaData(name="persistence-typeType_._base")
enum PersistenceTypeTypeBase {
	Bean = 0;
	Container = 1;
}

@ExtendedMetaData(name="persistence-typeType_._base:Object", baseType="persistence-typeType_._base")
datatype PersistenceTypeTypeBaseObject : org.eclipse.emf.common.util.Enumerator;

@ExtendedMetaData(name="persistence-unit-refType", kind="elementOnly")
class PersistenceUnitRefType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="persistence-unit-ref-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val JndiNameType[1] persistenceUnitRefName;

	@ExtendedMetaData(kind="element", name="persistence-unit-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val String persistenceUnitName;

	@ExtendedMetaData(kind="element", name="mapped-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val XsdStringType mappedName;

	@ExtendedMetaData(kind="element", name="injection-target", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val InjectionTargetType[*] injectionTarget;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="port-component-refType", kind="elementOnly")
class PortComponentRefType {

	@ExtendedMetaData(kind="element", name="service-endpoint-interface", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val FullyQualifiedClassType[1] serviceEndpointInterface;

	@ExtendedMetaData(kind="element", name="enable-mtom", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val TrueFalseType enableMtom;

	@ExtendedMetaData(kind="element", name="port-component-link", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val String portComponentLink;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="propertyType", kind="elementOnly")
class PropertyType {

	@ExtendedMetaData(kind="element", name="name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val XsdStringType[1] name;

	@ExtendedMetaData(kind="element", name="value", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val XsdStringType[1] value;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="query-methodType", kind="elementOnly")
class QueryMethodType {

	@ExtendedMetaData(kind="element", name="method-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val MethodNameType[1] methodName;

	@ExtendedMetaData(kind="element", name="method-params", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val MethodParamsType[1] methodParams;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="queryType", kind="elementOnly")
class QueryType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType description;

	@ExtendedMetaData(kind="element", name="query-method", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val QueryMethodType[1] queryMethod;

	@ExtendedMetaData(kind="element", name="result-type-mapping", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val ResultTypeMappingType resultTypeMapping;

	@ExtendedMetaData(kind="element", name="ejb-ql", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val XsdStringType[1] ejbQl;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="relationship-role-sourceType", kind="elementOnly")
class RelationshipRoleSourceType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="ejb-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EjbNameType[1] ejbName;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="relationshipsType", kind="elementOnly")
class RelationshipsType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="ejb-relation", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EjbRelationType[+] ejbRelation;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="remoteType", kind="simple")
class RemoteType extends FullyQualifiedClassType {
}

@ExtendedMetaData(name="remoteType_._base")
datatype RemoteTypeBase : java.lang.String;

@ExtendedMetaData(name="remove-methodType", kind="elementOnly")
class RemoveMethodType {

	@ExtendedMetaData(kind="element", name="bean-method", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val NamedMethodType[1] beanMethod;

	@ExtendedMetaData(kind="element", name="retain-if-exception", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val TrueFalseType retainIfException;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="res-authType", kind="simple")
class ResAuthType extends String {
}

@ExtendedMetaData(name="res-authType_._base")
enum ResAuthTypeBase {
	Application = 0;
	Container = 1;
}

@ExtendedMetaData(name="res-authType_._base:Object", baseType="res-authType_._base")
datatype ResAuthTypeBaseObject : org.eclipse.emf.common.util.Enumerator;

@ExtendedMetaData(name="resource-env-refType", kind="elementOnly")
class ResourceEnvRefType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="resource-env-ref-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val JndiNameType[1] resourceEnvRefName;

	@ExtendedMetaData(kind="element", name="resource-env-ref-type", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val FullyQualifiedClassType resourceEnvRefType;

	@ExtendedMetaData(kind="element", name="mapped-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val XsdStringType mappedName;

	@ExtendedMetaData(kind="element", name="injection-target", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val InjectionTargetType[*] injectionTarget;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="resource-refType", kind="elementOnly")
class ResourceRefType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="res-ref-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val JndiNameType[1] resRefName;

	@ExtendedMetaData(kind="element", name="res-type", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val FullyQualifiedClassType resType;

	@ExtendedMetaData(kind="element", name="res-auth", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val ResAuthType resAuth;

	@ExtendedMetaData(kind="element", name="res-sharing-scope", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val ResSharingScopeType resSharingScope;

	@ExtendedMetaData(kind="element", name="mapped-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val XsdStringType mappedName;

	@ExtendedMetaData(kind="element", name="injection-target", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val InjectionTargetType[*] injectionTarget;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="res-sharing-scopeType", kind="simple")
class ResSharingScopeType extends String {
}

@ExtendedMetaData(name="res-sharing-scopeType_._base")
enum ResSharingScopeTypeBase {
	Shareable = 0;
	Unshareable = 1;
}

@ExtendedMetaData(name="res-sharing-scopeType_._base:Object", baseType="res-sharing-scopeType_._base")
datatype ResSharingScopeTypeBaseObject : org.eclipse.emf.common.util.Enumerator;

@ExtendedMetaData(name="result-type-mappingType", kind="simple")
class ResultTypeMappingType extends String {
}

@ExtendedMetaData(name="result-type-mappingType_._base")
enum ResultTypeMappingTypeBase {
	Local = 0;
	Remote = 1;
}

@ExtendedMetaData(name="result-type-mappingType_._base:Object", baseType="result-type-mappingType_._base")
datatype ResultTypeMappingTypeBaseObject : org.eclipse.emf.common.util.Enumerator;

@ExtendedMetaData(name="role-nameType", kind="simple")
class RoleNameType extends String {
}

@ExtendedMetaData(name="role-nameType_._base", baseType="http://www.eclipse.org/emf/2003/XMLType#token")
datatype RoleNameTypeBase : java.lang.String;

@ExtendedMetaData(name="run-asType", kind="elementOnly")
class RunAsType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="role-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val RoleNameType[1] roleName;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="security-identityType", kind="elementOnly")
class SecurityIdentityType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="use-caller-identity", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EmptyType useCallerIdentity;

	@ExtendedMetaData(kind="element", name="run-as", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val RunAsType runAs;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="security-role-refType", kind="elementOnly")
class SecurityRoleRefType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="role-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val RoleNameType[1] roleName;

	@ExtendedMetaData(kind="element", name="role-link", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val RoleNameType roleLink;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="security-roleType", kind="elementOnly")
class SecurityRoleType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="role-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val RoleNameType[1] roleName;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="service-ref_handler-chainsType", kind="elementOnly")
class ServiceRefHandlerChainsType {

	@ExtendedMetaData(kind="element", name="handler-chain", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val ServiceRefHandlerChainType[*] handlerChain;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="service-ref_handler-chainType", kind="elementOnly")
class ServiceRefHandlerChainType {

	@ExtendedMetaData(kind="element", name="service-name-pattern", namespace="http://java.sun.com/xml/ns/javaee")
	attr ServiceRefQnamePattern serviceNamePattern;

	@ExtendedMetaData(kind="element", name="port-name-pattern", namespace="http://java.sun.com/xml/ns/javaee")
	attr ServiceRefQnamePattern portNamePattern;

	@ExtendedMetaData(kind="element", name="protocol-bindings", namespace="http://java.sun.com/xml/ns/javaee")
	attr ServiceRefProtocolBindingListType protocolBindings;

	@ExtendedMetaData(kind="element", name="handler", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val ServiceRefHandlerType[+] handler;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="service-ref_handlerType", kind="elementOnly")
class ServiceRefHandlerType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="display-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DisplayNameType[*] displayName;

	@ExtendedMetaData(kind="element", name="icon", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val IconType[*] icon;

	@ExtendedMetaData(kind="element", name="handler-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val String[1] handlerName;

	@ExtendedMetaData(kind="element", name="handler-class", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val FullyQualifiedClassType[1] handlerClass;

	@ExtendedMetaData(kind="element", name="init-param", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val ParamValueType[*] initParam;

	@ExtendedMetaData(kind="element", name="soap-header", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val XsdQNameType[*] soapHeader;

	@ExtendedMetaData(kind="element", name="soap-role", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val String[*] soapRole;

	@ExtendedMetaData(kind="element", name="port-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val String[*] portName;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="service-ref_protocol-bindingListType", itemType="service-ref_protocol-bindingType")
datatype ServiceRefProtocolBindingListType : java.util.List;

@ExtendedMetaData(name="service-ref_protocol-bindingType", memberTypes="http://www.eclipse.org/emf/2003/XMLType#anyURI service-ref_protocol-URIAliasType")
datatype ServiceRefProtocolBindingType : java.lang.String;

@ExtendedMetaData(name="service-ref_protocol-URIAliasType", baseType="http://www.eclipse.org/emf/2003/XMLType#token", pattern="##.+")
datatype ServiceRefProtocolURIAliasType : java.lang.String;

@ExtendedMetaData(name="service-ref_qname-pattern", baseType="http://www.eclipse.org/emf/2003/XMLType#token", pattern="\*|([\i-[:]][\c-[:]]*:)?[\i-[:]][\c-[:]]*\*?")
datatype ServiceRefQnamePattern : java.lang.String;

@ExtendedMetaData(name="service-refType", kind="elementOnly")
class ServiceRefType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="display-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DisplayNameType[*] displayName;

	@ExtendedMetaData(kind="element", name="icon", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val IconType[*] icon;

	@ExtendedMetaData(kind="element", name="service-ref-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val JndiNameType[1] serviceRefName;

	@ExtendedMetaData(kind="element", name="service-interface", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val FullyQualifiedClassType[1] serviceInterface;

	@ExtendedMetaData(kind="element", name="service-ref-type", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val FullyQualifiedClassType serviceRefType;

	@ExtendedMetaData(kind="element", name="wsdl-file", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val XsdAnyURIType wsdlFile;

	@ExtendedMetaData(kind="element", name="jaxrpc-mapping-file", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val PathType jaxrpcMappingFile;

	@ExtendedMetaData(kind="element", name="service-qname", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val XsdQNameType serviceQname;

	@ExtendedMetaData(kind="element", name="port-component-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val PortComponentRefType[*] portComponentRef;

	@ExtendedMetaData(kind="element", name="handler", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val ServiceRefHandlerType[*] handler;

	@ExtendedMetaData(kind="element", name="handler-chains", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val ServiceRefHandlerChainsType handlerChains;

	@ExtendedMetaData(kind="element", name="mapped-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val XsdStringType mappedName;

	@ExtendedMetaData(kind="element", name="injection-target", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val InjectionTargetType[*] injectionTarget;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="session-beanType", kind="elementOnly")
class SessionBeanType {

	@ExtendedMetaData(kind="element", name="description", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DescriptionType[*] description;

	@ExtendedMetaData(kind="element", name="display-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val DisplayNameType[*] displayName;

	@ExtendedMetaData(kind="element", name="icon", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val IconType[*] icon;

	@ExtendedMetaData(kind="element", name="ejb-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EjbNameType[1] ejbName;

	@ExtendedMetaData(kind="element", name="mapped-name", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val XsdStringType mappedName;

	@ExtendedMetaData(kind="element", name="home", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val HomeType home;

	@ExtendedMetaData(kind="element", name="remote", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val RemoteType remote;

	@ExtendedMetaData(kind="element", name="local-home", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val LocalHomeType localHome;

	@ExtendedMetaData(kind="element", name="local", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val LocalType local;

	@ExtendedMetaData(kind="element", name="business-local", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val FullyQualifiedClassType[*] businessLocal;

	@ExtendedMetaData(kind="element", name="business-remote", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val FullyQualifiedClassType[*] businessRemote;

	@ExtendedMetaData(kind="element", name="service-endpoint", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val FullyQualifiedClassType serviceEndpoint;

	@ExtendedMetaData(kind="element", name="ejb-class", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EjbClassType ejbClass;

	@ExtendedMetaData(kind="element", name="session-type", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val SessionTypeType sessionType;

	@ExtendedMetaData(kind="element", name="timeout-method", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val NamedMethodType timeoutMethod;

	@ExtendedMetaData(kind="element", name="init-method", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val InitMethodType[*] initMethod;

	@ExtendedMetaData(kind="element", name="remove-method", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val RemoveMethodType[*] removeMethod;

	@ExtendedMetaData(kind="element", name="transaction-type", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val TransactionTypeType transactionType;

	@ExtendedMetaData(kind="element", name="around-invoke", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val AroundInvokeType[*] aroundInvoke;

	@ExtendedMetaData(kind="element", name="env-entry", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EnvEntryType[*] envEntry;

	@ExtendedMetaData(kind="element", name="ejb-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EjbRefType[*] ejbRef;

	@ExtendedMetaData(kind="element", name="ejb-local-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val EjbLocalRefType[*] ejbLocalRef;

	@ExtendedMetaData(kind="element", name="service-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val ServiceRefType[*] serviceRef;

	@ExtendedMetaData(kind="element", name="resource-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val ResourceRefType[*] resourceRef;

	@ExtendedMetaData(kind="element", name="resource-env-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val ResourceEnvRefType[*] resourceEnvRef;

	@ExtendedMetaData(kind="element", name="message-destination-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val MessageDestinationRefType[*] messageDestinationRef;

	@ExtendedMetaData(kind="element", name="persistence-context-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val PersistenceContextRefType[*] persistenceContextRef;

	@ExtendedMetaData(kind="element", name="persistence-unit-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val PersistenceUnitRefType[*] persistenceUnitRef;

	@ExtendedMetaData(kind="element", name="post-construct", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val LifecycleCallbackType[*] postConstruct;

	@ExtendedMetaData(kind="element", name="pre-destroy", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val LifecycleCallbackType[*] preDestroy;

	@ExtendedMetaData(kind="element", name="post-activate", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val LifecycleCallbackType[*] postActivate;

	@ExtendedMetaData(kind="element", name="pre-passivate", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val LifecycleCallbackType[*] prePassivate;

	@ExtendedMetaData(kind="element", name="security-role-ref", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val SecurityRoleRefType[*] securityRoleRef;

	@ExtendedMetaData(kind="element", name="security-identity", namespace="http://java.sun.com/xml/ns/javaee")
	!resolve val SecurityIdentityType securityIdentity;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="session-typeType", kind="simple")
class SessionTypeType extends String {
}

@ExtendedMetaData(name="session-typeType_._base")
enum SessionTypeTypeBase {
	Stateful = 0;
	Stateless = 1;
}

@ExtendedMetaData(name="session-typeType_._base:Object", baseType="session-typeType_._base")
datatype SessionTypeTypeBaseObject : org.eclipse.emf.common.util.Enumerator;

@ExtendedMetaData(name="string", kind="simple")
class String {

	@ExtendedMetaData(name=":0", kind="simple")
	attr type.Token value;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="transaction-typeType", kind="simple")
class TransactionTypeType extends String {
}

@ExtendedMetaData(name="transaction-typeType_._base")
enum TransactionTypeTypeBase {
	Bean = 0;
	Container = 1;
}

@ExtendedMetaData(name="transaction-typeType_._base:Object", baseType="transaction-typeType_._base")
datatype TransactionTypeTypeBaseObject : org.eclipse.emf.common.util.Enumerator;

@ExtendedMetaData(name="trans-attributeType", kind="simple")
class TransAttributeType extends String {
}

@ExtendedMetaData(name="trans-attributeType_._base")
enum TransAttributeTypeBase {
	NotSupported = 0;
	Supports = 1;
	Required = 2;
	RequiresNew = 3;
	Mandatory = 4;
	Never = 5;
}

@ExtendedMetaData(name="trans-attributeType_._base:Object", baseType="trans-attributeType_._base")
datatype TransAttributeTypeBaseObject : org.eclipse.emf.common.util.Enumerator;

@ExtendedMetaData(name="true-falseType", kind="simple")
class TrueFalseType extends XsdBooleanType {
}

@ExtendedMetaData(name="true-falseType_._base", baseType="http://www.eclipse.org/emf/2003/XMLType#boolean", pattern="(true|false)")
datatype TrueFalseTypeBase : boolean;

@ExtendedMetaData(name="true-falseType_._base:Object", baseType="true-falseType_._base")
datatype TrueFalseTypeBaseObject : java.lang.Boolean;

@ExtendedMetaData(name="url-patternType", kind="simple")
class UrlPatternType {

	@ExtendedMetaData(name=":0", kind="simple")
	attr type.String value;
}

@ExtendedMetaData(name="xsdAnyURIType", kind="simple")
class XsdAnyURIType {

	@ExtendedMetaData(name=":0", kind="simple")
	attr type.AnyURI value;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="xsdBooleanType", kind="simple")
class XsdBooleanType {

	@ExtendedMetaData(name=":0", kind="simple")
	unsettable attr type.Boolean value;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="xsdIntegerType", kind="simple")
class XsdIntegerType {

	@ExtendedMetaData(name=":0", kind="simple")
	attr type.Integer value;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="xsdNMTOKENType", kind="simple")
class XsdNMTOKENType {

	@ExtendedMetaData(name=":0", kind="simple")
	attr type.NMTOKEN value;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="xsdNonNegativeIntegerType", kind="simple")
class XsdNonNegativeIntegerType {

	@ExtendedMetaData(name=":0", kind="simple")
	attr type.NonNegativeInteger value;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="xsdPositiveIntegerType", kind="simple")
class XsdPositiveIntegerType {

	@ExtendedMetaData(name=":0", kind="simple")
	attr type.PositiveInteger value;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="xsdQNameType", kind="simple")
class XsdQNameType {

	@ExtendedMetaData(name=":0", kind="simple")
	attr type.QName value;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

@ExtendedMetaData(name="xsdStringType", kind="simple")
class XsdStringType {

	@ExtendedMetaData(name=":0", kind="simple")
	attr type.String value;

	@ExtendedMetaData(kind="attribute", name="id")
	id attr type.ID ~id;
}

