@"http://www.w3.org/XML/1998/namespace"(lang="en")
@GenModel(documentation="This XML Schema Document encodes the parts of ISO 19115 used
    by the common \"ServiceIdentification\" and \"ServiceProvider\" sections of the
    GetCapabilities operation response, known as the service metadata XML
    document. The parts encoded here are the MD_Keywords, CI_ResponsibleParty,
    and related classes. The UML package prefixes were omitted from XML names,
    and the XML element names were all capitalized, for consistency with other
    OWS Schemas. This document also provides a simple coding of text in
    multiple languages, simplified from Annex J of ISO 19115.

    OWS is an OGC Standard.
    Copyright (c) 2009 Open Geospatial Consortium.
    To obtain additional rights of use, visit http://www.opengeospatial.org/legal/ .

This XML Schema Document includes and imports, directly or
      indirectly, all the XML Schemas defined by the OWS Common Implemetation
      Specification.

      OWS is an OGC Standard.
      Copyright (c) 2009 Open Geospatial Consortium.
      To obtain additional rights of use, visit http://www.opengeospatial.org/legal/ .

This XML Schema Document encodes the GetResourceByID
    operation request message. This typical operation is specified as a base
    for profiling in specific OWS specifications. For information on the
    allowed changes and limitations in such profiling, see Subclause 9.4.1 of
    the OWS Common specification.

    OWS is an OGC Standard.
    Copyright (c) 2009 Open Geospatial Consortium.
    To obtain additional rights of use, visit http://www.opengeospatial.org/legal/ .

This XML Schema Document encodes the Exception Report
    response to all OWS operations.

    OWS is an OGC Standard.
    Copyright (c) 2009 Open Geospatial Consortium.
    To obtain additional rights of use, visit http://www.opengeospatial.org/legal/ .

This XML Schema Document encodes the allowed values (or
    domain) of a quantity, often for an input or output parameter to an OWS.
    Such a parameter is sometimes called a variable, quantity, literal, or
    typed literal. Such a parameter can use one of many data types, including
    double, integer, boolean, string, or URI. The allowed values can also be
    encoded for a quantity that is not explicit or not transferred, but is
    constrained by a server implementation.

    OWS is an OGC Standard.
    Copyright (c) 2009 Open Geospatial Consortium.
    To obtain additional rights of use, visit http://www.opengeospatial.org/legal/

This XML Schema Document encodes the typical Contents
    section of an OWS service metadata (Capabilities) document. This Schema
    can be built upon to define the Contents section for a specific OWS. If
    the ContentsBaseType in this XML Schema cannot be restricted and extended
    to define the Contents section for a specific OWS, all other relevant
    parts defined in owsContents.xsd shall be used by the \"ContentsType\" in
    the wxsContents.xsd prepared for the specific OWS.

    OWS is an OGC Standard.
    Copyright (c) 2009 Open Geospatial Consortium.
    To obtain additional rights of use, visit http://www.opengeospatial.org/legal/

This XML Schema Document specifies types and elements for
    input and output of operation data, allowing including multiple data items
    with each data item either included or referenced. The contents of each
    type and element specified here can be restricted and/or extended for each
    use in a specific OWS specification.

    OWS is an OGC Standard.
    Copyright (c) 2009 Open Geospatial Consortium.
    To obtain additional rights of use, visit http://www.opengeospatial.org/legal/ .

This XML Schema Document encodes a new AdditionalParameters
    element that contains one or more AdditionalParameter elements, which each
    contain a specific parameter name and one or more values of that parameter.
    This AdditionalParameters element is substitutable for ows:Metadata,
    anywhere that element is allowed. The document also encodes a new nilValue
    element of a newly defined NilValue type that allows the specification of
    a nilReason attribute.

   OWS is an OGC Standard.
   Copyright (c) 2009 Open Geospatial Consortium.
   To obtain additional rights of use, visit http://www.opengeospatial.org/legal/ .


   <div xmlns=\"http://www.w3.org/1999/xhtml\">
    <h1>About the XML namespace</h1>

    <div class=\"bodytext\">
     <p>
      This schema document describes the XML namespace, in a form
      suitable for import by other schema documents.
     </p>
     <p>
      See <a href=\"http://www.w3.org/XML/1998/namespace.html\">
      http://www.w3.org/XML/1998/namespace.html</a> and
      <a href=\"http://www.w3.org/TR/REC-xml\">
      http://www.w3.org/TR/REC-xml</a> for information
      about this namespace.
     </p>
     <p>
      Note that local names in this namespace are intended to be
      defined only by the World Wide Web Consortium or its subgroups.
      The names currently defined in this namespace are listed below.
      They should not be used with conflicting semantics by any Working
      Group, specification, or document instance.
     </p>
     <p>
      See further below in this document for more information about <a href=\"#usage\">how to refer to this schema document from your own
      XSD schema documents</a> and about <a href=\"#nsversioning\">the
      namespace-versioning policy governing this schema document</a>.
     </p>
    </div>
   </div>


   <div xmlns=\"http://www.w3.org/1999/xhtml\">

    <h3>Father (in any context at all)</h3>

    <div class=\"bodytext\">
     <p>
      denotes Jon Bosak, the chair of
      the original XML Working Group.  This name is reserved by
      the following decision of the W3C XML Plenary and
      XML Coordination groups:
     </p>
     <blockquote>
       <p>
	In appreciation for his vision, leadership and
	dedication the W3C XML Plenary on this 10th day of
	February, 2000, reserves for Jon Bosak in perpetuity
	the XML name \"xml:Father\".
       </p>
     </blockquote>
    </div>
   </div>


   <div id=\"usage\" xml:id=\"usage\" xmlns=\"http://www.w3.org/1999/xhtml\">
    <h2>
      <a name=\"usage\">About this schema document</a>
    </h2>

    <div class=\"bodytext\">
     <p>
      This schema defines attributes and an attribute group suitable
      for use by schemas wishing to allow <code>xml:base</code>,
      <code>xml:lang</code>, <code>xml:space</code> or
      <code>xml:id</code> attributes on elements they define.
     </p>
     <p>
      To enable this, such a schema must import this schema for
      the XML namespace, e.g. as follows:
     </p>
     <pre>
          &lt;schema . . .&gt;
           . . .
           &lt;import namespace=\"http://www.w3.org/XML/1998/namespace\"
                      schemaLocation=\"http://www.w3.org/2001/xml.xsd\"/&gt;
     </pre>
     <p>
      or
     </p>
     <pre>
           &lt;import namespace=\"http://www.w3.org/XML/1998/namespace\"
                      schemaLocation=\"http://www.w3.org/2009/01/xml.xsd\"/&gt;
     </pre>
     <p>
      Subsequently, qualified reference to any of the attributes or the
      group defined below will have the desired effect, e.g.
     </p>
     <pre>
          &lt;type . . .&gt;
           . . .
           &lt;attributeGroup ref=\"xml:specialAttrs\"/&gt;
     </pre>
     <p>
      will define a type which will schema-validate an instance element
      with any of those attributes.
     </p>
    </div>
   </div>


   <div id=\"nsversioning\" xml:id=\"nsversioning\" xmlns=\"http://www.w3.org/1999/xhtml\">
    <h2>
      <a name=\"nsversioning\">Versioning policy for this schema document</a>
    </h2>
    <div class=\"bodytext\">
     <p>
      In keeping with the XML Schema WG's standard versioning
      policy, this schema document will persist at
      <a href=\"http://www.w3.org/2009/01/xml.xsd\">
       http://www.w3.org/2009/01/xml.xsd</a>.
     </p>
     <p>
      At the date of issue it can also be found at
      <a href=\"http://www.w3.org/2001/xml.xsd\">
       http://www.w3.org/2001/xml.xsd</a>.
     </p>
     <p>
      The schema document at that URI may however change in the future,
      in order to remain compatible with the latest version of XML
      Schema itself, or with the XML namespace itself.  In other words,
      if the XML Schema or XML namespaces change, the version of this
      document at <a href=\"http://www.w3.org/2001/xml.xsd\">
       http://www.w3.org/2001/xml.xsd
      </a>
      will change accordingly; the version at
      <a href=\"http://www.w3.org/2009/01/xml.xsd\">
       http://www.w3.org/2009/01/xml.xsd
      </a>
      will not change.
     </p>
     <p>
      Previous dated (and unchanging) versions of this schema
      document are at:
     </p>
     <ul>
      <li>
          <a href=\"http://www.w3.org/2009/01/xml.xsd\">
	http://www.w3.org/2009/01/xml.xsd</a>
        </li>
      <li>
          <a href=\"http://www.w3.org/2007/08/xml.xsd\">
	http://www.w3.org/2007/08/xml.xsd</a>
        </li>
      <li>
          <a href=\"http://www.w3.org/2004/10/xml.xsd\">
	http://www.w3.org/2004/10/xml.xsd</a>
        </li>
      <li>
          <a href=\"http://www.w3.org/2001/03/xml.xsd\">
	http://www.w3.org/2001/03/xml.xsd</a>
        </li>
     </ul>
    </div>
   </div>

This schema document provides attribute declarations and
attribute group, complex type and simple type definitions which can be used in
the construction of user schemas to define the structure of particular linking
constructs, e.g.

<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"
           xmlns:xl=\"http://www.w3.org/1999/xlink\">

 <xs:import namespace=\"http://www.w3.org/1999/xlink\"
            location=\"http://www.w3.org/1999/xlink.xsd\">

 <xs:element name=\"mySimple\">
  <xs:complexType>
   ...
   <xs:attributeGroup ref=\"xl:simpleAttrs\"/>
   ...
  </xs:complexType>
 </xs:element>
 ...
</xs:schema>")
@namespace(uri="http://www.opengis.net/ows/2.0", prefix="ows")
package ows20;

import "http://www.eclipse.org/emf/2003/XMLType";
import "http://www.w3.org/XML/1998/namespace";
import "http://www.eclipse.org/emf/2002/Ecore";

@ExtendedMetaData(name="AbstractReferenceBaseType", kind="empty")
@GenModel(documentation="Base for a reference to a remote or local
      resource.
This type contains only a restricted and annotated set of
      the attributes from the xlink:simpleAttrs attributeGroup.")
class AbstractReferenceBaseType {

	@ExtendedMetaData(kind="attribute", name="actuate", namespace="http://www.w3.org/1999/xlink")
	@GenModel(documentation="Although allowed, this attribute is not expected to be
        useful in this application of xlink:simpleAttrs.")
	unsettable attr ActuateType actuate;

	@ExtendedMetaData(kind="attribute", name="arcrole", namespace="http://www.w3.org/1999/xlink")
	@GenModel(documentation="Although allowed, this attribute is not expected to be
        useful in this application of xlink:simpleAttrs.")
	attr ArcroleType arcrole;

	@ExtendedMetaData(kind="attribute", name="href", namespace="http://www.w3.org/1999/xlink")
	@GenModel(documentation="Reference to a remote resource or local payload. A
        remote resource is typically addressed by a URL. For a local payload
        (such as a multipart mime message), the xlink:href must start with the
        prefix cid:.")
	attr HrefType[1] href;

	@ExtendedMetaData(kind="attribute", name="role", namespace="http://www.w3.org/1999/xlink")
	@GenModel(documentation="Reference to a resource that describes the role of this
        reference. When no value is supplied, no particular role value is to
        be inferred.")
	attr RoleType role;

	@ExtendedMetaData(kind="attribute", name="show", namespace="http://www.w3.org/1999/xlink")
	@GenModel(documentation="Although allowed, this attribute is not expected to be
        useful in this application of xlink:simpleAttrs.")
	unsettable attr ShowType show;

	@ExtendedMetaData(kind="attribute", name="title", namespace="http://www.w3.org/1999/xlink")
	@GenModel(documentation="Describes the meaning of the referenced resource in a
        human-readable fashion.")
	attr TitleAttrType title;

	@ExtendedMetaData(kind="attribute", name="type", namespace="##targetNamespace")
	unsettable attr type.String type = "simple";
}

@ExtendedMetaData(name="AcceptFormatsType", kind="elementOnly")
@GenModel(documentation="Prioritized sequence of zero or more GetCapabilities
      operation response formats desired by client, with preferred formats
      listed first. Each response format shall be identified by its MIME type.
      See AcceptFormats parameter use subclause for more
      information.")
class AcceptFormatsType {

	@ExtendedMetaData(kind="element", name="OutputFormat", namespace="##targetNamespace")
	!unique attr String[*] outputFormat;
}

@ExtendedMetaData(name="AcceptLanguages_._type", kind="elementOnly")
class AcceptLanguagesType {

	@ExtendedMetaData(kind="element", name="Language", namespace="##targetNamespace")
	@GenModel(documentation="Identifier of a language used by the data(set) contents.
      This language identifier shall be as specified in IETF RFC 4646. The
      language tags shall be either complete 5 character codes (e.g. \"en-CA\"),
      or abbreviated 2 character codes (e.g. \"en\"). In addition to the RFC
      4646 codes, the server shall support the single special value \"
\" which
      is used to indicate \"any language\".")
	!unique attr String[+] language;
}

@ExtendedMetaData(name="AcceptVersionsType", kind="elementOnly")
@GenModel(documentation="Prioritized sequence of one or more specification
      versions accepted by client, with preferred versions listed first. See
      Version negotiation subclause for more information.")
class AcceptVersionsType {

	@ExtendedMetaData(kind="element", name="Version", namespace="##targetNamespace")
	!unique attr String[+] version;
}

@ExtendedMetaData(name="AdditionalParametersBaseType", kind="elementOnly")
class AdditionalParametersBaseType extends MetadataType {

	@ExtendedMetaData(kind="element", name="AdditionalParameter", namespace="##targetNamespace")
	@GenModel(documentation="One additional metadata parameter.")
	!resolve val AdditionalParameterType[1] additionalParameter;
}

@ExtendedMetaData(name="AdditionalParametersType", kind="elementOnly")
class AdditionalParametersType extends AdditionalParametersBaseType {

	@ExtendedMetaData(kind="element", name="AdditionalParameter", namespace="##targetNamespace")
	@GenModel(documentation="One additional metadata parameter.")
	!resolve val AdditionalParameterType[*] additionalParameter1;
}

@ExtendedMetaData(name="AdditionalParameter_._type", kind="elementOnly")
class AdditionalParameterType {

	@ExtendedMetaData(kind="element", name="Name", namespace="##targetNamespace")
	@GenModel(documentation="Name or identifier of this AdditionalParameter,
            unique for this OGC Web Service.")
	!resolve val CodeType[1] name;

	@ExtendedMetaData(kind="element", name="Value", namespace="##targetNamespace")
	@GenModel(documentation="Unordered list of one or more values of this
            AdditionalParameter.")
	!resolve val ecore.EObject[+] value;
}

@ExtendedMetaData(name="AddressType", kind="elementOnly")
@GenModel(documentation="Location of the responsible individual or
      organization.")
class AddressType {

	@ExtendedMetaData(kind="element", name="DeliveryPoint", namespace="##targetNamespace")
	@GenModel(documentation="Address line for the location.")
	!unique attr type.String deliveryPoint;

	@ExtendedMetaData(kind="element", name="City", namespace="##targetNamespace")
	@GenModel(documentation="City of the location.")
	attr type.String city;

	@ExtendedMetaData(kind="element", name="AdministrativeArea", namespace="##targetNamespace")
	@GenModel(documentation="State or province of the location.")
	attr type.String administrativeArea;

	@ExtendedMetaData(kind="element", name="PostalCode", namespace="##targetNamespace")
	@GenModel(documentation="ZIP or other postal code.")
	attr type.String postalCode;

	@ExtendedMetaData(kind="element", name="Country", namespace="##targetNamespace")
	@GenModel(documentation="Country of the physical address.")
	attr type.String country;

	@ExtendedMetaData(kind="element", name="ElectronicMailAddress", namespace="##targetNamespace")
	@GenModel(documentation="Address of the electronic mailbox of the responsible
          organization or individual.")
	!unique attr type.String electronicMailAddress;
}

@ExtendedMetaData(name="AllowedValues_._type", kind="elementOnly")
class AllowedValuesType {

	@ExtendedMetaData(kind="group", name="group:0")
	!unique attr ecore.EFeatureMapEntry[*] group;

	@ExtendedMetaData(kind="element", name="Value", namespace="##targetNamespace", group="#group:0")
	volatile transient derived !resolve val ValueType[*] value;

	@ExtendedMetaData(kind="element", name="Range", namespace="##targetNamespace", group="#group:0")
	volatile transient derived !resolve val RangeType[*] range;
}

@ExtendedMetaData(name="AnyValue_._type", kind="empty")
class AnyValueType {
}

@ExtendedMetaData(name="BasicIdentificationType", kind="elementOnly")
@GenModel(documentation="Basic metadata identifying and describing a set of
      data.")
class BasicIdentificationType extends DescriptionType {

	@ExtendedMetaData(kind="element", name="Identifier", namespace="##targetNamespace")
	@GenModel(documentation="Optional unique identifier or name of this
              dataset.")
	!resolve val CodeType identifier;

	@ExtendedMetaData(kind="group", name="Metadata:group", namespace="##targetNamespace")
	@GenModel(documentation="Optional unordered list of additional metadata
              about this data(set). A list of optional metadata elements for
              this data identification could be specified in the
              Implementation Specification for this service.")
	!unique attr ecore.EFeatureMapEntry[*] metadataGroup;

	@ExtendedMetaData(kind="element", name="Metadata", namespace="##targetNamespace", group="Metadata:group")
	@GenModel(documentation="Optional unordered list of additional metadata
              about this data(set). A list of optional metadata elements for
              this data identification could be specified in the
              Implementation Specification for this service.")
	volatile transient derived !resolve val MetadataType[*] metadata;
}

@ExtendedMetaData(name="BoundingBoxType", kind="elementOnly")
@GenModel(documentation="XML encoded minimum rectangular bounding box (or region)
      parameter, surrounding all the associated data.
This type is adapted from the EnvelopeType of GML 3.1,
      with modified contents and documentation for encoding a MINIMUM size box
      SURROUNDING all associated data.")
class BoundingBoxType {

	@ExtendedMetaData(kind="element", name="LowerCorner", namespace="##targetNamespace")
	@GenModel(documentation="Position of the bounding box corner at which the
          value of each coordinate normally is the algebraic minimum within
          this bounding box. In some cases, this position is normally
          displayed at the top, such as the top left for some image
          coordinates. For more information, see Subclauses 10.2.5 and
          C.13.")
	attr PositionType[1] lowerCorner;

	@ExtendedMetaData(kind="element", name="UpperCorner", namespace="##targetNamespace")
	@GenModel(documentation="Position of the bounding box corner at which the
          value of each coordinate normally is the algebraic maximum within
          this bounding box. In some cases, this position is normally
          displayed at the bottom, such as the bottom right for some image
          coordinates. For more information, see Subclauses 10.2.5 and
          C.13.")
	attr PositionType[1] upperCorner;

	@ExtendedMetaData(kind="attribute", name="crs")
	@GenModel(documentation="Usually references the definition of a CRS, as
        specified in [OGC Topic 2]. Such a CRS definition can be XML encoded
        using the gml:CoordinateReferenceSystemType in [GML 3.1]. For well
        known references, it is not required that a CRS definition exist at
        the location the URI points to. If no anyURI value is included, the
        applicable CRS must be either: a) Specified outside the bounding box,
        but inside a data structure that includes this bounding box, as
        specified for a specific OWS use of this bounding box type. b) Fixed
        and specified in the Implementation Specification for a specific OWS
        use of the bounding box type.")
	attr type.AnyURI crs;

	@ExtendedMetaData(kind="attribute", name="dimensions")
	@GenModel(documentation="The number of dimensions in this CRS (the length of a
        coordinate sequence in this use of the PositionType). This number is
        specified by the CRS definition, but can also be specified
        here.")
	attr type.PositiveInteger dimensions;
}

@ExtendedMetaData(name="CapabilitiesBaseType", kind="elementOnly")
@GenModel(documentation="XML encoded GetCapabilities operation response. This
      document provides clients with service metadata about a specific service
      instance, usually including metadata about the tightly-coupled data
      served. If the server does not implement the updateSequence parameter,
      the server shall always return the complete Capabilities document,
      without the updateSequence parameter. When the server implements the
      updateSequence parameter and the GetCapabilities operation request
      included the updateSequence parameter with the current value, the server
      shall return this element with only the \"version\" and \"updateSequence\"
      attributes. Otherwise, all optional elements shall be included or not
      depending on the actual value of the Contents parameter in the
      GetCapabilities operation request. This base type shall be extended by
      each specific OWS to include the additional contents
      needed.")
class CapabilitiesBaseType {

	@ExtendedMetaData(kind="element", name="ServiceIdentification", namespace="##targetNamespace")
	@GenModel(documentation="General metadata for this specific server. This XML
      Schema of this section shall be the same for all OWS.")
	!resolve val ServiceIdentificationType serviceIdentification;

	@ExtendedMetaData(kind="element", name="ServiceProvider", namespace="##targetNamespace")
	@GenModel(documentation="Metadata about the organization that provides this
      specific service instance or server.")
	!resolve val ServiceProviderType serviceProvider;

	@ExtendedMetaData(kind="element", name="OperationsMetadata", namespace="##targetNamespace")
	@GenModel(documentation="Metadata about the operations and related abilities
      specified by this service and implemented by this server, including the
      URLs for operation requests. The basic contents of this section shall be
      the same for all OWS types, but individual services can add elements
      and/or change the optionality of optional elements.")
	!resolve val OperationsMetadataType operationsMetadata;

	@ExtendedMetaData(kind="element", name="Languages", namespace="##targetNamespace")
	@GenModel(documentation="The list of languages that this service is able to
          fully support. That is, if one of the listed languages is requested
          using the AcceptLanguages parameter in future requests to the
          server, all text strings contained in the response are guaranteed to
          be in that language. This list does not necessarily constitute a
          complete list of all languages that may be (at least partially)
          supported by the server. It only states the languages that are fully
          supported. If a server cannot guarantee full support of any
          particular language, it shall omit it from the list of supported
          languages in the capabilities document.")
	!resolve val LanguagesType languages;

	@ExtendedMetaData(kind="attribute", name="updateSequence")
	@GenModel(documentation="Service metadata document version, having values that
        are \"increased\" whenever any change is made in service metadata
        document. Values are selected by each server, and are always opaque to
        clients. When not supported by server, server shall not return this
        attribute.")
	attr UpdateSequenceType updateSequence;

	@ExtendedMetaData(kind="attribute", name="version")
	attr VersionType[1] version;
}

@ExtendedMetaData(name="CodeType", kind="simple")
@GenModel(documentation="Name or code with an (optional) authority. If the
      codeSpace attribute is present, its value shall reference a dictionary,
      thesaurus, or authority for the name or code, such as the organisation
      who assigned the value, or the dictionary from which it is
      taken.
Type copied from basicTypes.xsd of GML 3 with
      documentation edited, for possible use outside the ServiceIdentification
      section of a service metadata document.")
class CodeType {

	@ExtendedMetaData(name=":0", kind="simple")
	attr type.String value;

	@ExtendedMetaData(kind="attribute", name="codeSpace")
	attr type.AnyURI codeSpace;
}

@ExtendedMetaData(name="ContactType", kind="elementOnly")
@GenModel(documentation="Information required to enable contact with the
      responsible person and/or organization.
For OWS use in the service metadata document, the
      optional hoursOfService and contactInstructions elements were retained,
      as possibly being useful in the ServiceProvider section.")
class ContactType {

	@ExtendedMetaData(kind="element", name="Phone", namespace="##targetNamespace")
	@GenModel(documentation="Telephone numbers at which the organization or
          individual may be contacted.")
	!resolve val TelephoneType phone;

	@ExtendedMetaData(kind="element", name="Address", namespace="##targetNamespace")
	@GenModel(documentation="Physical and email address at which the organization
          or individual may be contacted.")
	!resolve val AddressType address;

	@ExtendedMetaData(kind="element", name="OnlineResource", namespace="##targetNamespace")
	@GenModel(documentation="On-line information that can be used to contact the
          individual or organization. OWS specifics: The xlink:href attribute
          in the xlink:simpleAttrs attribute group shall be used to reference
          this resource. Whenever practical, the xlink:href attribute with
          type anyURI should be a URL from which more contact information can
          be electronically retrieved. The xlink:title attribute with type
          \"string\" can be used to name this set of information. The other
          attributes in the xlink:simpleAttrs attribute group should not be
          used.")
	!resolve val OnlineResourceType onlineResource;

	@ExtendedMetaData(kind="element", name="HoursOfService", namespace="##targetNamespace")
	@GenModel(documentation="Time period (including time zone) when individuals
          can contact the organization or individual.")
	attr type.String hoursOfService;

	@ExtendedMetaData(kind="element", name="ContactInstructions", namespace="##targetNamespace")
	@GenModel(documentation="Supplemental instructions on how or when to contact
          the individual or organization.")
	attr type.String contactInstructions;
}

@ExtendedMetaData(name="ContentsBaseType", kind="elementOnly")
@GenModel(documentation="Contents of typical Contents section of an OWS service
      metadata (Capabilities) document. This type shall be extended and/or
      restricted if needed for specific OWS use to include the specific
      metadata needed.")
class ContentsBaseType {

	@ExtendedMetaData(kind="element", name="DatasetDescriptionSummary", namespace="##targetNamespace")
	@GenModel(documentation="Unordered set of summary descriptions for the
          datasets available from this OWS server. This set shall be included
          unless another source is referenced and all this metadata is
          available from that source.")
	!resolve val DatasetDescriptionSummaryBaseType[*] datasetDescriptionSummary;

	@ExtendedMetaData(kind="element", name="OtherSource", namespace="##targetNamespace")
	@GenModel(documentation="Unordered set of references to other sources of
          metadata describing the coverage offerings available from this
          server.")
	!resolve val MetadataType[*] otherSource;
}

@ExtendedMetaData(name="DatasetDescriptionSummaryBaseType", kind="elementOnly")
@GenModel(documentation="Typical dataset metadata in typical Contents section of
      an OWS service metadata (Capabilities) document. This type shall be
      extended and/or restricted if needed for specific OWS use, to include
      the specific Dataset description metadata needed.")
class DatasetDescriptionSummaryBaseType extends DescriptionType {

	@ExtendedMetaData(kind="element", name="WGS84BoundingBox", namespace="##targetNamespace")
	@GenModel(documentation="Unordered list of zero or more minimum bounding
              rectangles surrounding coverage data, using the WGS 84 CRS with
              decimal degrees and longitude before latitude. If no WGS 84
              bounding box is recorded for a coverage, any such bounding boxes
              recorded for a higher level in a hierarchy of datasets shall
              apply to this coverage. If WGS 84 bounding box(es) are recorded
              for a coverage, any such bounding boxes recorded for a higher
              level in a hierarchy of datasets shall be ignored. For each
              lowest-level coverage in a hierarchy, at least one applicable
              WGS84BoundingBox shall be either recorded or inherited, to
              simplify searching for datasets that might overlap a specified
              region. If multiple WGS 84 bounding boxes are included, this
              shall be interpreted as the union of the areas of these bounding
              boxes.")
	!resolve val WGS84BoundingBoxType[*] wGS84BoundingBox;

	@ExtendedMetaData(kind="element", name="Identifier", namespace="##targetNamespace")
	@GenModel(documentation="Unambiguous identifier or name of this coverage,
              unique for this server.")
	!resolve val CodeType[1] identifier;

	@ExtendedMetaData(kind="group", name="BoundingBox:group", namespace="##targetNamespace")
	@GenModel(documentation="Unordered list of zero or more minimum bounding
              rectangles surrounding coverage data, in AvailableCRSs. Zero or
              more BoundingBoxes are allowed in addition to one or more
              WGS84BoundingBoxes to allow more precise specification of the
              Dataset area in AvailableCRSs. These Bounding Boxes shall not
              use any CRS not listed as an AvailableCRS. However, an
              AvailableCRS can be listed without a corresponding Bounding Box.
              If no such bounding box is recorded for a coverage, any such
              bounding boxes recorded for a higher level in a hierarchy of
              datasets shall apply to this coverage. If such bounding box(es)
              are recorded for a coverage, any such bounding boxes recorded
              for a higher level in a hierarchy of datasets shall be ignored.
              If multiple bounding boxes are included with the same CRS, this
              shall be interpreted as the union of the areas of these bounding
              boxes.")
	!unique attr ecore.EFeatureMapEntry[*] boundingBoxGroup;

	@ExtendedMetaData(kind="element", name="BoundingBox", namespace="##targetNamespace", group="BoundingBox:group")
	@GenModel(documentation="Unordered list of zero or more minimum bounding
              rectangles surrounding coverage data, in AvailableCRSs. Zero or
              more BoundingBoxes are allowed in addition to one or more
              WGS84BoundingBoxes to allow more precise specification of the
              Dataset area in AvailableCRSs. These Bounding Boxes shall not
              use any CRS not listed as an AvailableCRS. However, an
              AvailableCRS can be listed without a corresponding Bounding Box.
              If no such bounding box is recorded for a coverage, any such
              bounding boxes recorded for a higher level in a hierarchy of
              datasets shall apply to this coverage. If such bounding box(es)
              are recorded for a coverage, any such bounding boxes recorded
              for a higher level in a hierarchy of datasets shall be ignored.
              If multiple bounding boxes are included with the same CRS, this
              shall be interpreted as the union of the areas of these bounding
              boxes.")
	volatile transient derived !resolve val BoundingBoxType[*] boundingBox;

	@ExtendedMetaData(kind="group", name="Metadata:group", namespace="##targetNamespace")
	@GenModel(documentation="Optional unordered list of additional metadata
              about this dataset. A list of optional metadata elements for
              this dataset description could be specified in the
              Implementation Specification for this service.")
	!unique attr ecore.EFeatureMapEntry[*] metadataGroup;

	@ExtendedMetaData(kind="element", name="Metadata", namespace="##targetNamespace", group="Metadata:group")
	@GenModel(documentation="Optional unordered list of additional metadata
              about this dataset. A list of optional metadata elements for
              this dataset description could be specified in the
              Implementation Specification for this service.")
	volatile transient derived !resolve val MetadataType[*] metadata;

	@ExtendedMetaData(kind="element", name="DatasetDescriptionSummary", namespace="##targetNamespace")
	@GenModel(documentation="Metadata describing zero or more unordered
              subsidiary datasets available from this server.")
	!resolve val DatasetDescriptionSummaryBaseType[*] datasetDescriptionSummary;
}

@ExtendedMetaData(name="DCP_._type", kind="elementOnly")
class DCPType {

	@ExtendedMetaData(kind="element", name="HTTP", namespace="##targetNamespace")
	@GenModel(documentation="Connect point URLs for the HTTP Distributed Computing
      Platform (DCP). Normally, only one Get and/or one Post is included in
      this element. More than one Get and/or Post is allowed to support
      including alternative URLs for uses such as load balancing or
      backup.")
	!resolve val HTTPType hTTP;
}

@ExtendedMetaData(name="DescriptionType", kind="elementOnly")
@GenModel(documentation="Human-readable descriptive information for the object it
      is included within. This type shall be extended if needed for specific
      OWS use to include additional metadata for each type of information.
      This type shall not be restricted for a specific OWS to change the
      multiplicity (or optionality) of some elements. If the xml:lang
      attribute is not included in a Title, Abstract or Keyword element, then
      no language is specified for that element unless specified by another
      means. All Title, Abstract and Keyword elements in the same Description
      that share the same xml:lang attribute value represent the description
      of the parent object in that language. Multiple Title or Abstract
      elements shall not exist in the same Description with the same xml:lang
      attribute value unless otherwise specified.")
class DescriptionType {

	@ExtendedMetaData(kind="element", name="Title", namespace="##targetNamespace")
	@GenModel(documentation="Title of this resource, normally used for display to
      humans.")
	!resolve val LanguageStringType[*] title;

	@ExtendedMetaData(kind="element", name="Abstract", namespace="##targetNamespace")
	@GenModel(documentation="Brief narrative description of this resource, normally
      used for display to humans.")
	!resolve val LanguageStringType[*] ~abstract;

	@ExtendedMetaData(kind="element", name="Keywords", namespace="##targetNamespace")
	!resolve val KeywordsType[*] keywords;
}

@ExtendedMetaData(name="", kind="mixed")
class DocumentRoot {

	@ExtendedMetaData(kind="elementWildcard", name=":mixed")
	!unique attr ecore.EFeatureMapEntry[*] mixed;

	@ExtendedMetaData(kind="attribute", name="xmlns:prefix")
	transient !resolve val ecore.EStringToStringMapEntry[*] xMLNSPrefixMap;

	@ExtendedMetaData(kind="attribute", name="xsi:schemaLocation")
	transient !resolve val ecore.EStringToStringMapEntry[*] xSISchemaLocation;

	@ExtendedMetaData(kind="element", name="Abstract", namespace="##targetNamespace")
	@GenModel(documentation="Brief narrative description of this resource, normally
      used for display to humans.")
	volatile transient derived !resolve val LanguageStringType[0..?] ~abstract;

	@ExtendedMetaData(kind="element", name="AbstractMetaData", namespace="##targetNamespace")
	@GenModel(documentation="Abstract element containing more metadata about the
      element that includes the containing \"metadata\" element. A specific
      server implementation, or an Implementation Specification, can define
      concrete elements in the AbstractMetaData substitution
      group.")
	readonly volatile transient derived !resolve val ecore.EObject[0..?] abstractMetaData;

	@ExtendedMetaData(kind="element", name="AbstractReferenceBase", namespace="##targetNamespace")
	readonly volatile transient derived !resolve val AbstractReferenceBaseType[0..?] abstractReferenceBase;

	@ExtendedMetaData(kind="element", name="AccessConstraints", namespace="##targetNamespace")
	@GenModel(documentation="Access constraint applied to assure the protection of
      privacy or intellectual property, or any other restrictions on
      retrieving or using data from or otherwise using this server. The
      reserved value NONE (case insensitive) shall be used to mean no access
      constraints are imposed.")
	!unique volatile transient derived attr type.String[0..?] accessConstraints;

	@ExtendedMetaData(kind="element", name="AdditionalParameter", namespace="##targetNamespace", affiliation="AbstractMetaData")
	@GenModel(documentation="One additional metadata parameter.")
	volatile transient derived !resolve val AdditionalParameterType[0..?] additionalParameter;

	@ExtendedMetaData(kind="element", name="AdditionalParameters", namespace="##targetNamespace", affiliation="Metadata")
	@GenModel(documentation="Unordered list of one or more
      AdditionalParameters.")
	volatile transient derived !resolve val AdditionalParametersType[0..?] additionalParameters;

	@ExtendedMetaData(kind="element", name="Metadata", namespace="##targetNamespace")
	volatile transient derived !resolve val MetadataType[0..?] metadata;

	@ExtendedMetaData(kind="element", name="AllowedValues", namespace="##targetNamespace")
	@GenModel(documentation="List of all the valid values and/or ranges of values for
      this quantity. For numeric quantities, signed values should be ordered
      from negative infinity to positive infinity.")
	volatile transient derived !resolve val AllowedValuesType[0..?] allowedValues;

	@ExtendedMetaData(kind="element", name="AnyValue", namespace="##targetNamespace")
	@GenModel(documentation="Specifies that any value is allowed for this
      parameter.")
	volatile transient derived !resolve val AnyValueType[0..?] anyValue;

	@ExtendedMetaData(kind="element", name="AvailableCRS", namespace="##targetNamespace")
	!unique volatile transient derived attr type.AnyURI[0..?] availableCRS;

	@ExtendedMetaData(kind="element", name="BoundingBox", namespace="##targetNamespace")
	volatile transient derived !resolve val BoundingBoxType[0..?] boundingBox;

	@ExtendedMetaData(kind="element", name="ContactInfo", namespace="##targetNamespace")
	@GenModel(documentation="Address of the responsible party.")
	volatile transient derived !resolve val ContactType[0..?] contactInfo;

	@ExtendedMetaData(kind="element", name="DatasetDescriptionSummary", namespace="##targetNamespace")
	volatile transient derived !resolve val DatasetDescriptionSummaryBaseType[0..?] datasetDescriptionSummary;

	@ExtendedMetaData(kind="element", name="DataType", namespace="##targetNamespace")
	@GenModel(documentation="Definition of the data type of this set of values. In
      this case, the xlink:href attribute can reference a URN for a well-known
      data type. For example, such a URN could be a data type identification
      URN defined in the \"ogc\" URN namespace.")
	volatile transient derived !resolve val DomainMetadataType[0..?] dataType;

	@ExtendedMetaData(kind="element", name="DCP", namespace="##targetNamespace")
	@GenModel(documentation="Information for one distributed Computing Platform (DCP)
      supported for this operation. At present, only the HTTP DCP is defined,
      so this element only includes the HTTP element.")
	volatile transient derived !resolve val DCPType[0..?] dCP;

	@ExtendedMetaData(kind="element", name="DefaultValue", namespace="##targetNamespace")
	@GenModel(documentation="The default value for a quantity for which multiple
      values are allowed.")
	volatile transient derived !resolve val ValueType[0..?] defaultValue;

	@ExtendedMetaData(kind="element", name="Exception", namespace="##targetNamespace")
	volatile transient derived !resolve val ExceptionType[0..?] exception;

	@ExtendedMetaData(kind="element", name="ExceptionReport", namespace="##targetNamespace")
	@GenModel(documentation="Report message returned to the client that requested any
      OWS operation when the server detects an error while processing that
      operation request.")
	volatile transient derived !resolve val ExceptionReportType[0..?] exceptionReport;

	@ExtendedMetaData(kind="element", name="ExtendedCapabilities", namespace="##targetNamespace")
	@GenModel(documentation="Individual software vendors and servers can use this
      element to provide metadata about any additional server
      abilities.")
	volatile transient derived !resolve val ecore.EObject[0..?] extendedCapabilities;

	@ExtendedMetaData(kind="element", name="Fees", namespace="##targetNamespace")
	@GenModel(documentation="Fees and terms for retrieving data from or otherwise
      using this server, including the monetary units as specified in ISO
      4217. The reserved value NONE (case insensitive) shall be used to mean
      no fees or terms.")
	!unique volatile transient derived attr type.String[0..?] fees;

	@ExtendedMetaData(kind="element", name="GetCapabilities", namespace="##targetNamespace")
	volatile transient derived !resolve val GetCapabilitiesType[0..?] getCapabilities;

	@ExtendedMetaData(kind="element", name="GetResourceByID", namespace="##targetNamespace")
	volatile transient derived !resolve val GetResourceByIdType[0..?] getResourceByID;

	@ExtendedMetaData(kind="element", name="HTTP", namespace="##targetNamespace")
	@GenModel(documentation="Connect point URLs for the HTTP Distributed Computing
      Platform (DCP). Normally, only one Get and/or one Post is included in
      this element. More than one Get and/or Post is allowed to support
      including alternative URLs for uses such as load balancing or
      backup.")
	volatile transient derived !resolve val HTTPType[0..?] hTTP;

	@ExtendedMetaData(kind="element", name="Identifier", namespace="##targetNamespace")
	@GenModel(documentation="Unique identifier or name of this
      dataset.")
	volatile transient derived !resolve val CodeType[0..?] identifier;

	@ExtendedMetaData(kind="element", name="IndividualName", namespace="##targetNamespace")
	@GenModel(documentation="Name of the responsible person: surname, given name,
      title separated by a delimiter.")
	!unique volatile transient derived attr type.String[0..?] individualName;

	@ExtendedMetaData(kind="element", name="InputData", namespace="##targetNamespace")
	@GenModel(documentation="Input data in a XML-encoded OWS operation request,
      allowing including multiple data items with each data item either
      included or referenced. This InputData element, or an element using the
      ManifestType with a more-specific element name (TBR), shall be used
      whenever applicable within XML-encoded OWS operation
      requests.")
	volatile transient derived !resolve val ManifestType[0..?] inputData;

	@ExtendedMetaData(kind="element", name="Keywords", namespace="##targetNamespace")
	volatile transient derived !resolve val KeywordsType[0..?] keywords;

	@ExtendedMetaData(kind="element", name="Language", namespace="##targetNamespace")
	@GenModel(documentation="Identifier of a language used by the data(set) contents.
      This language identifier shall be as specified in IETF RFC 4646. The
      language tags shall be either complete 5 character codes (e.g. \"en-CA\"),
      or abbreviated 2 character codes (e.g. \"en\"). In addition to the RFC
      4646 codes, the server shall support the single special value \"
\" which
      is used to indicate \"any language\".")
	!unique volatile transient derived attr type.Language[0..?] language;

	@ExtendedMetaData(kind="element", name="Manifest", namespace="##targetNamespace")
	volatile transient derived !resolve val ManifestType[0..?] manifest;

	@ExtendedMetaData(kind="element", name="MaximumValue", namespace="##targetNamespace")
	@GenModel(documentation="Maximum value of this numeric parameter.")
	volatile transient derived !resolve val ValueType[0..?] maximumValue;

	@ExtendedMetaData(kind="element", name="Meaning", namespace="##targetNamespace")
	@GenModel(documentation="Definition of the meaning or semantics of this set of
      values. This Meaning can provide more specific, complete, precise,
      machine accessible, and machine understandable semantics about this
      quantity, relative to other available semantic information. For example,
      other semantic information is often provided in \"documentation\" elements
      in XML Schemas or \"description\" elements in GML objects.")
	volatile transient derived !resolve val DomainMetadataType[0..?] meaning;

	@ExtendedMetaData(kind="element", name="MinimumValue", namespace="##targetNamespace")
	@GenModel(documentation="Minimum value of this numeric parameter.")
	volatile transient derived !resolve val ValueType[0..?] minimumValue;

	@ExtendedMetaData(kind="element", name="nilValue", namespace="##targetNamespace")
	volatile transient derived !resolve val NilValueType[0..?] nilValue;

	@ExtendedMetaData(kind="element", name="NoValues", namespace="##targetNamespace")
	@GenModel(documentation="Specifies that no values are allowed for this parameter
      or quantity.")
	volatile transient derived !resolve val NoValuesType[0..?] noValues;

	@ExtendedMetaData(kind="element", name="Operation", namespace="##targetNamespace")
	@GenModel(documentation="Metadata for one operation that this server
      implements.")
	volatile transient derived !resolve val OperationType[0..?] operation;

	@ExtendedMetaData(kind="element", name="OperationResponse", namespace="##targetNamespace")
	@GenModel(documentation="Response from an OWS operation, allowing including
      multiple output data items with each item either included or referenced.
      This OperationResponse element, or an element using the ManifestType
      with a more specific element name, shall be used whenever applicable for
      responses from OWS operations.
This element is specified for use where the ManifestType
      contents are needed for an operation response, but the Manifest element
      name is not fully applicable. This element or the ManifestType shall be
      used instead of using the ows:ReferenceType proposed in OGC
      04-105.")
	volatile transient derived !resolve val ManifestType[0..?] operationResponse;

	@ExtendedMetaData(kind="element", name="OperationsMetadata", namespace="##targetNamespace")
	@GenModel(documentation="Metadata about the operations and related abilities
      specified by this service and implemented by this server, including the
      URLs for operation requests. The basic contents of this section shall be
      the same for all OWS types, but individual services can add elements
      and/or change the optionality of optional elements.")
	volatile transient derived !resolve val OperationsMetadataType[0..?] operationsMetadata;

	@ExtendedMetaData(kind="element", name="OrganisationName", namespace="##targetNamespace")
	@GenModel(documentation="Name of the responsible organization.")
	!unique volatile transient derived attr type.String[0..?] organisationName;

	@ExtendedMetaData(kind="element", name="OtherSource", namespace="##targetNamespace")
	@GenModel(documentation="Reference to a source of metadata describing coverage
      offerings available from this server. This parameter can reference a
      catalogue server from which dataset metadata is available. This ability
      is expected to be used by servers with thousands or millions of
      datasets, for which searching a catalogue is more feasible than fetching
      a long Capabilities XML document. When no DatasetDescriptionSummaries
      are included, and one or more catalogue servers are referenced, this set
      of catalogues shall contain current metadata summaries for all the
      datasets currently available from this OWS server, with the metadata for
      each such dataset referencing this OWS server.")
	volatile transient derived !resolve val MetadataType[0..?] otherSource;

	@ExtendedMetaData(kind="element", name="OutputFormat", namespace="##targetNamespace")
	@GenModel(documentation="Reference to a format in which this data can be encoded
      and transferred. More specific parameter names should be used by
      specific OWS specifications wherever applicable. More than one such
      parameter can be included for different purposes.")
	!unique volatile transient derived attr MimeType[0..?] outputFormat;

	@ExtendedMetaData(kind="element", name="PointOfContact", namespace="##targetNamespace")
	@GenModel(documentation="Identification of, and means of communication with,
      person(s) responsible for the resource(s).
For OWS use in the ServiceProvider section of a service
      metadata document, the optional organizationName element was removed,
      since this type is always used with the ProviderName element which
      provides that information. The optional individualName element was made
      mandatory, since either the organizationName or individualName element
      is mandatory. The mandatory \"role\" element was changed to optional,
      since no clear use of this information is known in the ServiceProvider
      section.")
	volatile transient derived !resolve val ResponsiblePartyType[0..?] pointOfContact;

	@ExtendedMetaData(kind="element", name="PositionName", namespace="##targetNamespace")
	@GenModel(documentation="Role or position of the responsible
      person.")
	!unique volatile transient derived attr type.String[0..?] positionName;

	@ExtendedMetaData(kind="element", name="Range", namespace="##targetNamespace")
	volatile transient derived !resolve val RangeType[0..?] range;

	@ExtendedMetaData(kind="element", name="Reference", namespace="##targetNamespace", affiliation="AbstractReferenceBase")
	volatile transient derived !resolve val ReferenceType[0..?] reference;

	@ExtendedMetaData(kind="element", name="ReferenceGroup", namespace="##targetNamespace")
	volatile transient derived !resolve val ReferenceGroupType[0..?] referenceGroup;

	@ExtendedMetaData(kind="element", name="ReferenceSystem", namespace="##targetNamespace")
	@GenModel(documentation="Definition of the reference system used by this set of
      values, including the unit of measure whenever applicable (as is
      normal). In this case, the xlink:href attribute can reference a URN for
      a well-known reference system, such as for a coordinate reference system
      (CRS). For example, such a URN could be a CRS identification URN defined
      in the \"ogc\" URN namespace.")
	volatile transient derived !resolve val DomainMetadataType[0..?] referenceSystem;

	@ExtendedMetaData(kind="element", name="Resource", namespace="##targetNamespace")
	@GenModel(documentation="XML encoded GetResourceByID operation response. The
      complexType used by this element shall be specified by each specific
      OWS.")
	volatile transient derived !resolve val ecore.EObject[0..?] resource;

	@ExtendedMetaData(kind="element", name="Role", namespace="##targetNamespace")
	@GenModel(documentation="Function performed by the responsible party. Possible
      values of this Role shall include the values and the meanings listed in
      Subclause B.5.5 of ISO 19115:2003.")
	volatile transient derived !resolve val CodeType[0..?] role;

	@ExtendedMetaData(kind="element", name="ServiceIdentification", namespace="##targetNamespace")
	@GenModel(documentation="General metadata for this specific server. This XML
      Schema of this section shall be the same for all OWS.")
	volatile transient derived !resolve val ServiceIdentificationType[0..?] serviceIdentification;

	@ExtendedMetaData(kind="element", name="ServiceProvider", namespace="##targetNamespace")
	@GenModel(documentation="Metadata about the organization that provides this
      specific service instance or server.")
	volatile transient derived !resolve val ServiceProviderType[0..?] serviceProvider;

	@ExtendedMetaData(kind="element", name="ServiceReference", namespace="##targetNamespace", affiliation="Reference")
	volatile transient derived !resolve val ServiceReferenceType[0..?] serviceReference;

	@ExtendedMetaData(kind="element", name="Spacing", namespace="##targetNamespace")
	@GenModel(documentation="The regular distance or spacing between the allowed
      values in a range.")
	volatile transient derived !resolve val ValueType[0..?] spacing;

	@ExtendedMetaData(kind="element", name="SupportedCRS", namespace="##targetNamespace", affiliation="AvailableCRS")
	@GenModel(documentation="Coordinate reference system in which data from this
      data(set) or resource is available or supported. More specific parameter
      names should be used by specific OWS specifications wherever applicable.
      More than one such parameter can be included for different
      purposes.")
	!unique volatile transient derived attr type.AnyURI[0..?] supportedCRS;

	@ExtendedMetaData(kind="element", name="Title", namespace="##targetNamespace")
	@GenModel(documentation="Title of this resource, normally used for display to
      humans.")
	volatile transient derived !resolve val LanguageStringType[0..?] title;

	@ExtendedMetaData(kind="element", name="UOM", namespace="##targetNamespace")
	@GenModel(documentation="Definition of the unit of measure of this set of values.
      In this case, the xlink:href attribute can reference a URN for a
      well-known unit of measure (uom). For example, such a URN could be a UOM
      identification URN defined in the \"ogc\" URN namespace.")
	volatile transient derived !resolve val DomainMetadataType[0..?] uOM;

	@ExtendedMetaData(kind="element", name="Value", namespace="##targetNamespace")
	volatile transient derived !resolve val ValueType[0..?] value;

	@ExtendedMetaData(kind="element", name="ValuesReference", namespace="##targetNamespace")
	@GenModel(documentation="Reference to externally specified list of all the valid
      values and/or ranges of values for this quantity. (Informative: This
      element was simplified from the metaDataProperty element in GML
      3.0.)")
	volatile transient derived !resolve val ValuesReferenceType[0..?] valuesReference;

	@ExtendedMetaData(kind="element", name="WGS84BoundingBox", namespace="##targetNamespace", affiliation="BoundingBox")
	volatile transient derived !resolve val WGS84BoundingBoxType[0..?] wGS84BoundingBox;

	@ExtendedMetaData(kind="attribute", name="rangeClosure", namespace="##targetNamespace")
	@GenModel(documentation="Specifies which of the minimum and maximum values are
      included in the range. Note that plus and minus infinity are considered
      closed bounds.")
	unsettable attr RangeClosureType rangeClosure = "closed";

	@ExtendedMetaData(kind="attribute", name="reference", namespace="##targetNamespace")
	@GenModel(documentation="Reference to data or metadata recorded elsewhere, either
      external to this XML document or within it. Whenever practical, this
      attribute should be a URL from which this metadata can be electronically
      retrieved. Alternately, this attribute can reference a URN for
      well-known metadata. For example, such a URN could be a URN defined in
      the \"ogc\" URN namespace.")
	attr type.AnyURI reference1;
}

@ExtendedMetaData(name="DomainMetadataType", kind="simple")
@GenModel(documentation="References metadata about a quantity, and provides a name
      for this metadata. (Informative: This element was simplified from the
      metaDataProperty element in GML 3.0.)")
class DomainMetadataType {

	@ExtendedMetaData(name=":0", kind="simple")
	@GenModel(documentation="Human-readable name of the metadata described by
          associated referenced document.")
	attr type.String value;

	@ExtendedMetaData(kind="attribute", name="reference", namespace="##targetNamespace")
	@GenModel(documentation="Reference to data or metadata recorded elsewhere, either
      external to this XML document or within it. Whenever practical, this
      attribute should be a URL from which this metadata can be electronically
      retrieved. Alternately, this attribute can reference a URN for
      well-known metadata. For example, such a URN could be a URN defined in
      the \"ogc\" URN namespace.")
	attr type.AnyURI reference;
}

@ExtendedMetaData(name="DomainType", kind="elementOnly")
@GenModel(documentation="Valid domain (or allowed set of values) of one quantity,
      with its name or identifier.")
class DomainType extends UnNamedDomainType {

	@ExtendedMetaData(kind="attribute", name="name")
	@GenModel(documentation="Name or identifier of this
            quantity.")
	attr type.String[1] name;
}

@ExtendedMetaData(name="ExceptionReport_._type", kind="elementOnly")
class ExceptionReportType {

	@ExtendedMetaData(kind="element", name="Exception", namespace="##targetNamespace")
	@GenModel(documentation="Unordered list of one or more Exception elements
            that each describes an error. These Exception elements shall be
            interpreted by clients as being independent of one another (not
            hierarchical).")
	!resolve val ExceptionType[+] exception;

	@ExtendedMetaData(kind="attribute", name="lang", namespace="http://www.w3.org/XML/1998/namespace")
	@GenModel(documentation="Identifier of the language used by all included
          exception text values. These language identifiers shall be as
          specified in IETF RFC 4646. When this attribute is omitted, the
          language used is not identified.")
	attr namespace.LangType lang;

	@ExtendedMetaData(kind="attribute", name="version")
	@GenModel(documentation="Specification version for OWS operation. The string
          value shall contain one x.y.z \"version\" value (e.g., \"2.1.3\"). A
          version number shall contain three non-negative integers separated
          by decimal points, in the form \"x.y.z\". The integers y and z shall
          not exceed 99. Each version shall be for the Implementation
          Specification (document) and the associated XML Schemas to which
          requested operations will conform. An Implementation Specification
          version normally specifies XML Schemas against which an XML encoded
          operation response must conform and should be validated. See Version
          negotiation subclause for more information.")
	attr VersionType1[1] version;
}

@ExtendedMetaData(name="ExceptionType", kind="elementOnly")
@GenModel(documentation="An Exception element describes one detected error that a
      server chooses to convey to the client.")
class ExceptionType {

	@ExtendedMetaData(kind="element", name="ExceptionText", namespace="##targetNamespace")
	@GenModel(documentation="Ordered sequence of text strings that describe this
          specific exception or error. The contents of these strings are left
          open to definition by each server implementation. A server is
          strongly encouraged to include at least one ExceptionText value, to
          provide more information about the detected error than provided by
          the exceptionCode. When included, multiple ExceptionText values
          shall provide hierarchical information about one detected error,
          with the most significant information listed first.")
	!unique attr type.String[*] exceptionText;

	@ExtendedMetaData(kind="attribute", name="exceptionCode")
	@GenModel(documentation="A code representing the type of this exception, which
        shall be selected from a set of exceptionCode values specified for the
        specific service operation and server.")
	attr type.String[1] exceptionCode;

	@ExtendedMetaData(kind="attribute", name="locator")
	@GenModel(documentation="When included, this locator shall indicate to the
        client where an exception was encountered in servicing the client's
        operation request. This locator should be included whenever meaningful
        information can be provided by the server. The contents of this
        locator will depend on the specific exceptionCode and OWS service, and
        shall be specified in the OWS Implementation
        Specification.")
	attr type.String locator;
}

@ExtendedMetaData(name="GetCapabilitiesType", kind="elementOnly")
@GenModel(documentation="XML encoded GetCapabilities operation request. This
      operation allows clients to retrieve service metadata about a specific
      service instance. In this XML encoding, no \"request\" parameter is
      included, since the element name specifies the specific operation. This
      base type shall be extended by each specific OWS to include the
      additional required \"service\" attribute, with the correct value for that
      OWS.")
class GetCapabilitiesType {

	@ExtendedMetaData(kind="element", name="AcceptVersions", namespace="##targetNamespace")
	@GenModel(documentation="When omitted, server shall return latest supported
          version.")
	!resolve val AcceptVersionsType acceptVersions;

	@ExtendedMetaData(kind="element", name="Sections", namespace="##targetNamespace")
	@GenModel(documentation="When omitted or not supported by server, server shall
          return complete service metadata (Capabilities)
          document.")
	!resolve val SectionsType sections;

	@ExtendedMetaData(kind="element", name="AcceptFormats", namespace="##targetNamespace")
	@GenModel(documentation="When omitted or not supported by server, server shall
          return service metadata document using the MIME type
          \"text/xml\".")
	!resolve val AcceptFormatsType acceptFormats;

	@ExtendedMetaData(kind="element", name="AcceptLanguages", namespace="##targetNamespace")
	@GenModel(documentation="Ordered list of languages desired by the client for
          all human readable text in the response, in order of preference. For
          every element, the first matching language available from the server
          shall be present in the response.")
	!resolve val AcceptLanguagesType acceptLanguages;

	@ExtendedMetaData(kind="attribute", name="updateSequence")
	@GenModel(documentation="When omitted or not supported by server, server shall
        return latest complete service metadata document.")
	attr UpdateSequenceType updateSequence;
	attr type.String baseUrl;
}

@ExtendedMetaData(name="GetResourceByIdType", kind="elementOnly")
@GenModel(documentation="Request to a service to perform the GetResourceByID
      operation. This operation allows a client to retrieve one or more
      identified resources, including datasets and resources that describe
      datasets or parameters. In this XML encoding, no \"request\" parameter is
      included, since the element name specifies the specific
      operation.")
class GetResourceByIdType {

	@ExtendedMetaData(kind="element", name="ResourceID", namespace="##targetNamespace")
	@GenModel(documentation="Unordered list of zero or more resource identifiers.
          These identifiers can be listed in the Contents section of the
          service metadata (Capabilities) document. For more information on
          this parameter, see Subclause 9.4.2.1 of the OWS Common
          specification.")
	!unique attr type.AnyURI resourceID;

	@ExtendedMetaData(kind="element", name="OutputFormat", namespace="##targetNamespace")
	@GenModel(documentation="Optional reference to the data format to be used for
          response to this operation request. This element shall be included
          when multiple output formats are available for the selected
          resource(s), and the client desires a format other than the
          specified default, if any.")
	attr MimeType outputFormat;

	@ExtendedMetaData(kind="attribute", name="service")
	attr ServiceType[1] service;

	@ExtendedMetaData(kind="attribute", name="version")
	attr VersionType[1] version;
}

@ExtendedMetaData(name="HTTP_._type", kind="elementOnly")
class HTTPType {

	@ExtendedMetaData(kind="group", name="group:0")
	!unique attr ecore.EFeatureMapEntry[*] group;

	@ExtendedMetaData(kind="element", name="Get", namespace="##targetNamespace", group="#group:0")
	@GenModel(documentation="Connect point URL prefix and any constraints for
            the HTTP \"Get\" request method for this operation
            request.")
	volatile transient derived !resolve val RequestMethodType[*] get;

	@ExtendedMetaData(kind="element", name="Post", namespace="##targetNamespace", group="#group:0")
	@GenModel(documentation="Connect point URL and any constraints for the HTTP
            \"Post\" request method for this operation request.")
	volatile transient derived !resolve val RequestMethodType[*] post;
}

@ExtendedMetaData(name="IdentificationType", kind="elementOnly")
@GenModel(documentation="Extended metadata identifying and describing a set of
      data. This type shall be extended if needed for each specific OWS to
      include additional metadata for each type of dataset. If needed, this
      type should first be restricted for each specific OWS to change the
      multiplicity (or optionality) of some elements.")
class IdentificationType extends BasicIdentificationType {

	@ExtendedMetaData(kind="group", name="BoundingBox:group", namespace="##targetNamespace")
	@GenModel(documentation="Unordered list of zero or more bounding boxes
              whose union describes the extent of this
              dataset.")
	!unique attr ecore.EFeatureMapEntry[*] boundingBoxGroup;

	@ExtendedMetaData(kind="element", name="BoundingBox", namespace="##targetNamespace", group="BoundingBox:group")
	@GenModel(documentation="Unordered list of zero or more bounding boxes
              whose union describes the extent of this
              dataset.")
	volatile transient derived !resolve val BoundingBoxType[*] boundingBox;

	@ExtendedMetaData(kind="element", name="OutputFormat", namespace="##targetNamespace")
	@GenModel(documentation="Unordered list of zero or more references to data
              formats supported for server outputs.")
	!unique attr MimeType outputFormat;

	@ExtendedMetaData(kind="group", name="AvailableCRS:group", namespace="##targetNamespace")
	@GenModel(documentation="Unordered list of zero or more available
              coordinate reference systems.")
	!unique attr ecore.EFeatureMapEntry[*] availableCRSGroup;

	@ExtendedMetaData(kind="element", name="AvailableCRS", namespace="##targetNamespace", group="AvailableCRS:group")
	@GenModel(documentation="Unordered list of zero or more available
              coordinate reference systems.")
	!unique volatile transient derived attr type.AnyURI availableCRS;
}

@ExtendedMetaData(name="KeywordsType", kind="elementOnly")
@GenModel(documentation="Unordered list of one or more commonly used or formalised
      word(s) or phrase(s) used to describe the subject. When needed, the
      optional \"type\" can name the type of the associated list of keywords
      that shall all have the same type. Also when needed, the codeSpace
      attribute of that \"type\" can reference the type name authority and/or
      thesaurus. If the xml:lang attribute is not included in a Keyword
      element, then no language is specified for that element unless specified
      by another means. All Keyword elements in the same Keywords element that
      share the same xml:lang attribute value represent different keywords in
      that language.
For OWS use, the optional thesaurusName element was
      omitted as being complex information that could be referenced by the
      codeSpace attribute of the Type element.")
class KeywordsType {

	@ExtendedMetaData(kind="element", name="Keyword", namespace="##targetNamespace")
	!resolve val LanguageStringType[+] keyword;

	@ExtendedMetaData(kind="element", name="Type", namespace="##targetNamespace")
	!resolve val CodeType type;
}

@ExtendedMetaData(name="LanguageStringType", kind="simple")
@GenModel(documentation="Text string with the language of the string identified as
      recommended in the XML 1.0 W3C Recommendation, section
      2.12.")
class LanguageStringType {

	@ExtendedMetaData(name=":0", kind="simple")
	attr type.String value;

	@ExtendedMetaData(kind="attribute", name="lang", namespace="http://www.w3.org/XML/1998/namespace")
	@GenModel(documentation="
    <div xmlns=\"http://www.w3.org/1999/xhtml\">

      <h3>lang (as an attribute name)</h3>
      <p>
       denotes an attribute whose value
       is a language code for the natural language of the content of
       any element; its value is inherited.  This name is reserved
       by virtue of its definition in the XML specification.</p>

    </div>
    <div xmlns=\"http://www.w3.org/1999/xhtml\">
     <h4>Notes</h4>
     <p>
      Attempting to install the relevant ISO 2- and 3-letter
      codes as the enumerated possible values is probably never
      going to be a realistic possibility.
     </p>
     <p>
      See BCP 47 at <a href=\"http://www.rfc-editor.org/rfc/bcp/bcp47.txt\">
       http://www.rfc-editor.org/rfc/bcp/bcp47.txt</a>
      and the IANA language subtag registry at
      <a href=\"http://www.iana.org/assignments/language-subtag-registry\">
       http://www.iana.org/assignments/language-subtag-registry</a>
      for further information.
     </p>
     <p>
      The union allows for the 'un-declaration' of xml:lang with
      the empty string.
     </p>
    </div>")
	attr namespace.LangType lang;
}

@ExtendedMetaData(name="Languages_._type", kind="elementOnly")
class LanguagesType {

	@ExtendedMetaData(kind="element", name="Language", namespace="##targetNamespace")
	@GenModel(documentation="Identifier of a language used by the data(set) contents.
      This language identifier shall be as specified in IETF RFC 4646. The
      language tags shall be either complete 5 character codes (e.g. \"en-CA\"),
      or abbreviated 2 character codes (e.g. \"en\"). In addition to the RFC
      4646 codes, the server shall support the single special value \"
\" which
      is used to indicate \"any language\".")
	!unique attr type.Language[1] language;
}

@ExtendedMetaData(name="ManifestType", kind="elementOnly")
@GenModel(documentation="Unordered list of one or more groups of references to
      remote and/or local resources.")
class ManifestType extends BasicIdentificationType {

	@ExtendedMetaData(kind="element", name="ReferenceGroup", namespace="##targetNamespace")
	!resolve val ReferenceGroupType[+] referenceGroup;
}

@ExtendedMetaData(name="MetadataType", kind="elementOnly")
@GenModel(documentation="This element either references or contains more metadata
      about the element that includes this element. To reference metadata
      stored remotely, at least the xlinks:href attribute in xlink:simpleAttrs
      shall be included. Either at least one of the attributes in
      xlink:simpleAttrs or a substitute for the AbstractMetaData element shall
      be included, but not both. An Implementation Specification can restrict
      the contents of this element to always be a reference or always contain
      metadata. (Informative: This element was adapted from the
      metaDataProperty element in GML 3.0.)")
class MetadataType {

	@ExtendedMetaData(kind="group", name="AbstractMetaData:group", namespace="##targetNamespace")
	@GenModel(documentation="Abstract element containing more metadata about the
      element that includes the containing \"metadata\" element. A specific
      server implementation, or an Implementation Specification, can define
      concrete elements in the AbstractMetaData substitution
      group.")
	attr ecore.EFeatureMapEntry abstractMetaDataGroup;

	@ExtendedMetaData(kind="element", name="AbstractMetaData", namespace="##targetNamespace", group="AbstractMetaData:group")
	@GenModel(documentation="Abstract element containing more metadata about the
      element that includes the containing \"metadata\" element. A specific
      server implementation, or an Implementation Specification, can define
      concrete elements in the AbstractMetaData substitution
      group.")
	readonly volatile transient derived !resolve val ecore.EObject abstractMetaData;

	@ExtendedMetaData(kind="attribute", name="about")
	@GenModel(documentation="Optional reference to the aspect of the element which
        includes this \"metadata\" element that this metadata provides more
        information about.")
	attr type.AnyURI about;

	@ExtendedMetaData(kind="attribute", name="actuate", namespace="http://www.w3.org/1999/xlink")
	unsettable attr ActuateType actuate;

	@ExtendedMetaData(kind="attribute", name="arcrole", namespace="http://www.w3.org/1999/xlink")
	attr ArcroleType_1 arcrole;

	@ExtendedMetaData(kind="attribute", name="href", namespace="http://www.w3.org/1999/xlink")
	attr HrefType_1 href;

	@ExtendedMetaData(kind="attribute", name="role", namespace="http://www.w3.org/1999/xlink")
	attr RoleType_1 role;

	@ExtendedMetaData(kind="attribute", name="show", namespace="http://www.w3.org/1999/xlink")
	unsettable attr ShowType show;

	@ExtendedMetaData(kind="attribute", name="title", namespace="http://www.w3.org/1999/xlink")
	attr TitleAttrType_1 title;

	@ExtendedMetaData(kind="attribute", name="type", namespace="http://www.w3.org/1999/xlink")
	unsettable attr TypeType type = "simple";
}

@ExtendedMetaData(name="NilValueType", kind="simple")
@GenModel(documentation="The value used (e.g. -255) to represent a nil value with
      optional nilReason and codeSpace attributes.")
class NilValueType extends CodeType {

	@ExtendedMetaData(kind="attribute", name="nilReason")
	@GenModel(documentation="An anyURI value which refers to a resource that
            describes the reason for the nil value")
	attr type.AnyURI nilReason;
}

@ExtendedMetaData(name="NoValues_._type", kind="empty")
class NoValuesType {
}

@ExtendedMetaData(name="OnlineResourceType", kind="empty")
@GenModel(documentation="Reference to on-line resource from which data can be
      obtained.
For OWS use in the service metadata document, the
      CI_OnlineResource class was XML encoded as the attributeGroup
      \"xlink:simpleAttrs\", as used in GML.")
class OnlineResourceType {

	@ExtendedMetaData(kind="attribute", name="actuate", namespace="http://www.w3.org/1999/xlink")
	unsettable attr ActuateType actuate;

	@ExtendedMetaData(kind="attribute", name="arcrole", namespace="http://www.w3.org/1999/xlink")
	attr ArcroleType_2 arcrole;

	@ExtendedMetaData(kind="attribute", name="href", namespace="http://www.w3.org/1999/xlink")
	attr HrefType_2 href;

	@ExtendedMetaData(kind="attribute", name="role", namespace="http://www.w3.org/1999/xlink")
	attr RoleType_2 role;

	@ExtendedMetaData(kind="attribute", name="show", namespace="http://www.w3.org/1999/xlink")
	unsettable attr ShowType show;

	@ExtendedMetaData(kind="attribute", name="title", namespace="http://www.w3.org/1999/xlink")
	attr TitleAttrType_2 title;

	@ExtendedMetaData(kind="attribute", name="type", namespace="http://www.w3.org/1999/xlink")
	unsettable attr TypeType type = "simple";
}

@ExtendedMetaData(name="OperationsMetadata_._type", kind="elementOnly")
class OperationsMetadataType {

	@ExtendedMetaData(kind="element", name="Operation", namespace="##targetNamespace")
	@GenModel(documentation="Metadata for unordered list of all the (requests
            for) operations that this server interface implements. The list of
            required and optional operations implemented shall be specified in
            the Implementation Specification for this service.")
	!resolve val OperationType[2..*] operation;

	@ExtendedMetaData(kind="element", name="Parameter", namespace="##targetNamespace")
	@GenModel(documentation="Optional unordered list of parameter valid domains
            that each apply to one or more operations which this server
            interface implements. The list of required and optional parameter
            domain limitations shall be specified in the Implementation
            Specification for this service.")
	!resolve val DomainType[*] parameter;

	@ExtendedMetaData(kind="element", name="Constraint", namespace="##targetNamespace")
	@GenModel(documentation="Optional unordered list of valid domain constraints
            on non-parameter quantities that each apply to this server. The
            list of required and optional constraints shall be specified in
            the Implementation Specification for this service.")
	!resolve val DomainType[*] constraint;

	@ExtendedMetaData(kind="element", name="ExtendedCapabilities", namespace="##targetNamespace")
	@GenModel(documentation="Individual software vendors and servers can use this
      element to provide metadata about any additional server
      abilities.")
	!resolve val ecore.EObject extendedCapabilities;
}

@ExtendedMetaData(name="Operation_._type", kind="elementOnly")
class OperationType {

	@ExtendedMetaData(kind="element", name="DCP", namespace="##targetNamespace")
	@GenModel(documentation="Unordered list of Distributed Computing Platforms
            (DCPs) supported for this operation. At present, only the HTTP DCP
            is defined, so this element will appear only once.")
	!resolve val DCPType[+] dCP;

	@ExtendedMetaData(kind="element", name="Parameter", namespace="##targetNamespace")
	@GenModel(documentation="Optional unordered list of parameter domains that
            each apply to this operation which this server implements. If one
            of these Parameter elements has the same \"name\" attribute as a
            Parameter element in the OperationsMetadata element, this
            Parameter element shall override the other one for this operation.
            The list of required and optional parameter domain limitations for
            this operation shall be specified in the Implementation
            Specification for this service.")
	!resolve val DomainType[*] parameter;

	@ExtendedMetaData(kind="element", name="Constraint", namespace="##targetNamespace")
	@GenModel(documentation="Optional unordered list of valid domain constraints
            on non-parameter quantities that each apply to this operation. If
            one of these Constraint elements has the same \"name\" attribute as
            a Constraint element in the OperationsMetadata element, this
            Constraint element shall override the other one for this
            operation. The list of required and optional constraints for this
            operation shall be specified in the Implementation Specification
            for this service.")
	!resolve val DomainType[*] constraint;

	@ExtendedMetaData(kind="group", name="Metadata:group", namespace="##targetNamespace")
	@GenModel(documentation="Optional unordered list of additional metadata
            about this operation and its' implementation. A list of required
            and optional metadata elements for this operation should be
            specified in the Implementation Specification for this service.
            (Informative: This metadata might specify the operation request
            parameters or provide the XML Schemas for the operation
            request.)")
	!unique attr ecore.EFeatureMapEntry[*] metadataGroup;

	@ExtendedMetaData(kind="element", name="Metadata", namespace="##targetNamespace", group="Metadata:group")
	@GenModel(documentation="Optional unordered list of additional metadata
            about this operation and its' implementation. A list of required
            and optional metadata elements for this operation should be
            specified in the Implementation Specification for this service.
            (Informative: This metadata might specify the operation request
            parameters or provide the XML Schemas for the operation
            request.)")
	volatile transient derived !resolve val MetadataType[*] metadata;

	@ExtendedMetaData(kind="attribute", name="name")
	@GenModel(documentation="Name or identifier of this operation (request) (for
          example, GetCapabilities). The list of required and optional
          operations implemented shall be specified in the Implementation
          Specification for this service.")
	attr type.String[1] name;
}

@ExtendedMetaData(name="RangeType", kind="elementOnly")
@GenModel(documentation="A range of values of a numeric parameter. This range can
      be continuous or discrete, defined by a fixed spacing between adjacent
      valid values. If the MinimumValue or MaximumValue is not included, there
      is no value limit in that direction. Inclusion of the specified minimum
      and maximum values in the range shall be defined by the
      rangeClosure.")
class RangeType {

	@ExtendedMetaData(kind="element", name="MinimumValue", namespace="##targetNamespace")
	@GenModel(documentation="Minimum value of this numeric parameter.")
	!resolve val ValueType minimumValue;

	@ExtendedMetaData(kind="element", name="MaximumValue", namespace="##targetNamespace")
	@GenModel(documentation="Maximum value of this numeric parameter.")
	!resolve val ValueType maximumValue;

	@ExtendedMetaData(kind="element", name="Spacing", namespace="##targetNamespace")
	@GenModel(documentation="Shall be included when the allowed values are NOT
          continuous in this range. Shall not be included when the allowed
          values are continuous in this range.")
	!resolve val ValueType spacing;

	@ExtendedMetaData(kind="attribute", name="rangeClosure", namespace="##targetNamespace")
	@GenModel(documentation="Shall be included unless the default value
        applies.")
	unsettable attr RangeClosureType rangeClosure;
}

@ExtendedMetaData(name="ReferenceGroupType", kind="elementOnly")
@GenModel(documentation="Logical group of one or more references to remote and/or
      local resources, allowing including metadata about that group. A Group
      can be used instead of a Manifest that can only contain one
      group.")
class ReferenceGroupType extends BasicIdentificationType {

	@ExtendedMetaData(kind="group", name="AbstractReferenceBase:group", namespace="##targetNamespace")
	!unique attr ecore.EFeatureMapEntry[+] abstractReferenceBaseGroup;

	@ExtendedMetaData(kind="element", name="AbstractReferenceBase", namespace="##targetNamespace", group="AbstractReferenceBase:group")
	readonly volatile transient derived !resolve val AbstractReferenceBaseType[+] abstractReferenceBase;
}

@ExtendedMetaData(name="ReferenceType", kind="elementOnly")
@GenModel(documentation="Complete reference to a remote or local resource,
      allowing including metadata about that resource.")
class ReferenceType extends AbstractReferenceBaseType {

	@ExtendedMetaData(kind="element", name="Identifier", namespace="##targetNamespace")
	@GenModel(documentation="Optional unique identifier of the referenced
              resource.")
	!resolve val CodeType identifier;

	@ExtendedMetaData(kind="element", name="Abstract", namespace="##targetNamespace")
	@GenModel(documentation="Brief narrative description of this resource, normally
      used for display to humans.")
	!resolve val LanguageStringType[*] ~abstract;

	@ExtendedMetaData(kind="element", name="Format", namespace="##targetNamespace")
	@GenModel(documentation="The format of the referenced resource. This
              element is omitted when the mime type is indicated in the http
              header of the reference.")
	attr MimeType format;

	@ExtendedMetaData(kind="group", name="Metadata:group", namespace="##targetNamespace")
	@GenModel(documentation="Optional unordered list of additional metadata
              about this resource. A list of optional metadata elements for
              this ReferenceType could be specified in the Implementation
              Specification for each use of this type in a specific
              OWS.")
	!unique attr ecore.EFeatureMapEntry[*] metadataGroup;

	@ExtendedMetaData(kind="element", name="Metadata", namespace="##targetNamespace", group="Metadata:group")
	@GenModel(documentation="Optional unordered list of additional metadata
              about this resource. A list of optional metadata elements for
              this ReferenceType could be specified in the Implementation
              Specification for each use of this type in a specific
              OWS.")
	volatile transient derived !resolve val MetadataType[*] metadata;
}

@ExtendedMetaData(name="RequestMethodType", kind="elementOnly")
@GenModel(documentation="Connect point URL and any constraints for this HTTP
      request method for this operation request. In the OnlineResourceType,
      the xlink:href attribute in the xlink:simpleAttrs attribute group shall
      be used to contain this URL. The other attributes in the
      xlink:simpleAttrs attribute group should not be used.")
class RequestMethodType extends OnlineResourceType {

	@ExtendedMetaData(kind="element", name="Constraint", namespace="##targetNamespace")
	@GenModel(documentation="Optional unordered list of valid domain
              constraints on non-parameter quantities that each apply to this
              request method for this operation. If one of these Constraint
              elements has the same \"name\" attribute as a Constraint element
              in the OperationsMetadata or Operation element, this Constraint
              element shall override the other one for this operation. The
              list of required and optional constraints for this request
              method for this operation shall be specified in the
              Implementation Specification for this service.")
	!resolve val DomainType[*] constraint;
}

@ExtendedMetaData(name="ResponsiblePartySubsetType", kind="elementOnly")
@GenModel(documentation="Identification of, and means of communication with,
      person responsible for the server.
For OWS use in the ServiceProvider section of a service
      metadata document, the optional organizationName element was removed,
      since this type is always used with the ProviderName element which
      provides that information. The mandatory \"role\" element was changed to
      optional, since no clear use of this information is known in the
      ServiceProvider section.")
class ResponsiblePartySubsetType {

	@ExtendedMetaData(kind="element", name="IndividualName", namespace="##targetNamespace")
	@GenModel(documentation="Name of the responsible person: surname, given name,
      title separated by a delimiter.")
	attr type.String individualName;

	@ExtendedMetaData(kind="element", name="PositionName", namespace="##targetNamespace")
	@GenModel(documentation="Role or position of the responsible
      person.")
	attr type.String positionName;

	@ExtendedMetaData(kind="element", name="ContactInfo", namespace="##targetNamespace")
	@GenModel(documentation="Address of the responsible party.")
	!resolve val ContactType contactInfo;

	@ExtendedMetaData(kind="element", name="Role", namespace="##targetNamespace")
	@GenModel(documentation="Function performed by the responsible party. Possible
      values of this Role shall include the values and the meanings listed in
      Subclause B.5.5 of ISO 19115:2003.")
	!resolve val CodeType role;
}

@ExtendedMetaData(name="ResponsiblePartyType", kind="elementOnly")
@GenModel(documentation="Identification of, and means of communication with,
      person responsible for the server. At least one of IndividualName,
      OrganisationName, or PositionName shall be included.")
class ResponsiblePartyType {

	@ExtendedMetaData(kind="element", name="IndividualName", namespace="##targetNamespace")
	@GenModel(documentation="Name of the responsible person: surname, given name,
      title separated by a delimiter.")
	attr type.String individualName;

	@ExtendedMetaData(kind="element", name="OrganisationName", namespace="##targetNamespace")
	@GenModel(documentation="Name of the responsible organization.")
	attr type.String organisationName;

	@ExtendedMetaData(kind="element", name="PositionName", namespace="##targetNamespace")
	@GenModel(documentation="Role or position of the responsible
      person.")
	attr type.String positionName;

	@ExtendedMetaData(kind="element", name="ContactInfo", namespace="##targetNamespace")
	@GenModel(documentation="Address of the responsible party.")
	!resolve val ContactType contactInfo;

	@ExtendedMetaData(kind="element", name="Role", namespace="##targetNamespace")
	@GenModel(documentation="Function performed by the responsible party. Possible
      values of this Role shall include the values and the meanings listed in
      Subclause B.5.5 of ISO 19115:2003.")
	!resolve val CodeType[1] role;
}

@ExtendedMetaData(name="SectionsType", kind="elementOnly")
@GenModel(documentation="Unordered list of zero or more names of requested
      sections in complete service metadata document. Each Section value shall
      contain an allowed section name as specified by each OWS specification.
      See Sections parameter subclause for more information.")
class SectionsType {

	@ExtendedMetaData(kind="element", name="Section", namespace="##targetNamespace")
	!unique attr String[*] section;
}

@ExtendedMetaData(name="ServiceIdentification_._type", kind="elementOnly")
class ServiceIdentificationType extends DescriptionType {

	@ExtendedMetaData(kind="element", name="ServiceType", namespace="##targetNamespace")
	@GenModel(documentation="A service type name from a registry of
                services. For example, the values of the codeSpace URI and
                name and code string may be \"OGC\" and \"catalogue.\" This type
                name is normally used for machine-to-machine
                communication.")
	!resolve val CodeType[1] serviceType;

	@ExtendedMetaData(kind="element", name="ServiceTypeVersion", namespace="##targetNamespace")
	@GenModel(documentation="Unordered list of one or more versions of this
                service type implemented by this server. This information is
                not adequate for version negotiation, and shall not be used
                for that purpose.")
	!unique attr VersionType[1] serviceTypeVersion;

	@ExtendedMetaData(kind="element", name="Profile", namespace="##targetNamespace")
	@GenModel(documentation="Unordered list of identifiers of Application
                Profiles that are implemented by this server. This element
                should be included for each specified application profile
                implemented by this server. The identifier value should be
                specified by each Application Profile. If this element is
                omitted, no meaning is implied.")
	!unique attr type.AnyURI profile;

	@ExtendedMetaData(kind="element", name="Fees", namespace="##targetNamespace")
	@GenModel(documentation="If this element is omitted, no meaning is
                implied.")
	attr type.String fees;

	@ExtendedMetaData(kind="element", name="AccessConstraints", namespace="##targetNamespace")
	@GenModel(documentation="Unordered list of access constraints applied to
                assure the protection of privacy or intellectual property, and
                any other restrictions on retrieving or using data from or
                otherwise using this server. The reserved value NONE (case
                insensitive) shall be used to mean no access constraints are
                imposed. When this element is omitted, no meaning is
                implied.")
	!unique attr type.String accessConstraints;
}

@ExtendedMetaData(name="ServiceProvider_._type", kind="elementOnly")
class ServiceProviderType {

	@ExtendedMetaData(kind="element", name="ProviderName", namespace="##targetNamespace")
	@GenModel(documentation="A unique identifier for the service provider
            organization.")
	attr type.String[1] providerName;

	@ExtendedMetaData(kind="element", name="ProviderSite", namespace="##targetNamespace")
	@GenModel(documentation="Reference to the most relevant web site of the
            service provider.")
	!resolve val OnlineResourceType providerSite;

	@ExtendedMetaData(kind="element", name="ServiceContact", namespace="##targetNamespace")
	@GenModel(documentation="Information for contacting the service provider.
            The OnlineResource element within this ServiceContact element
            should not be used to reference a web site of the service
            provider.")
	!resolve val ResponsiblePartySubsetType[1] serviceContact;
}

@ExtendedMetaData(name="ServiceReferenceType", kind="elementOnly")
@GenModel(documentation="Complete reference to a remote resource that needs to be
      retrieved from an OWS using an XML-encoded operation request. This
      element shall be used, within an InputData or Manifest element that is
      used for input data, when that input data needs to be retrieved from
      another web service using a XML-encoded OWS operation request. This
      element shall not be used for local payload input data or for requesting
      the resource from a web server using HTTP Get.")
class ServiceReferenceType extends ReferenceType {

	@ExtendedMetaData(kind="element", name="RequestMessage", namespace="##targetNamespace")
	@GenModel(documentation="The XML-encoded operation request message to be
              sent to request this input data from another web server using
              HTTP Post.")
	!resolve val ecore.EObject requestMessage;

	@ExtendedMetaData(kind="element", name="RequestMessageReference", namespace="##targetNamespace")
	@GenModel(documentation="Reference to the XML-encoded operation request
              message to be sent to request this input data from another web
              server using HTTP Post. The referenced message shall be attached
              to the same message (using the cid scheme), or be accessible
              using a URL.")
	attr type.AnyURI requestMessageReference;
}

@ExtendedMetaData(name="TelephoneType", kind="elementOnly")
@GenModel(documentation="Telephone numbers for contacting the responsible
      individual or organization.")
class TelephoneType {

	@ExtendedMetaData(kind="element", name="Voice", namespace="##targetNamespace")
	@GenModel(documentation="Telephone number by which individuals can speak to
          the responsible organization or individual.")
	!unique attr type.String voice;

	@ExtendedMetaData(kind="element", name="Facsimile", namespace="##targetNamespace")
	@GenModel(documentation="Telephone number of a facsimile machine for the
          responsible organization or individual.")
	!unique attr type.String facsimile;
}

@ExtendedMetaData(name="UnNamedDomainType", kind="elementOnly")
@GenModel(documentation="Valid domain (or allowed set of values) of one quantity,
      with needed metadata but without a quantity name or
      identifier.")
class UnNamedDomainType {

	@ExtendedMetaData(kind="element", name="AllowedValues", namespace="##targetNamespace")
	@GenModel(documentation="List of all the valid values and/or ranges of values for
      this quantity. For numeric quantities, signed values should be ordered
      from negative infinity to positive infinity.")
	!resolve val AllowedValuesType allowedValues;

	@ExtendedMetaData(kind="element", name="AnyValue", namespace="##targetNamespace")
	@GenModel(documentation="Specifies that any value is allowed for this
      parameter.")
	!resolve val AnyValueType anyValue;

	@ExtendedMetaData(kind="element", name="NoValues", namespace="##targetNamespace")
	@GenModel(documentation="Specifies that no values are allowed for this parameter
      or quantity.")
	!resolve val NoValuesType noValues;

	@ExtendedMetaData(kind="element", name="ValuesReference", namespace="##targetNamespace")
	@GenModel(documentation="Reference to externally specified list of all the valid
      values and/or ranges of values for this quantity. (Informative: This
      element was simplified from the metaDataProperty element in GML
      3.0.)")
	!resolve val ValuesReferenceType valuesReference;

	@ExtendedMetaData(kind="element", name="DefaultValue", namespace="##targetNamespace")
	@GenModel(documentation="Optional default value for this quantity, which
          should be included when this quantity has a default
          value.")
	!resolve val ValueType defaultValue;

	@ExtendedMetaData(kind="element", name="Meaning", namespace="##targetNamespace")
	@GenModel(documentation="Meaning metadata should be referenced or included for
          each quantity.")
	!resolve val DomainMetadataType meaning;

	@ExtendedMetaData(kind="element", name="DataType", namespace="##targetNamespace")
	@GenModel(documentation="This data type metadata should be referenced or
          included for each quantity.")
	!resolve val DomainMetadataType dataType;

	@ExtendedMetaData(kind="element", name="UOM", namespace="##targetNamespace")
	@GenModel(documentation="Identifier of unit of measure of this set of values.
          Should be included then this set of values has units (and not a more
          complete reference system).")
	!resolve val DomainMetadataType uOM;

	@ExtendedMetaData(kind="element", name="ReferenceSystem", namespace="##targetNamespace")
	@GenModel(documentation="Identifier of reference system used by this set of
          values. Should be included then this set of values has a reference
          system (not just units).")
	!resolve val DomainMetadataType referenceSystem;

	@ExtendedMetaData(kind="group", name="Metadata:group", namespace="##targetNamespace")
	@GenModel(documentation="Optional unordered list of other metadata about this
          quantity. A list of required and optional other metadata elements
          for this quantity should be specified in the Implementation
          Specification for this service.")
	!unique attr ecore.EFeatureMapEntry[*] metadataGroup;

	@ExtendedMetaData(kind="element", name="Metadata", namespace="##targetNamespace", group="Metadata:group")
	@GenModel(documentation="Optional unordered list of other metadata about this
          quantity. A list of required and optional other metadata elements
          for this quantity should be specified in the Implementation
          Specification for this service.")
	volatile transient derived !resolve val MetadataType[*] metadata;
}

@ExtendedMetaData(name="ValuesReference_._type", kind="simple")
class ValuesReferenceType {

	@ExtendedMetaData(name=":0", kind="simple")
	@GenModel(documentation="Human-readable name of the list of values provided
            by the referenced document. Can be empty string when this list has
            no name.")
	attr type.String value;

	@ExtendedMetaData(kind="attribute", name="reference", namespace="##targetNamespace")
	@GenModel(documentation="Reference to data or metadata recorded elsewhere, either
      external to this XML document or within it. Whenever practical, this
      attribute should be a URL from which this metadata can be electronically
      retrieved. Alternately, this attribute can reference a URN for
      well-known metadata. For example, such a URN could be a URN defined in
      the \"ogc\" URN namespace.")
	attr type.AnyURI[1] reference;
}

@ExtendedMetaData(name="ValueType", kind="simple")
@GenModel(documentation="A single value, encoded as a string. This type can be
      used for one value, for a spacing between allowed values, or for the
      default value of a parameter.")
class ValueType {

	@ExtendedMetaData(name=":0", kind="simple")
	attr type.String value;
}

@ExtendedMetaData(name="WGS84BoundingBoxType", kind="elementOnly")
@GenModel(documentation="XML encoded minimum rectangular bounding box (or region)
      parameter, surrounding all the associated data. This box is specialized
      for use with the 2D WGS 84 coordinate reference system with decimal
      values of longitude and latitude.
This type is adapted from the general BoundingBoxType,
      with modified contents and documentation for use with the 2D WGS 84
      coordinate reference system.")
class WGS84BoundingBoxType extends BoundingBoxType {
}

@ExtendedMetaData(name="rangeClosure_._type")
enum RangeClosureType {

	@GenModel(documentation="The specified minimum and maximum values are
            included in this range.")
	closed = 0;

	@GenModel(documentation="The specified minimum and maximum values are NOT
            included in this range.")
	open = 1;

	@GenModel(documentation="The specified minimum value is NOT included in this
            range, and the specified maximum value IS included in this
            range.")
	openClosed = 2;

	@GenModel(documentation="The specified minimum value IS included in this
            range, and the specified maximum value is NOT included in this
            range.")
	closedOpen = 3;
}

@ExtendedMetaData(name="MimeType", baseType="http://www.eclipse.org/emf/2003/XMLType#string", pattern="(application|audio|image|text|video|message|multipart|model)/.+(;\s*.+=.+)*")
datatype MimeType : java.lang.String;

@ExtendedMetaData(name="PositionType", itemType="http://www.eclipse.org/emf/2003/XMLType#double")
datatype PositionType : java.util.List;

@ExtendedMetaData(name="PositionType2D", baseType="PositionType", length="2")
datatype PositionType2D : java.util.List;

@ExtendedMetaData(name="rangeClosure_._type:Object", baseType="rangeClosure_._type")
datatype RangeClosureTypeObject : net.opengis.ows20.RangeClosureType;

@ExtendedMetaData(name="ServiceType", baseType="http://www.eclipse.org/emf/2003/XMLType#string")
datatype ServiceType : java.lang.String;

@ExtendedMetaData(name="UpdateSequenceType", baseType="http://www.eclipse.org/emf/2003/XMLType#string")
datatype UpdateSequenceType : java.lang.String;

@ExtendedMetaData(name="VersionType", baseType="http://www.eclipse.org/emf/2003/XMLType#string", pattern="\d+\.\d?\d\.\d?\d")
datatype VersionType : java.lang.String;

@ExtendedMetaData(name="version_._type", baseType="http://www.eclipse.org/emf/2003/XMLType#string", pattern="\d+\.\d?\d\.\d?\d")
datatype VersionType1 : java.lang.String;

datatype ArcroleType : java.lang.String;

datatype HrefType : java.lang.String;

datatype RoleType : java.lang.String;

datatype TitleAttrType : java.lang.String;

datatype ArcroleType_1 : java.lang.String;

datatype HrefType_1 : java.lang.String;

datatype RoleType_1 : java.lang.String;

datatype TitleAttrType_1 : java.lang.String;

datatype ArcroleType_2 : java.lang.String;

datatype HrefType_2 : java.lang.String;

datatype RoleType_2 : java.lang.String;

datatype TitleAttrType_2 : java.lang.String;

datatype ActuateType : org.w3.xlink.ActuateType;

datatype ShowType : org.w3.xlink.ShowType;

datatype TypeType : org.w3.xlink.TypeType;

